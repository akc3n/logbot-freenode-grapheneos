00:07:11 <renlord> strcat[m]: anyway to do auditor/auditee style attestation for desktop uefi firmwares?
00:07:34 <strcat[m]> no point for most it doesn't really work
00:07:42 <strcat[m]> you could do something similar on those windows secured core pcs
00:07:46 <strcat[m]> except you don't know the values
00:07:59 <strcat[m]> so you'd need to hard-wire each piece of hardware and as soon as it gets updated it will break
00:08:02 <strcat[m]> doesn't really work
00:09:53 <renlord> i assume windows do attestation checks in the background or something?
00:10:02 <renlord> with those secured core pcs?
00:16:55 <strcat[m]> I don't think so unless you use enterprise stuff
00:22:29 <cn3m[m]> I can't believe the misinformation about GrapheneOS
00:24:28 <cn3m[m]> it's so pervasive
00:29:42 <renlord> cn3m[m]: where do you see this
00:38:35 <cx2[m]> Would the same principle apply to GrapheneOS as it does with a desktop where its advisable to conduct daily usage in a non-"admin" (owner) profile?
00:39:46 <twitx[m]> Hey strcat some Question does Bluetooth have a BSSID like WI-FI has? (or something similar)
00:41:08 <renlord> twitx[m]: yes
00:41:20 <renlord> it has a mac address
00:43:24 <zaxxa[m]> > I need to learn that stuff well
00:43:24 <zaxxa[m]> How do you learn to code well?
00:46:17 <twitx[m]> Couldn't then somebody find out how often you go somewhere and when you were there and so on?
00:53:40 <strcat[m]> if you're interested in learning about Bluetooth and how Bluetooth privacy works, my recommendation is to do research / reading
00:53:53 <strcat[m]> instead of speculating and making bad assumptions
00:54:59 <strcat[m]> I also really don't need to be pinged with random questions
01:02:09 <aeonsolution[m]> hi everyone, are there any developers for bromite on this channel?
01:13:09 <strcat[m]> cn3m: it's very helpful to have you taking care of the subreddit, etc.
01:13:13 <strcat[m]> saves a lot of time and energy for me
01:13:29 <strcat[m]> reddit is a horrible place
01:30:42 <DannyWorkOrderPr> <strcat[m] "reddit is a horrible place"> +1, and thanks cn3m
01:36:18 <cn3m[m]> <strcat[m] "reddit is a horrible place"> Agreed. Any time. Absolutely worth it here.
01:38:03 <cn3m[m]> @madaidan.:matrix.org I pinged you on Reddit. They are talking about sandboxes.
01:47:04 <strcat[m]> cn3m: project is under constant siege from people spreading misinformation, harassing developers, etc.
01:47:05 <strcat[m]> just how it is
01:51:36 <cn3m[m]> The more time you have to work the better. I will do what I can
01:51:39 <cn3m[m]> if there's any more you'd like me to do let me know
02:03:45 <strcat[m]> https://twitter.com/whitequark/status/1267519958235459589
02:03:59 <strcat[m]> tempted to elaborate there
02:06:23 <madaidan[m]> How long do Twitter suspensions for creating an account over Tor usually last? I made an appeal.
02:08:57 <nickcalyx[m]> is that against the rules?
02:09:09 <nickcalyx[m]> I don't think it is
02:09:16 <madaidan[m]> <nickcalyx[m] "is that against the rules?"> I don't think so
02:09:32 <madaidan[m]> They just suspend it automatically because Tor has a bad rep
02:13:38 <nickcalyx[m]> I think everyone I know who works on tor accesses twitter over tor
02:14:19 <aeonsolution[m]> strcat: do it!
02:15:23 <aeonsolution[m]> <strcat[m] "https://twitter.com/whitequark/s"> referencing the tweet from whitequark
02:17:03 <aeonsolution[m]> really glad whitequark made the comment though
02:22:52 <DannyWorkOrderPr> <nickcalyx[m] "I think everyone I know who work"> Is it just luck, if they're dickheads about it or not? My n is 1, but, did not have a good time creating an account (instantly suspended/read-only mode, no response to support inquiry)
02:23:31 <nickcalyx[m]> hard to say
02:40:04 <renlord> why'd a PL project have a political opinion about protests
02:40:05 <renlord> wtf
02:41:11 <strcat[m]> they like trying to appear progressive and inclusive while not walking the walk
02:41:42 <strcat[m]> they're always trying to create that appearance
02:41:55 <renlord> and what is with the Fackler controversy?
02:42:11 <renlord> so confused with what's being "hinted" at twitter
02:42:25 <renlord> and people dont fully express what they are trying to hint at
02:42:34 <strcat[m]> renlord: one of the members of Rust's official development team works for Palantir and they sponsored at least one event among other things
02:42:39 <strcat[m]> Palantir uses and supports Rust
02:42:48 <furofuro_01[m]> <cn3m[m] "I really don't care what people "> Honestly, same here, but not sure where to contribute (since I am a total newbie at coding, and has not enough knowledge to combat misinformation).
02:42:57 <renlord> OK, so what?
02:42:58 <strcat[m]> it's just funny seeing them trying to pull their bullshitting about this stuff
02:43:17 <renlord> many other morally bankrupt companies also use C
02:43:20 <renlord> or C++ or wtv
02:43:26 <renlord> btw, they also use English
02:43:37 <renlord> i cant really connect the dots
02:43:39 <renlord> can you help me?
02:43:52 <strcat[m]> >one of the members of Rust's official development team works for Palantir and they sponsored at least one event among other things
02:44:27 <strcat[m]> Mozilla (and Rust included) always want to try giving people the impression they are super progressive while reality does not really match that
02:44:53 <strcat[m]> Brendan would still be CEO if there hadn't been a big PR blowup
02:45:35 <strcat[m]> it's just about appearances
02:45:42 <madaidan[m]> <renlord "why'd a PL project have a politi"> Mozilla always tries to push their political views AFAIK
02:45:53 <cn3m[m]> Encrypted DNS lulz
02:45:57 <strcat[m]> they post those empty tweets while they work with companies building surveillance tools for military / police
02:46:48 <strcat[m]> company unironically named after surveillance/brainwashing orbs controlled by sauron
02:48:23 <strcat[m]> renlord: the point is that they love talking about this as if they actually care about it and yet in reality they exclude people from the project for being different than them, having different views (i.e. not falling into their neoliberal SF bay area views) and they actively participate in surveillance, deportations, etc.
02:48:24 <strcat[m]> it's talk
02:48:30 <strcat[m]> that's how they want to be perceived
02:48:55 <strcat[m]> attempt at marketing
02:53:47 * jcpicard32[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/PKWPvPbflWWblPHTfnvetPNA >
02:53:48 <renlord> mm ok, weird.
02:53:53 <renlord> and awkward.
02:57:13 <strcat[m]> also imagine naming your surveillance company palantir
02:57:17 <strcat[m]> and pretending you aren't the bad guys
02:57:32 <jcpicard32[m]> That's gonna be a yikes from me, dog
02:57:59 <renlord> was that a reference to LOTR?
02:58:00 <renlord> lol
02:58:14 <jcpicard32[m]> I'd assume so
02:58:29 <DannyWorkOrderPr> > also imagine naming your surveillance company palantir
02:58:30 <DannyWorkOrderPr> > and pretending you aren't the bad guys
02:58:30 <DannyWorkOrderPr> Based strcat
02:58:44 <DannyWorkOrderPr> (First and last time I say "based", you've earned it, haha)
02:59:02 <strcat[m]> renlord: https://www.youtube.com/watch?v=W7P9xmVdYx4
02:59:07 <strcat[m]> yes they named their company after these
02:59:27 <renlord> kek
02:59:31 <strcat[m]> they're covered more in the silmarillion
02:59:49 <strcat[m]> http://tolkiengateway.net/wiki/Palant%C3%ADri
03:00:55 <strcat[m]> renlord: imagine naming your company after this shit
03:00:56 <strcat[m]> really
03:01:51 <aeonsolution[m]> whats crazy about it, is that there are activists that have literally gone and protested the company
03:02:08 <renlord> our government is a big patron of palatir
03:02:11 <renlord> *palantir
03:02:14 <cn3m[m]> If anyone is the good guy of the open web it's ironically Apple
03:02:28 <cn3m[m]> or hell even Google
03:02:33 <aeonsolution[m]> how are they still trying to pretend that they care about activism, its amazing
03:03:03 <strcat[m]> renlord: yeah they are a mass surveillance / tracking company focused on police / military services
03:03:19 <renlord> but still, my point about potentially more morally bankrupt companies also sponsor mozilla
03:03:20 <renlord> lol
03:04:11 <strcat[m]> renlord: it is just an example of their duplicitous behavior
03:05:39 <cn3m[m]> does anyone have any good security study resources? I have a lot of Corona downtime
03:05:55 <cn3m[m]> would like to spend it learning if I can
03:05:57 <renlord> S&P Oakland proceedings?
03:06:01 <renlord> lol
03:07:24 <aeonsolution[m]> <cn3m[m] "does anyone have any good securi"> is there something specific you are looking at?
03:07:49 <aeonsolution[m]> opsec or malware research stuff?
03:07:55 <cn3m[m]> I wish I knew more about memory safety
03:08:30 <cn3m[m]> I know the basics of overflows and reuse attacks and all that, but not anything in depth
03:08:33 <aeonsolution[m]> yeah i got nothing on that, maybe some books on secure coding i've come across
03:08:34 <renlord> Emery Berger has a lot of work on memory stuff
03:09:02 <cn3m[m]> <renlord "Emery Berger has a lot of work o"> thanks I'll check it out always wrote in memory safe languages
03:09:21 <cn3m[m]> the goal is one day I get more help on the main privacy subreddits and I can start working on GrapheneOS
03:18:22 <DannyWorkOrderPr> <cn3m[m] "or hell even Google "> It really is. More freedom and more tech trust+flourish = more avenues for ad revenue
03:24:14 <radixed9[m]> Which first project is a higher priority? Google Play stub implementation or an app store based on the Updater app
03:24:33 <renlord> app store
03:27:19 <radixed9[m]> renlord: Do you have any guidance on what the project is looking for beside building guide's development guidelines? I could not find a GitHub issue
03:27:48 <renlord> radixed9[m]: https://github.com/GrapheneOS/os_issue_tracker/issues
03:27:52 <renlord> there are 75 open issues
03:28:27 <radixed9[m]> I can't find one related to a store
03:28:45 <renlord> radixed9[m]: https://github.com/GrapheneOS/os_issue_tracker/issues/94
03:29:06 <radixed9[m]> thank you
03:35:21 <radixed9[m]> If I use the Updater app as a base that is written in Java. Would the app updater be considered a new project and rewritten in Kotlin?
03:35:47 <renlord> i intended to do that instead
03:36:06 <renlord> if you rewrite in kotlin i dont think there's an easy way to build it as part of the aosp tree
03:36:33 <radixed9[m]> I should write it in Java then?
03:36:42 <renlord> up to you
03:40:38 <radixed9[m]> If I understand correctly the pros and cons Kotlin will not be easy since the build system, but Java will need to be rewritten down the road? Java will be easier as the Updater app is written in Java. Thank you
03:42:41 <renlord> radixed9[m]: maybe when the build system actually supports kotlin
03:44:52 <radixed9[m]> Java appears it's the best choice for this. Thank you. I'll get to work figuring out app updates
03:49:11 <radixed9[m]> I should clarify this is a separate app based off the Updater app. Correct? To start it will only update built in apps and rely on the current verification system of the OS for these apps. That is my understanding of issue #94
03:49:27 <renlord> yes
03:49:50 <radixed9[m]> Thank you for your help renlord:
03:49:51 <renlord> you might want to verify the downloaded payload checksum
03:50:51 <strcat[m]> radixed9: you need to make a metadata file that's signed with a timestamp
03:50:52 <strcat[m]> verify that
03:51:00 <strcat[m]> and it should list the apps + versions
03:51:04 <strcat[m]> and use that to know when to upgrade them
03:51:15 <strcat[m]> it needs to be very simple/minimal and well designed
03:52:00 <strcat[m]> initially it doesn't need much of a UI
03:52:06 <strcat[m]> just settings and notifications like Updater
03:52:12 <strcat[m]> since it only needs to initially update apps
03:52:14 <strcat[m]> not install new ones
03:55:46 <boniek[m]> https://safeboot.dev/
03:56:13 <radixed9[m]> Understood. Fetch > make sure it is a newer metadata file than current > verify metadata file > download any apps that were behind on verison compared to the verified metadata file > update those apps after checking the hash(stored in the metadata file?)
03:57:00 <radixed9[m]> This will include Vanadium, Auditor, and PDF Viewer only iirc
03:57:10 <citypw> boniek[m]: that's a nice one
03:57:31 <citypw> but ppl here should try heads first
03:57:48 <radixed9[m]> and write it in Java as simply as minimal as possible
03:58:07 <strcat[m]> radixed9: you have to verify the signature first ofc
03:58:08 <radixed9[m]>  * and write it in Java as minimal as possible
03:58:33 <boniek[m]> <citypw "boniek: that's a nice one"> yeah Heads is even better but requires specific hardware
03:58:57 <radixed9[m]> is step 3 placed incorrectly?
03:59:39 <strcat[m]> radixed9: you shouldn't do anything until you have verified the signature...
03:59:48 <citypw> yep, i run a few nodes based on customized heads on x11ssh which is one of cheap workstation board supported well by coreboot
03:59:51 <boniek[m]> anybody tried Heads with anything newer than Lenovo X230? :)
04:00:09 <radixed9[m]> strcat: thanks I see the logic flaw there
04:00:10 <citypw> boniek[m]: librem 15?
04:00:14 <boniek[m]> <citypw "yep, i run a few nodes based on "> what board is that?
04:00:32 <radixed9[m]> Fetch >  verify metadata file > make sure it is a newer metadata file than current > download any apps that were behind on verison compared to the verified metadata file > update those apps after checking the hash as stored in the metadata file
04:00:40 <boniek[m]> <citypw "boniek: librem 15?"> 15 inches is too big ;D
04:01:23 <citypw> https://www.supermicro.com/en/products/motherboard/X11SSH-TF
04:01:25 <radixed9[m]> If I checked the date on the metadata file before verifying that would not be good if the update server was compromised
04:01:34 <boniek[m]> they have 13 inch version which is perfect
04:02:05 <boniek[m]> <citypw "https://www.supermicro.com/en/pr"> this is nice, thanks!
04:02:55 <boniek[m]> strcat:
04:03:08 <boniek[m]> strcat:  what just happened?:D
04:03:20 <citypw> this is new hardware model can be supported by coreboot.
04:04:23 <citypw> coreboot can support newer than kabylake easily but might lose some security features e.g: TXT due to it has to be provisioned in the manufacture
04:04:28 <renlord> these cpu cores are really old
04:04:41 <citypw> so i'll probably stay with kabylake for a while
04:05:31 <citypw> yep, it shipped since 2017
04:05:34 <citypw> a few years now
04:05:48 <strcat[m]> normal x86 machines don't support real verified boot
04:06:23 <citypw> strcat[m]: if you count secureboot;-)
04:06:40 <strcat[m]> citypw: not real verified boot and can't turn it into that
04:07:38 <citypw> yep, not unless the bootguard( bootjail) is enabled by default
04:08:17 <boniek[m]> I would love to read some sort of faq about all this stuff :)
04:08:42 <strcat[m]> citypw: https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-system-guard/how-hardware-based-root-of-trust-helps-protect-windows Microsoft has to do this workaround for how fucked up it is
04:09:14 <strcat[m]> that's for somewhat meaningful attestation
04:09:18 <strcat[m]> usually not possible - it's just not usable or meaningful
04:09:43 <strcat[m]> and real verified boot has a lot of issues with it on x86
04:10:20 <strcat[m]> and that's all not getting into the fact that traditional OSes don't support verified boot, among other things missing in their lack of security architecture
04:10:25 <strcat[m]> so it just doesn't accomplish anything
04:10:33 <strcat[m]> without using some OS that doesn't exist
04:11:11 <strcat[m]> protecting only the kernel or kernel + initramfs + kernel line (which most don't even do...) doesn't really do anything
04:11:18 <strcat[m]> and it can't even do that
04:12:31 <renlord> i thought efiloader can be configured to load a signed bootloader?
04:12:44 <strcat[m]> renlord: the earlier firmware isn't verified meaningfully
04:13:01 <renlord> is this whether or not uefi is behaving correctly?
04:13:02 <strcat[m]> also funny to bring up Purism earlier when they deliberately ship things in a far less secure than normal configuration
04:13:09 <strcat[m]> renlord: the problem is not UEFI
04:13:17 <citypw> on x86, you'll have to utilize some chip e.g: TPM. cu'z both verifiedboot and meansuredboot must be both co-exist to perform the verification and seal/unseal ops which to do further attestation
04:13:40 <strcat[m]> neither can really be done meaningfully on normal x86 hardware
04:14:04 <citypw> heads implemented it via totp token being sealed into tpm https://github.com/hardenedlinux/Debian-GNU-Linux-Profiles/tree/master/docs/hardened_boot
04:14:20 <citypw> strcat[m]: why?
04:14:21 <renlord> how does apple x86 do it then
04:14:51 <citypw> renlord: T2 as a root of trust but shift some metadata into UEFI runtime crap
04:15:04 <strcat[m]> renlord: they are the vendor, they get to set up boot guard, the firmware, etc.
04:15:08 <radixed9[m]> Isn't Purism the people shipping laptops without microcode updates for "privacy"?
04:15:16 <strcat[m]> I would not call the current gen macOS verified boot particularly meaningful
04:15:56 <strcat[m]> radixed9: they deliberately ship without stuff like boot guard and go out of the way to make things worse in terms of blocking off firmware security updates when they can, not shipping them, etc.
04:16:04 <strcat[m]> it's the opposite of securing this stuff
04:16:31 <strcat[m]> UEFI as a spec is not the issue at all
04:16:48 <strcat[m]> the issue is x86, traditional OSes, and the OEMs putting together the devices
04:17:05 <citypw> strcat[m]: the current situation is some vendors developed their own provisioning tools for bootguards but they need to signed the NDA and get approved by Intel first and then they might able to open source
04:17:32 <strcat[m]> citypw: verified boot and attestation are essentially separate things - although attestation relies heavily on verified boot to accomplish anything
04:17:45 <citypw> purism seems not willing to doing so cu'z most of their customers doesn't have a clue about it
04:17:48 <strcat[m]> but verified boot doesn't need attestation
04:18:14 <strcat[m]> attestation is needed to remotely (can be another local device) verify properties of the device
04:18:24 <strcat[m]> verified boot is much more practical and useful for end users
04:18:30 <strcat[m]> attestation is mostly an enterprise thing
04:18:36 <strcat[m]> or for app / service developers
04:18:47 <citypw> yep agree. you can see our patch in coreboot which trying to decouple the measuredboot from the vboot framework
04:19:26 <strcat[m]> verified boot needs the final stage of 'firmware' to support a custom key + rollback prevention system
04:19:30 <strcat[m]> and if it doesn't you don't have that
04:19:47 <strcat[m]> you can't implement it via attestation, that's a totally different thing that's much less useful to most users
04:19:54 <TheJollyRoger> Sheesh.
04:20:59 <strcat[m]> the only x86 machine with proper verified boot is the xbox
04:21:08 <citypw> strcat[m]: let's say once we have the measuredboot. what do you think of which part should perform the attestation? Userspace program or hardware based peripheral( e.g: CSME)?
04:22:07 <citypw> the traditional communication protocols seems not that trustworthy to me. without any identity protection and denaiblity in the current tools
04:22:37 <strcat[m]> the earlier stuff starts doing it, the better
04:22:44 <strcat[m]> you need real verified boot to do real attestation
04:22:45 <strcat[m]> all the way
04:23:33 <strcat[m]> citypw: what I see in the x86 world is a lot of people misunderstanding these technologies and trying to use attestation as a substitute for verifying firmware and the OS
04:23:41 <TheJollyRoger> Sheesh. I get the feeling FlexVer might require us to rethink the way we install, provision, and sign the operating system partition, if it's going to verify the entire operating system.
04:23:47 <strcat[m]> and also just plain doing weird stuff with attestation
04:39:08 <citypw> those are two different approach trying to solve different problems
04:39:59 <citypw> the current heads's attestation is based on totp token and the measurement from tpm. I never do the remote attestation based on heads maybe i'll try it later
04:40:44 <citypw> i means, even if we do the 1st attestation( local/remote) during the early boot. how about runtime attestation?
04:41:31 <citypw> is there any best practices needed to be taken into account or an regular userspace apps( maybe sandboxed with some MAC polices) can do it so?
04:44:12 <hypokeimenon[m]> The current Xbox One? lol why
04:44:30 <hypokeimenon[m]> You'd think they'd save the good sauce for their Surface line
04:46:04 <TheJollyRoger> I could see there being a lot of financial incentive for it. Those gaming consoles are sold at a loss, but they make their money on the games. Detecting modded or unlocked consoles equipped with software that's been patched to ignore the copy protection is a huge vector for loss of profit there.
04:47:49 <hypokeimenon[m]> Hmm. True enough. What percentage of Microsoft's income is video game software/subscription revenue?
04:48:57 <TheJollyRoger> I'm not sure.
05:25:50 <cn3m[m]> I love how people target random things as a blackbox
05:26:16 <cn3m[m]> nothing you build and audit yourself is anything but a blackbox
05:28:50 <cn3m[m]> goes for hardware and software
05:32:11 <strcat[m]> citypw: well you can look at how it works on Android
05:32:30 <strcat[m]> citypw: persistent state is not trusted and trust can be chained to applications
05:32:35 <strcat[m]> via attestation
05:32:48 <strcat[m]> but this is primarily useful to app developers / services
05:32:49 <strcat[m]> like banks
05:33:16 <strcat[m]> Auditor takes advantage of it to provide something for users or enterprise device deployments (needs more work for that though)
05:34:05 <strcat[m]> citypw: look closely at how Auditor works
05:34:15 <strcat[m]> and the hardware attestation system
05:35:40 <citypw> thanks, will do.
05:41:29 <cn3m[m]> welcome
05:43:40 <Moose[m]1> Been here before, bridge just conked out
05:43:41 <Moose[m]1> -_-
05:46:28 <cn3m[m]> haha
06:09:31 <TheJollyRoger> Whew. I think this is about as bare-minimum as I can get this. Documentation dump is incoming soon, whew.
06:09:40 <thelearner[m]> What is Android Adaptive Notifications? Found under Special App Access > Adaptive Notifications.
06:09:53 * TheJollyRoger pours a bucket of water over his head.
06:11:40 <TheJollyRoger> Hey thelearner[m] let me go and check, I think adaptive notifications were supposed to be a way to automatically have the device manage the priority of the notifications you saw, but that's about all I know about it at this moment.
06:13:16 <thelearner[m]> TheJollyRoger: thanks for the reply. :) So, is it a requirement to leave turned on?
06:14:07 <TheJollyRoger> Don't think so!
06:15:09 <TheJollyRoger> I think it just automatically tries to determine which notifications you see first if the notifications get too crowded and what actions to take. I think using it or not using it would be a personal choice.
06:20:28 <thelearner[m]> Okay. Thanks for the tip.
06:26:47 <radixed9[m]> strcat: I have given your comment on the app update system thought. I am questioning my logic and could use clarification. In my example where I listed the verification after the date check. That does not matter for security correct? I see how is best practice is to verify at the first possible time as a rule. In this specific case it doesn't matter as the update server if hostile would be able to withhold the
06:26:47 <radixed9[m]> metadata file making the date check something that does not require verification.
06:26:47 <radixed9[m]> My takeaway from our conversation is that this is an issue of not using best practice. This would not be a security issue. Is this a correct understanding?
06:28:01 <radixed9[m]>  * strcat: I have given your comment on the app update system thought. I am questioning my logic and could use clarification. In my example where I listed the verification(of the metadata file) after the date check. That does not matter for security correct? I see how is best practice is to verify at the first possible time as a rule. In this specific case it doesn't matter as the update server if hostile would be
06:28:01 <radixed9[m]> able to withhold the metadata file making the date check something that does not require verification.
06:28:01 <radixed9[m]> My takeaway from our conversation is that this is an issue of not using best practice. This would not be a security issue. Is this a correct understanding?
06:54:09 <renlord> what does "listed the verification after the date check" mean
06:55:24 <radixed9[m]> Checking the date on the metadata file before verifying it. I was listing steps the update process should take
06:56:20 <radixed9[m]> This would be to make sure it is newer than what the user had. It definitely makes most sense to verify first. I would like to make sure I am thinking about the issue properly.
06:56:25 <renlord> isnt it a functional requirement so you know you've applied the update.
06:57:07 <radixed9[m]> Just the metadata file on the updates. It would be the index for the updates to see what you need. Vanadium 84 as the latest for example
06:58:00 <radixed9[m]> "Fetch > verify metadata file > make sure it is a newer metadata file than current > download any apps that were behind on verison compared to the verified metadata file > update those apps after checking the hash as stored in the metadata file" This is what I came up with after fixing the order and talking to strcat
07:00:44 <radixed9[m]> renlord: the OS will of course verify the app update matches the signature and enforce rollback protection
07:09:28 <strcat[m]> the OS won't enforce that a new app you install is actually a recent release though
07:12:36 <radixed9[m]> That is important for third party apps to have verified metadata. However verification before/after checking the date of the metadata file shouldn't effect the situation of a compromised update server from my understanding. I want to make sure I clearly understand the threat model when working on this
07:13:14 <radixed9[m]>  * That is important for apps not in the base install to have verified metadata. However verification before/after checking the date of the metadata file shouldn't effect the situation of a compromised update server from my understanding. I want to make sure I clearly understand the threat model when working on this
07:14:31 <renlord> the packages are signed using daniel's key and since the package installer will check the app signature against the already installed package, i dont see how a compromised update server can screw the user
07:14:35 <renlord> besides it being a DoS
07:14:46 <renlord> which will eventually go away anyways
07:14:54 <radixed9[m]> My understanding is the distinction is arbitrary. Right
07:15:53 <renlord> the date in the metadata file lets you check if you're actually referring to the latest metadata file assuming that the update app persistently stores the last seen metadata file date.
07:16:48 <renlord> so you poll regularly, fetch the metadata file and check the date, you stay up to date. That's my understanding of the purpose of checking the date
07:17:00 <stuux[m]> strcat: If I want to grant an app permissions with the signatreOrSystem (signature|privileged) protection level should it be enough to sign the app with the same platform key (from /build/target/product/security of android) as the os or do I still have to move it to /system/app ?
07:17:28 <strcat[m]> stuux: has to be signed with the platform key
07:17:31 <radixed9[m]> <renlord "the date in the metadata file le"> It would be purely best practice to verify the metadata file before checking the date on it. He said "you have to verify the signature first ofc". I wanted to make sure I wasn't missing anything. I don't think I am I want to be certain though
07:19:49 <stuux[m]> strcat: ok, thanks
07:21:05 <cn3m[m]> Yeah it wouldn't matter either way. If they have control of the build server they could just not serve the metadata file. It doesn't matter if you check data first or verify first.  @radixed9:matrix.org
07:22:32 <cn3m[m]> you do need to verify (which you originally proposed) in order to safely install apps that aren't preinstalled
07:23:28 <renlord> dont think the metadata file verification step is a deal-breaker
07:23:52 <renlord> the worst case is that you install, and the package signature is invalid and you wasted data and battery.
07:24:03 <renlord> that is if the update server is compromised
07:24:16 <renlord> and dns got hijacked, etc.
07:24:32 <renlord> a remote possibility, but mostly benign besides some wasted resources.
07:25:03 <renlord> cn3m[m]: yes, but in this case, we only do updates
07:25:09 <renlord> and the apps already ship in the base OS
07:25:43 <radixed9[m]> Thanks renlord: . It is a tiny file so probably not a factor. Better to ask than to be sorry.
07:25:56 <renlord> what are the chances of ICANN failing to keep dnssec root keys properly?
07:25:59 <radixed9[m]> Makes sense
07:26:27 <renlord> or is it the TLDs that maintain a root key for each TLD?
07:27:05 <renlord> https://www.iana.org/reports/2017/root-ksk-2017.pdf
07:27:06 <renlord> lol
07:27:06 <renlord> wtf
07:27:12 <radixed9[m]> If that happened the metadata file would still fail to verify so neither of those issues would effect the system(you would have much larger problems though)
07:27:22 <renlord> how am i suppose to verify those attestations
07:28:09 <cn3m[m]> the root of trust on the web is a bit of a joke
07:28:13 <renlord> how interesting, they actually hold a ceremony every 2 months to change the signing keys
07:28:15 <renlord> LOL
07:28:45 <renlord> https://www.iana.org/dnssec/ceremonies/41
07:28:51 <renlord> if you're interested in the latest ceremony
07:28:57 <cn3m[m]> I'll take donuts
07:29:07 <renlord> tbh, i am very unconvinced about the ceremony procedures
07:29:36 <renlord> "This ceremony was held with a reduced agenda and with minimal in-person participation to limit risks associated with the COVID-19 pandemic." **minimal in-person participation**
07:29:55 <cn3m[m]>  @freenode_renlord:matrix.org that sounds perfectly safe
07:30:26 <renlord> is this why everyone was really lukewarm w.r.t dnssec?
07:31:11 <renlord> i suppose, if people can trust CAs, people can also trust ICANN
07:31:58 <cn3m[m]>  @freenode_renlord:matrix.org I don't trust either
07:32:13 <cn3m[m]> I kid
07:32:35 <renlord> life would be quite unproductive if you cant trust either.
07:33:07 <cn3m[m]> hypothetically you can control root cert trust more than ICANN
07:33:24 <cn3m[m]> you have a saw in what's installed on your device
07:33:40 <cn3m[m]> say* I wish I had a saw
07:35:35 <renlord> you can add more root keys, but i dont see hwo you can reduce.
07:36:37 <cn3m[m]> you can remove root certs
07:36:38 <cn3m[m]> it just might wreck stuff
07:37:01 <renlord> yea, lots of broken stuff
07:37:17 <renlord> i dont want to have to make phone calls to check public key authenticity
07:37:43 <cn3m[m]> Hong Kong Post should be fine to turn off
07:37:52 <cn3m[m]> <renlord "i dont want to have to make phon"> deepfake voices you have to go in person
07:38:01 <cn3m[m]> how can you be sure a human is actually talking smh
07:38:02 <renlord> LOL
07:38:06 <renlord> what a world we liev in
07:38:13 <renlord> security is hard.
07:38:39 <cn3m[m]> there's never going to be a fix.. that's the sad part
07:39:07 <cn3m[m]> always have to trust someone even if it's a blockchain someone gets 51% control it's lights out
07:40:04 <renlord> cn3m[m]: even with 51% control, its quite a while before a re-write is possible.
07:40:10 <cn3m[m]> what's government root certification authority on my phone?
07:40:43 <cn3m[m]> <renlord "cn3m: even with 51% control, its"> that's fair do you think that's the best option?
07:41:21 <renlord> cn3m[m]: its non-trivial to pull off a 51% attack anyways. There'd be far too much outcry
07:41:39 <renlord> technical possibility does not translate to reality.
07:41:59 <renlord> since there are many independent verifiers and verifying is easy.
07:42:25 <renlord> a rogue CA on the other hand is not easy to call out since its a significantly reduced set of verifiers that actually care.
07:42:44 <cn3m[m]> <renlord "technical possibility does not t"> it's technically possible for me to convince you to buy a PinePhone to hack you.
07:42:55 <cn3m[m]> that's a very good point
07:43:27 <renlord> and if you sample the population, im confident that more people know how to verify the bitcoin blockchain vs. cert verification and how the CA root of trust even works.
07:43:30 <cn3m[m]> a decentralized authority could have a lot of advantages
07:44:21 <cn3m[m]> no one even knows what the locks mean
07:44:22 <cn3m[m]> even people in the privacy community don't understand it
07:47:09 <cn3m[m]> North Korea, Russia, US, China would all fight to make sure they had enough control over the blockchain for something so important. it would be almost impossible to practically break unless you took entire countries offline which is far more drastic than tweaking a signature
07:47:11 <furofuro_01[m]> <cn3m[m] "deepfake voices you have to go i"> renlord: Speaking of fake voices, is there any voice-changing app that is secure and private, that can be used for voice calls?
07:47:32 <renlord> furofuro_01[m]: :(
07:47:48 <cn3m[m]>  @furofuro_01:matrix.org you too can be a 14 year old girl
07:48:21 <cn3m[m]> we don't even have a good text to speech for open source
07:48:38 <furofuro_01[m]> <cn3m[m] " @furofuro_01:matrix.org you too"> Hahaha sure, just in case I need to speak to strangers but if none, RIP
07:48:52 <furofuro_01[m]> Guess voice training it is then lol
07:48:58 <renlord> there are probably more technically sophisticated decentralized cryptocurrencies like zcash or those crazy stateless blockchain works
07:49:10 <furofuro_01[m]> * Hahaha sure, just in case I need to speak to strangers but if none, RIP (referring to an app btw)
07:49:17 <TheJollyRoger> cn3m[m]: have you checked out Namecoin?
07:49:21 <renlord> but they probably wont be as successful as bitcoin just because bitcoin is simple enough for the masses to understand.
07:49:38 <renlord> try teaching an undergraduate Zero-Knowledge Proofs
07:49:44 * TheJollyRoger gasps.
07:49:58 <renlord> then the primitives required to verify the more complicated contructions.
07:50:21 <renlord> obviously, these systems are going to be less decentralized.
07:50:29 <furofuro_01[m]> <cn3m[m] " @furofuro_01:matrix.org you too"> I rather be genderless though
07:50:29 <cn3m[m]> <renlord "try teaching an undergraduate Ze"> how I'd love to be a fly on your wall
07:50:33 <renlord> since nobody has the time nor the mental capacity to understand them,
07:50:38 <cn3m[m]> <TheJollyRoger "cn3m: have you checked out Namec"> I haven't even heard of it
07:51:17 <TheJollyRoger> renlord, when I look at math any more complex than seven plus eight, or think about the complexity of a symmetric cipher, my brains start to begin dribbling out my nose. I don't even want to start thinking about how complex that kind of stuff in public key operations is, or I think my head would explode.
07:52:09 <TheJollyRoger> cn3m[m], I have a slightly hard time trying to explain it because I feel like I'm butchering all the subtle nuances but... Jeremy_Rand_Tal4, here I go...
07:52:45 <radixed9[m]> Crypto at least in theory I have no problem wrapping my head around. I haven't delved into the subject yet. I don't love math by any means
07:53:17 <TheJollyRoger> I think Namecoin was the first fork of Bitcoin, it's specifically designed for authenticated naming with the same threat model as Bitcoin.
07:53:52 <TheJollyRoger> The idea being is that it attempts to refute the "Zooko's Triangle" problem.
07:54:15 <cn3m[m]>  @freenode_TheJollyRoger:matrix.org I'm listening
07:55:18 <TheJollyRoger> So far, it's able to do this --and do it very well-- via using blockchain, and it's been incorporated into some builds of Tor Browser nightly.
07:56:13 <TheJollyRoger> so if you have a Linux x86 machine and run Tor Browser nightly, and you start it with a hidden "enable Namecoin" option, you can actually navigate to some .bit sites which are transparent redirects to .onion sites.
07:56:18 <cn3m[m]> <TheJollyRoger "So far, it's able to do this --a"> is that to remove trust in the directory?
07:56:48 <cn3m[m]> oh interesting
07:57:10 <TheJollyRoger> But rather than asdfasdf1234somethingsomething.onion you would navigate to mysite.bit.
07:57:53 <TheJollyRoger> And Tor Browser will look up the entry for mysite.bit in the namecoin blockchain and then resolve to wherever who spent the namecoins on registering mysite.bit
07:58:11 <TheJollyRoger> Once a Namecoin is spent, it's destroyed.
07:58:45 <cn3m[m]> that's truly fascinating
07:58:46 <cn3m[m]> could that replace onion links?
07:58:47 <TheJollyRoger> Every set number of blocks, a name needs to be renewed to prevent cybersquatting.
07:58:56 <TheJollyRoger> Yes, it works beautifully at doing this.
07:59:06 <renlord> do they still merge-mine namecoin blocks?
07:59:13 <renlord> otherwise, there's zero security lol
07:59:32 <TheJollyRoger> For a while, Namecoin was able to actually authenticate CAs, but unfortunately I JUST found out about that after Chromium depreciated HKPK, which Namecoin relied on.
08:00:25 <TheJollyRoger> renlord: Yeah I think you have to use bitcoin mining to do it, I think there's some discussion about the threat model of Namecoin somewhere on their site.
08:00:38 <renlord> ok, so they still do it
08:01:17 <TheJollyRoger> Er, sorry, not authenticate CAs - authenticate certificates that would have OTHERWISE been authenticated by CAs
08:01:26 <cn3m[m]> I have so much respect for Daniel
08:01:28 <TheJollyRoger> So cn3m[m], definitely you should check out Namecoin, it's a really fascinating project.
08:01:39 <renlord> i dont follow the other coins much besides just bitcoin, ethereum and the zkp ones
08:02:03 <cn3m[m]> I couldn't do this subreddit moderating and everything he does that long
08:02:10 <TheJollyRoger> Jeez >_<.
08:02:18 <TheJollyRoger> Yeah...
08:02:22 <cn3m[m]> <TheJollyRoger "So cn3m, definitely you should c"> I will thanks mate
08:02:53 <joshman[m]> Folks. Can I run Slack on Graphene? Does it compromise my security?
08:03:24 <cn3m[m]> <joshman[m] "Folks. Can I run Slack on Graphe"> threat model?
08:03:44 <TheJollyRoger> Hi joshman[m], if Slack doesn't have a hard dependency on Google Software Frameworks you could. As for whether it compromises your security or not, that's actually not something I can answer for you because--ah cn3m beat me to it.
08:04:02 <joshman[m]> Who can comment on Bluetooth headphones usage in public transportation. Shall I go wired or is it secure enough to use BT unless I'm Eddy Snowden
08:04:10 <addikted2graphen> Is anyone here pretty familiar with the insides of Pixel phones? In particular, the mics and how to remove or neuter them?
08:04:35 <cn3m[m]> <addikted2graphen "Is anyone here pretty familiar w"> iFixIt
08:04:45 <addikted2graphen> OK, thanks.
08:04:59 <cn3m[m]> <joshman[m] "Who can comment on Bluetooth hea"> GrapheneOS should be pretty secure for this, but YMMV
08:05:01 <TheJollyRoger> addikted2graphen: if you want to do something like that, there may be teardown videos on YouTube.
08:05:23 <addikted2graphen> OK. What I s YMMV?
08:05:30 <addikted2graphen> Thankd
08:05:34 <TheJollyRoger> An acronym for "Your Mileage May Vary."
08:05:37 <joshman[m]> cn3m threat model low for slack, medium to myself. I have no real identity there anyways
08:05:43 <cn3m[m]> Slack can see every app installed if that is a concern  @josh.man:matrix.org
08:05:48 <cn3m[m]> that's essentially PII with GrapheneOS
08:06:13 <addikted2graphen> <TheJollyRoger "An acronym for "Your Mileage May"> Oh , sorry I thought that was for me.
08:06:21 <cn3m[m]> do you use a VPN for it?  @josh.man:matrix.org
08:06:22 <joshman[m]> YMMV that's a great one. What's the history of this acronym
08:06:56 <cn3m[m]> <joshman[m] "YMMV that's a great one. What's "> I dunno I heard it 3 times and stole it shamelessly
08:06:58 <dazinism> radixed9: when the app store facilitates inastalling new apps going to want to check the sig of apps
08:07:13 <headgas[m]> What is slack? Why would using BT headphones not be safe?
08:07:21 <TheJollyRoger> I think it's something along the lines that many automobile makers don't guarantee the fuel mileage of their vehicles and disclaim that their claimed ratings are accurate.
08:07:24 <dazinism> Guess worth considering that now and whats involved
08:07:27 <joshman[m]> I use VPN since 2015. Seeing apps doesn't bother me. Talking to my Signal messages would raise concern
08:07:46 <TheJollyRoger> "Our car gets 30 miles to the gallon!*     *your mileage may vary."
08:07:50 <cn3m[m]> if you use a VPN Android has a few leak bugs worth knowing about
08:08:10 <cn3m[m]> Slack also has pretty decent ability to spy on your installed apps which is probably unique for every grapheneOS user
08:08:11 <TheJollyRoger> As in, we can't guarantee that, you might get a different result than what we got running a vehicle under extremely controlled circumstances.
08:08:14 <headgas[m]> Im using riseupvpn
08:08:30 <cn3m[m]> profiles can fix the second issue, but make the first worse
08:09:44 <cn3m[m]> <joshman[m] "I use VPN since 2015. Seeing app"> they can't see your signal messages no way
08:10:02 <cn3m[m]> you're completely safe there
08:10:13 <TheJollyRoger> Yeah, each app gets its own personal home directory.
08:10:23 <cn3m[m]> accessibility is what's required for that which Slack doesn't have I'm 99% sure
08:10:39 <headgas[m]> Why would using Bluetooth headphones not be safe?
08:11:03 <cn3m[m]> accessibility should NEVER be used unless you're quite disabled
08:11:11 <cn3m[m]> <headgas[m] "Why would using Bluetooth headph"> potentially you can exploit the phone
08:11:24 <TheJollyRoger> headgas[m]: beats me. A while back and still today, a lot of people go bonkers about radio vulnerabilities back when cellphone radios were attached to cellphone host memory via direct memory access. However, this is not the case today.
08:11:32 <cn3m[m]> I don't think GrapheneOS was vulnerable to the last big one
08:11:59 <TheJollyRoger> Yeah. These days, cellphones limit peripheral access to host memory via IOMMU (on ARM this is referred to as SMMU) or In/Out Memory Management Unit.
08:12:04 <cn3m[m]> well it's mostly Linux flaws that allow this iirc
08:12:08 <cn3m[m]> not a security researcher
08:12:22 <headgas[m]> Am I safe on Calyxos?
08:12:29 <cn3m[m]> but IOMMU doesn't help thaaaat much
08:13:03 <headgas[m]> I love my Bluetooth headphones
08:13:08 <cn3m[m]> <headgas[m] "Am I safe on Calyxos?"> I mean it's a lot more likely to happen there than GrapheneOS
08:13:08 <TheJollyRoger> headgas[m]: you'll be fine.
08:13:19 <headgas[m]> I use Bluetooth every single day
08:13:26 <dazinism> cn3m: I wonder if using airplane mode when switching user profiles would help against the VPN problem?
08:13:30 <cn3m[m]> though the that's still 1 in a billion chance
08:13:30 <headgas[m]> Well I cant use grapheneos
08:13:34 <joshman[m]> I have gos, Manjaro and an iOS devices (collecting dust). Where should I install Slack to? I want to keep low profile but this new company I'm freelancing for is Soo off the wall. Google docs, Gmail, slack it makes me go blow
08:13:53 <TheJollyRoger> Anyone that's close enough to exploit a hypothetical bluetooth vulnerability in your phone is also close enough to smash your knee with a dumbbell.
08:13:54 <anupritaisno1[m]> <headgas[m] "Well I cant use grapheneos"> Well
08:13:54 <cn3m[m]> <dazinism "cn3m: I wonder if using airplane"> i don't think so it changes the setting iirc
08:13:56 <cn3m[m]> you could try and report in the issue
08:14:00 <anupritaisno1[m]> Bluetooth does have CFI enforced
08:14:18 <headgas[m]> Haha ok
08:14:18 <joshman[m]> cn3m what's leaking while on VPN with GOS?
08:14:22 <headgas[m]> Whats CFI?
08:14:34 <anupritaisno1[m]> <headgas[m] "Whats CFI?"> Control flow integrity
08:14:38 <cn3m[m]> <joshman[m] "cn3m what's leaking while on VPN"> all systems can leak
08:14:44 <headgas[m]> What does that mean?
08:14:51 <cn3m[m]> Android is the least likely
08:14:56 <TheJollyRoger> The frequency that Bluetooth uses is *incredibly* short ranged, like don't count on it being longer than forty feet inside an empty room.
08:15:00 <joshman[m]> <TheJollyRoger "Anyone that's close enough to ex"> Smashing my knee won't necessarily help getting my data
08:15:11 <cn3m[m]> <headgas[m] "What does that mean?"> no code reuse attacks
08:15:39 <headgas[m]> Ah man, I don't know what that means either.
08:15:52 <cn3m[m]> <joshman[m] "cn3m what's leaking while on VPN"> so technically yeah Android does have some leaks if you have multiple profiles or you don't block connections without
08:16:02 <cn3m[m]> <headgas[m] "Ah man, I don't know what that m"> it stops a type of attack
08:16:08 <headgas[m]> My Bluetooth on my pixel 4 xls range is longer than fourth feet
08:16:19 <headgas[m]> Oh OK thats good
08:16:21 <joshman[m]> <TheJollyRoger "The frequency that Bluetooth use"> I was specific. Bluetooth while on long-distance train, bus
08:16:36 <headgas[m]> What do you mean multiple profiles on android?
08:16:53 <cn3m[m]> <headgas[m] "What do you mean multiple profil"> users
08:17:29 <headgas[m]> Yea I dont get that, its not like on a computer where you have different desktops to log into
08:17:37 <joshman[m]> I don't use profiles. Not for my use case I guess. And as you said. It won't help with Slack
08:17:54 <cn3m[m]> <headgas[m] "Yea I dont get that, its not lik"> false
08:17:58 <cn3m[m]> it does
08:18:06 <cn3m[m]> <joshman[m] "I don't use profiles. Not for my"> I said it would
08:18:14 <headgas[m]> I have never heard of that or seen an option for that
08:18:20 <cn3m[m]> profiles can isolate checking installed apps
08:18:26 <TheJollyRoger> As far as I know - the IOMMU on the handsets only allows the peripheral to read from, or write to areas of host memory that the driver in the kernel /specifically presents it to./ Otherwise, it's just seeing a memory management unit.
08:18:28 <renlord> i use profiles, since border forces ask you to unlock your phone nowadays
08:18:41 <renlord> and i dont want to inconvenient my travels
08:18:46 <cn3m[m]> your owner profile is likely unique to you as a GrapheneOS user (really hard to actually use that data)
08:19:07 <cn3m[m]> <renlord "and i dont want to inconvenient "> that actually works?
08:19:16 <renlord> ya why not
08:19:20 <cn3m[m]> do you name the profiles after people?
08:19:30 <headgas[m]> I know graphene is more secure. But my only option is calyx and im happy with it
08:19:31 <TheJollyRoger> So it's really the driver of the device that's going to determine the exploitability of your device via its peripheals.
08:19:35 <TheJollyRoger> *peripherals.
08:19:44 <TheJollyRoger> Fortunately, the drivers for the Pixel handsets are open source!
08:19:44 <cn3m[m]> I feel like they would be like sir.. need to see your Illegal Tor Shit user
08:19:53 <headgas[m]> Lol
08:20:00 <TheJollyRoger> XD
08:20:07 <headgas[m]> What does that meanTheJollyRoger ?
08:20:09 <renlord> my fake profiles is more personalized than my actual daily profile
08:20:10 <renlord> i have a picture of a cute dog with a fake name etc.
08:20:20 <cn3m[m]>  @josh.man:matrix.org profiles help if you aren't using a VPN for Slack
08:20:40 <cn3m[m]>  @freenode_renlord:matrix.org you're a machine
08:21:21 <cn3m[m]>  @freenode_renlord:matrix.org doesn't multiple profiles help a little with cold boot attacks
08:21:37 <cn3m[m]> since if you reboot when switching profiles the key is no longer stored
08:21:54 <TheJollyRoger> headgas[m], sorry, which specifically?
08:22:00 <headgas[m]> What does the drivers on the pixel four being open source mean?
08:22:27 <cn3m[m]> <headgas[m] "What does the drivers on the pix"> you can easily audit them, but so can anyone else
08:22:51 <TheJollyRoger> It simply means that the code for the drivers we can browse, view, modify, etc.
08:22:56 <cn3m[m]> lowers the barrier of entry for auditing for good guys and bad guys
08:22:57 <TheJollyRoger> Of course, you'll need to be able to compile the code yourself, and digitally sign it to be able to run it your way.
08:23:18 <headgas[m]> What would that do for me?
08:23:37 <headgas[m]> How can I make it harder for bad guys
08:24:16 <cn3m[m]> <headgas[m] "How can I make it harder for bad"> don't worry about it I guess
08:24:25 <TheJollyRoger> Stay up to date!
08:24:32 <cn3m[m]> or port grapheneos to your phone
08:24:37 <headgas[m]> Like updates?
08:24:46 <headgas[m]> Haha im not a dev
08:24:58 <headgas[m]> Is anyone helping Daniel get it on the four yet?
08:25:13 <TheJollyRoger> If you're not a developer, here's what you can do to maximize your personal device security: the first one being, stay up to date and keep your automatic updates on.
08:25:17 <radixed9[m]> I am tempted to ditch my laptop for an iPad. Develop on my Desktop. Any thoughts?
08:25:19 <TheJollyRoger> The second one, is AVOID CUSTOM TUNING!
08:25:53 <cn3m[m]> <radixed9[m] "I am tempted to ditch my laptop "> that's bold..
08:25:58 <headgas[m]> When you say stay up to date your talking about updates right?
08:26:07 <TheJollyRoger> Yes.
08:26:19 <headgas[m]> OK I do
08:26:23 <cn3m[m]> <headgas[m] "When you say stay up to date you"> update everything
08:26:31 <headgas[m]> What is custom tunning?
08:26:44 <TheJollyRoger> Great. The way power users (or people who think they're power users) get pwned is they push themselves beyond their skills trying to rice up their security, and end up paradoxically eroding their own security and privacy.
08:26:51 <headgas[m]> I update everything as soon as im notified
08:26:57 <renlord> i might get a secured core thinkpad
08:27:02 <renlord> as strcat[m] suggested
08:27:18 <radixed9[m]> renlord: is that better than an iPad?
08:27:29 <TheJollyRoger> "Custom tuning" in this context would be doing things hings like enabling debugging modes so they can access extra functions, or on an extreme end, rooting their phones and turning off valuable security features like verified boot.
08:27:32 <renlord> radixed9[m]: probably not, but more functional at least
08:27:35 <renlord> and better value?
08:27:36 <headgas[m]> What is secured core? Can you get Linux on a thinkpad?
08:27:46 <renlord> headgas[m]: no, its windows secured core
08:27:54 <headgas[m]> Oh ok
08:27:56 <TheJollyRoger> Windows Server Core?
08:28:01 <renlord> https://www.microsoft.com/en-us/windowsforbusiness/windows10-secured-core-computers
08:28:04 <TheJollyRoger> OH
08:28:06 <TheJollyRoger> Oh that.
08:28:23 <renlord> i'll just run linux vm in hyper-v
08:28:42 <headgas[m]> OK I try to ask questions so I don't set anything I shouldnt
08:28:48 <renlord> or idk, maybe i learn powershell
08:28:51 <radixed9[m]> they are expensive..
08:28:53 <renlord> but powershell is so weird
08:29:01 <TheJollyRoger> headgas[m]: ^_^ right on!
08:29:09 <headgas[m]> My librem 15 was expensice
08:29:10 <headgas[m]> Expensive
08:29:21 <renlord> radixed9[m]: the X1 carbon you can wait for discount
08:29:23 <TheJollyRoger> renlord: I'm marooned on Linux Island, send help :P.
08:29:30 <radixed9[m]> iPad is more secure, privacy, better value, but useless to develop is my take
08:29:36 <radixed9[m]> <headgas[m] "My librem 15 was expensice"> oh no...
08:29:38 <renlord> Lenovo runs black friday sales 70% off easy
08:29:49 <headgas[m]> Seventy percent damn
08:29:55 <TheJollyRoger> Holy cow.
08:30:05 <headgas[m]> Yea everyone is haters on purism
08:30:08 <TheJollyRoger> At that rate aaaaargh I'm tempted.
08:30:18 * TheJollyRoger suddenly draws his cutlass.
08:30:25 <TheJollyRoger> *SSSHNK*
08:30:36 * TheJollyRoger drives the Cutlass point-first into his credit-card.
08:30:52 <renlord> gotta wait till black friday sales
08:31:08 <renlord> not even sure if its happening this year
08:31:10 <TheJollyRoger> preemptive action :P.
08:31:10 <headgas[m]> What about system seventy six
08:31:11 <renlord> with all this COVID
08:31:34 <TheJollyRoger> headgas[m]: System76s are rebadged Clevos.
08:31:37 <radixed9[m]> $450 for an X1 Carbon would be impossibly good
08:31:46 <headgas[m]> What is clevo?
08:31:54 <renlord> radixed9[m]: upgrades excluded.
08:31:59 <cn3m[m]> don't buy lenovo guys
08:32:02 <TheJollyRoger> Clevo is an ODM, an ODM is an Original Design Manufacturer;
08:32:06 <renlord> by the time you add reasonable upgrades, it'll be $1K again
08:32:12 <cn3m[m]> they did superfish
08:32:27 <headgas[m]> OK is that a good think or bad, TheJollyRoger?
08:32:28 <radixed9[m]> <renlord "by the time you add reasonable u"> My laptop is a Dell Precision M4800
08:32:52 <radixed9[m]> anything would be an upgrade over this old thing
08:33:00 <TheJollyRoger> headgas[m]: ah, just a sec... basically, your Dells, HPs, Acers, Asuses, all the laptops in the world are all more or less made by the same small handful of companies.
08:33:01 <renlord> oh
08:33:19 <headgas[m]> Interesting
08:33:24 <headgas[m]> Wow
08:33:34 <TheJollyRoger> Long story short, if Dell wants a laptop, they don't design it in house, they subcontract it to an ODM, usually in Taiwan, to design a laptop to their specifications, put their Dell logo onto it, and then they sell it as their own product.
08:33:38 <renlord> cn3m[m]: this kinda shit almost never happens anymore
08:33:52 <radixed9[m]> Would they offer a Black Friday deal on such a specialty device any way? I can't find a page of it
08:33:52 <headgas[m]> I have an old Dell laptop in storage I was thinking of pulling that out and throwing Linux on it too to play with
08:33:53 <renlord> microsoft is more strict with what vendor softwares can be shipped
08:34:04 <renlord> otherwise they lose their OEM license
08:34:36 <headgas[m]> It has windows 10
08:34:39 <cn3m[m]> <renlord "microsoft is more strict with wh"> shows incompetence as a company from security design
08:34:42 <cn3m[m]> they can't be trusted to not screw everything else up
08:34:42 <renlord> so you dont see anti virus shipped these days
08:35:04 <renlord> oh my god, back in the days, all these AV software that behave like malware
08:35:07 <renlord> fkin hell
08:35:12 <renlord> what an atrocious user experience.
08:35:35 <TheJollyRoger> If I recall right, Clevo is based out of Taiwan. They sell several of their own products in addition to manufacturing laptops for other OEMs. So what System76 does is they take a couple of those laptops, scratch off the labels and put their own on instead.
08:35:53 <headgas[m]> Oh ok
08:35:53 <cn3m[m]> AV is malware Windows Defender is all that is usable
08:36:20 <renlord> kinda ironic how the software that's meant to protect you from malware is actually malware
08:36:33 <TheJollyRoger> Then they install Linux Distros on them, run me_cleaner and then claim they're open source and such.
08:36:53 <cn3m[m]> <renlord "kinda ironic how the software th"> that's a theme with privacy solutions too
08:37:02 <TheJollyRoger> renlord: heh heh, yeah, really....
08:37:23 <TheJollyRoger> I remember that Norton Internet Security Suite would do some incredibly sketchy things like hooking the kernel and bootloader of the operating system it was installed to.
08:37:30 <headgas[m]> I was wondering if I should upgrade my RAM, it takes a bit for things to open. I have 8gb right now. Thats interesting TheJollyRoger
08:38:03 <TheJollyRoger> headgas[m]: sure, if you find that 8GB is not enough for your needs.
08:38:18 <cn3m[m]> <TheJollyRoger "I remember that Norton Internet "> Avast, AVG, and Bitdefender do much worse
08:39:01 <cn3m[m]>  @freenode_renlord:matrix.org have you done an MITM on Windows 10 lately?
08:39:07 <headgas[m]> Well I feel like it should be plenty. Remember im on a librem 15. So no video card, im not playing games, just the terminal, riot, de googled chromium with a bunch of tabs open
08:39:43 <cn3m[m]>  @headgas:matrix.org libscum 15 more like it
08:39:47 <cn3m[m]> sorry couldn't resist
08:39:51 <headgas[m]> Hah
08:40:05 <TheJollyRoger> headgas[m]: I suppose the takeaway I'd like to say about buying a new laptop, is that anything that attempts to offer you "opennness" on the x86 is generally going to be a dead end. If the marketing is being honest, they'll stress that it's simply off the shelf hardware that is supported well by your operating system, but most of these open-source scammers aren't that transparent.
08:40:11 <headgas[m]> Everyones hates so much, it doesn't help me to agree.
08:40:20 <renlord> cn3m[m]: no
08:40:30 <renlord> i need to buy hardware to do that
08:40:42 <cn3m[m]>  @freenode_renlord:matrix.org how so?
08:40:45 <renlord> otherwise i suppose i can just run inside a vm
08:40:47 <joshman[m]> I can't install Aurora on fresh user profile. Can someone point me to? I guess I have forgotten something
08:40:50 <renlord> but ceebs
08:41:03 <renlord> if i want to monitor long term
08:41:10 <TheJollyRoger> cn3m[m]: oh man. Trying to think about something worse than Norton Internet Security installing itself into the kernel and bootloader of the operating system and punching all sorts of holes in the security model is... aaargh.
08:41:11 <renlord> i need proper hardware
08:41:13 <cn3m[m]> <joshman[m] "I can't install Aurora on fresh "> different version of the apk or signing key
08:41:46 <headgas[m]> Well its been three months since I bought my librem 15, so im stuck with it for as long as it lasts.
08:41:47 <cn3m[m]>  @freenode_TheJollyRoger:matrix.org how about MITM or selling your data by injecting your browser
08:42:00 <TheJollyRoger> cn3m[m]: oh holy shit aaaaaaargh!
08:42:02 <cn3m[m]> <renlord "i need proper hardware"> can't you take an old laptop and hook it to Ethernet?
08:42:26 <cn3m[m]> <TheJollyRoger "cn3m: oh holy shit aaaaaaargh!"> Norton is bad too, but they aren't thaaat bad
08:42:37 <renlord> maybe when i have more time
08:42:50 <cn3m[m]> <headgas[m] "Well its been three months since"> they won't take a return even if you kick and scream?
08:43:10 <headgas[m]> Three months is way too long for any company to take a return
08:43:11 <cn3m[m]> I'd call them every day and ask them if they reconsidered the last time you called them
08:43:27 <headgas[m]> And theres nothing wrong with it
08:43:40 <joshman[m]> I missed the thread. What pushed you to hate your Librem laptop?
08:43:48 <cn3m[m]> Amazon is 90 days
08:43:50 <joshman[m]> A need for an iPad?😄
08:44:07 <headgas[m]> I don't hate it, but everyone else does
08:44:11 <cn3m[m]> <joshman[m] "I missed the thread. What pushed"> since they are a scam company that sells insecure overpriced garbage
08:44:12 <headgas[m]> I sold my iPad pro
08:44:29 <cn3m[m]> fuck me
08:44:29 <headgas[m]> Amazon is different
08:44:46 <headgas[m]> Sold my pixelbook too
08:44:46 <cn3m[m]> I love my iPad Pro
08:45:09 <cn3m[m]> oh no
08:45:10 <headgas[m]> The new ipados is nice for multitasking
08:45:13 <TheJollyRoger> Oh, shit man...
08:45:28 <cn3m[m]> Pixelbook and iPad Pro isn't a bar setup
08:45:36 <headgas[m]> I do agree my librem is overpriced
08:45:38 <cn3m[m]> and pixel 4
08:45:44 <headgas[m]> Bar?
08:45:54 <headgas[m]> Yea I got the pixel4 xl
08:45:58 <cn3m[m]> bad*
08:45:59 <cn3m[m]> it's quite good
08:45:59 <TheJollyRoger> Well... I guess you can try to make the most of what you've got. If you find yourself running out of RAM on a regularr basis you could add more swap as an interim measure.
08:46:17 <cn3m[m]> just make sure your swap is encrypted
08:46:20 <headgas[m]> Add more swap?
08:46:57 <TheJollyRoger> Yeah. Swapspace is essentially an area of your hard drive, either a partition, or even a swap file, which is set aside to use as virtual memory.
08:46:57 <headgas[m]> I don't know if im running out of ram, I was just wondering If it would help to upgrade to 16 gb
08:47:30 <TheJollyRoger> Well, I wouldn't start to worry until you start noticing things like suddenly healthy processes being killed for seemingly no reason at all.
08:47:46 <cn3m[m]> is rediii123 here too? or just Reddit
08:47:59 <cn3m[m]> I see his name a lot
08:48:02 <TheJollyRoger> rediii123 isn't here, he's only on Reddit last I spoke to him.
08:48:23 <headgas[m]> Well when I was still using pureos apps would get killed for some reason sometimes. Now that im on fedora the system seems to run better
08:48:23 <xabi[m]> <joshman[m] "I can't install Aurora on fresh "> Try to download from f-droid website instead of fron auroraOSS website, i had the same problem and it worked from me.
08:49:14 <headgas[m]> So can I do something with swap to make of run better?
08:49:38 <headgas[m]> Make it
08:49:49 <cn3m[m]> <headgas[m] "Well when I was still using pure"> might be microcode bugs even
08:49:49 <cn3m[m]> purism sucks
08:49:54 <TheJollyRoger> headgas[m]: got it! Stick with Fedora then. Fedora has a shorter lifespan than Debian, so be sure to check if a newer version exists. I think they seem to issue a new one every six months.
08:49:58 <headgas[m]> Haha
08:50:18 <headgas[m]> I just got fedora 32
08:50:34 <TheJollyRoger> Good man :)
08:50:38 <cn3m[m]> <TheJollyRoger "headgas: got it! Stick with Fedo"> 6 months release cycle 11 months support iirc
08:50:43 <TheJollyRoger> I think the next version will be November.
08:50:52 <headgas[m]> OK cool
08:50:55 <TheJollyRoger> Yeah makes sense.
08:51:10 <headgas[m]> I heard kicksecure is waiting for some update to void or something and then it will be the best
08:51:21 * TheJollyRoger grinds his teeth.
08:51:42 <cn3m[m]> June had 3 high severity bugs and a ton of medium ones
08:51:56 <headgas[m]> On kicksecure?
08:51:58 <cn3m[m]> would be fun to know how many apply to GrapheneOS
08:52:13 <cn3m[m]> <headgas[m] "I heard kicksecure is waiting fo"> Windows 10 is still recommended for now
08:52:16 <cn3m[m]> or even macOS
08:52:25 <headgas[m]> Nope
08:52:36 <headgas[m]> Im happy with linux
08:52:44 <headgas[m]> I like foss
08:53:31 <cn3m[m]> Foss isn't a bad thing
08:53:46 <TheJollyRoger> Heh, don't mind me... just, whenever I hear something being pushed aggressively, I sorta tense up.
08:53:54 <headgas[m]> Im trying to keep learning more so I can eventually contribute, instead of just being a user. I support calyx now, since I cant help technically
08:54:28 <TheJollyRoger> That's the spirit ^_^
08:54:49 <cn3m[m]> <TheJollyRoger "Heh, don't mind me... just, when"> kicksecure is pretty widespread
08:54:49 <cn3m[m]> we all use it I think
08:55:20 <cn3m[m]> who here doesn't is a good question
08:55:20 <headgas[m]> Is it true that when it switches to void was it that it will be the best distro?
08:55:25 <headgas[m]> Me
08:55:35 <headgas[m]> Fedora
08:55:45 <cn3m[m]> Whonix being the most common Kicksecure based system
08:56:05 <cn3m[m]> <headgas[m] "Is it true that when it switches"> CloudReady is still king
08:56:15 <headgas[m]> Thats a distro?
08:56:25 <headgas[m]> If it is why arent you using it?
08:56:29 <TheJollyRoger> Except for my crummy cloud IRC bouncing server, I've been trying to avoid Debian like the plague.
08:56:46 <cn3m[m]> I use Windows 10
08:56:57 <headgas[m]> My system is happier not running deb thats for sure
08:57:08 <cn3m[m]> CloudReady is my favorite Linux distro though
08:57:17 <headgas[m]> Why is cloud ready the best?
08:57:19 <TheJollyRoger> My options are limited, since I have weird hardware.
08:57:48 <headgas[m]> Im not sure what my options are with my librem, I know my i7 processor is kaby lake
08:57:57 <cn3m[m]>  @freenode_TheJollyRoger:matrix.org that's what she said
08:58:10 <headgas[m]> Lol
08:58:14 <TheJollyRoger> :P. I walked right into that one, didn't I :P.
08:58:44 <cn3m[m]> <headgas[m] "Im not sure what my options are "> you can run anything on that pretty much
08:59:11 <cn3m[m]> I'd just run CloudReady which is the open source ChromeOS
08:59:39 <headgas[m]> Well then hey, I got you there with a positive about my librem! Haha
08:59:48 <headgas[m]> I didnt like chromeos
09:00:33 <cn3m[m]> you can run all kinds of malware yeah @headgas:matrix.org
09:00:40 <cn3m[m]> firmware rootkits are fun
09:00:54 <headgas[m]> Whatever
09:01:10 <headgas[m]> What can I do to make it more secure then haha
09:01:13 <cn3m[m]> yeah that sounded like too much of a pro purism stance
09:02:31 <headgas[m]> If I didnt already buy the librem what would have been the best option?
09:03:35 <cn3m[m]> <headgas[m] "What can I do to make it more se"> make sure you have firmware that's clean you built yourself
09:03:44 <cn3m[m]> run a secure OS like Windows 10 or CloudReady
09:03:46 <headgas[m]> What the heck
09:04:14 <headgas[m]> How can I build my own firmware?
09:04:24 <headgas[m]> I got it because I went to use linux
09:04:28 <TheJollyRoger> headgas[m], with respect to building your own firmware, there's only one platform that can do that:
09:04:49 <headgas[m]> Want
09:04:57 <TheJollyRoger> *and cn3m[m]: one of the computers made by Raptor.
09:05:00 <TheJollyRoger> Talos, Talos Lite, or Blackbird.
09:05:16 <TheJollyRoger> Self hosted firmware development on those is doable, all the way down to the Self-Boot Engine.
09:05:19 <headgas[m]> Never heard of raptor
09:05:26 <TheJollyRoger> https://raptorcs.com You have now!
09:05:58 <cn3m[m]> I thought purism has open firmware that can be flashed to load malware
09:06:38 <TheJollyRoger> cn3m[m] if I recall correctly its "Coreboot" is simply a wrapper to issue calls to the firmware support package and management engine.
09:06:53 <TheJollyRoger> All of which is signed and verified back to permanent fuses.
09:07:05 <anupritaisno1[m]> <headgas[m] "Never heard of raptor"> So why not graphene?
09:07:43 <cn3m[m]> <TheJollyRoger "cn3m if I recall correctly its ""> but it's unsigned and could be used to backdoor
09:07:54 <TheJollyRoger> I plug this often: headgas[m] , if ye have not heard of the dread pirate ship the Morgan's Revenge: https://wiki.raptorcs.com/wiki/Category:Gallery
09:08:04 <cn3m[m]> that part at least
09:08:23 <TheJollyRoger> The "Morgan's Revenge" be me pirate ship, with a yo-ho-ho and a bottle of rum!
09:08:39 <TheJollyRoger> anupritaisno1[m]: This is for the desktop.
09:09:02 <headgas[m]> TheJollyRoger: they don't have laptops and they are crazy expensive
09:09:20 <cn3m[m]> what apps do you guys use for music?
09:09:26 <TheJollyRoger> At this moment, Raptor's been working on a "Flexible Verification" module which will allow verification of the firmware (hostboot, BMC, etc) using custom keying.
09:09:50 <headgas[m]> anupritaisno1: I don't have grapheneos because I have the pixel 4 and as far as I know Daniel isnt even working on it
09:10:07 <cn3m[m]>  @freenode_TheJollyRoger:matrix.org you're a shill
09:10:08 <cn3m[m]> ;-P
09:10:10 <headgas[m]> Spotify
09:10:12 <cn3m[m]> <headgas[m] "anupritaisno1: I don't have grap"> do it yourself
09:10:13 <TheJollyRoger> headgas[m]: yep, they don't have laptops because they chose to focus on the high end server market. Remember that the Talos II was the first of its kind, and truely "libre" computing, especially from scratch, would have carried huge amounts of risk.
09:10:23 <TheJollyRoger> So they would've needed to economize as *much* as possible.
09:10:25 <TheJollyRoger> That said,
09:10:46 <headgas[m]> cn3m: im not q dev
09:10:47 <headgas[m]> A
09:10:48 <TheJollyRoger> They're the real deal.
09:11:27 <TheJollyRoger> Each one ships with full schematics for every component on the board, and full documentation.
09:11:32 <headgas[m]> Nice computer
09:11:32 <TheJollyRoger> Note that this can be /thousands/ of pages.
09:11:56 <cn3m[m]> <headgas[m] "cn3m: im not q dev"> you could learn your way
09:12:02 <headgas[m]> Too much for me, and I like laptops
09:12:16 <cn3m[m]> most of us here are self taught
09:13:01 <headgas[m]> Ive never been good at teaching myself anything
09:13:16 <cn3m[m]> since you tell yourself that
09:13:25 <headgas[m]> No from experience
09:13:43 <cn3m[m]> you installed Fedora and CalyxOS and you have some humility
09:13:47 <headgas[m]> I want to learn Linux more and im interested im the phone side too
09:13:54 <TheJollyRoger> Yeah. Don't underestimate yourself man.
09:13:57 <cn3m[m]> you'll be fine if you don't let yourself get in your own way
09:14:02 <TheJollyRoger> Yarr!
09:14:13 <cn3m[m]> which the only way you will is saying crap like that
09:14:19 <headgas[m]> I was walked through both of those in chats
09:14:32 <headgas[m]> To be honest
09:14:37 <cn3m[m]> so you know how to ask questions
09:14:43 <TheJollyRoger> When I installed the OS onto the Morgan's Revenge, I had help. We all start somewhere, man.
09:14:51 <headgas[m]> Yea I ask a lot, cant you tell haha
09:14:58 <TheJollyRoger> I had an entire IRC channel walking me through the procss!
09:15:08 <TheJollyRoger> Ahaha well, the questions you ask, are the questions you can learn from!
09:15:25 <cn3m[m]> I read a ton that's why I know all I know
09:15:43 <cn3m[m]> documentation is super helpful
09:15:44 <TheJollyRoger> Well, I gotta go for the day. I'll see the lot of you later.
09:15:51 <TheJollyRoger> Which reminds me... >_>
09:16:03 <cn3m[m]>  @freenode_TheJollyRoger:matrix.org take care yo ho ho
09:16:05 <TheJollyRoger> I'll get that tutorial on setting up an arch build environment.
09:16:19 <TheJollyRoger> Arr, thank ye, shipmate ^_^.
09:16:19 <headgas[m]> Yea I think it was the spite channel that helped me with fedora and cdesai, the head Dev for for calyxos walked me through installing calyxos
09:17:05 <headgas[m]> I wanted to try arch but I was told I need more experience haha. Later TheJollyRoger
09:17:13 <headgas[m]> Have a good night
09:17:47 <headgas[m]> Im trying I look up stuff and read here and there but im a hands on learner
09:17:50 <cn3m[m]> night
09:18:22 <cn3m[m]>  @headgas:matrix.org then start writing spyware
09:18:23 <cn3m[m]> start with bash scripts
09:18:24 <cn3m[m]> just see what you can break
09:18:40 <headgas[m]> Spyware hah
09:18:58 <headgas[m]> I need to get my old laptop out of storage first
09:19:01 <cn3m[m]> I'm good at breaking stuff, but suck at building stuff
09:19:27 <headgas[m]> I don't wann as mess up my baby(librem 15 haha).
09:21:12 <anupritaisno1[m]> <cn3m[m] "I'm good at breaking stuff, but "> BTW can you test that boringssl upstream?
09:21:33 <anupritaisno1[m]> @headgas BTW I might do a pixel 4 ROM
09:21:46 <headgas[m]> For Grapheme?
09:21:51 <cn3m[m]> wrong ping?
09:21:52 <headgas[m]> Grqphene
09:21:56 <headgas[m]> Graphene
09:22:10 <anupritaisno1[m]> <headgas[m] "For Grapheme?"> Nah I only plan to work on the kernel
09:22:38 <headgas[m]> So what do you mean? Your going to make your own os?
09:25:32 <headgas[m]> Do you use grqpheneos, cn3m ?
09:25:55 <anupritaisno1[m]> Something that you can just put onto graphene, yes
09:26:02 <cn3m[m]> I sure do
09:26:24 <headgas[m]> 3 or 3a
09:26:57 <cn3m[m]> 3a
09:27:11 <headgas[m]> Thats cool
09:28:14 <headgas[m]> Whats the best matrix client to use? Im using minivector
09:29:05 <cn3m[m]> I dunno
09:29:15 <headgas[m]> What do you use?
09:31:16 <cn3m[m]> <headgas[m] "What do you use?"> fluffy but it sucks
09:31:44 <headgas[m]> I used that on Ubuntu touch, I didnt know it was on android hah
09:32:17 <cn3m[m]> you had an Ubuntu touch phone?
09:32:18 <headgas[m]> I also have a nexus 5 with Ubuntu touch
09:32:23 <headgas[m]> Yes still have it
09:33:33 <anupritaisno1[m]> Well I don't think I can do graphene
09:33:37 <headgas[m]> Got that like a month ago or something, I was going to use that but found out it wasnt very secure
09:33:37 <anupritaisno1[m]> Because no device obviously
09:33:51 <headgas[m]> Oh you don't have a pixel
09:34:18 <headgas[m]> Maybe two months now I don't remember
09:34:22 <renlord> get a hikey?
09:34:24 <renlord> lol
09:34:28 <cn3m[m]> can't you work together?
09:34:31 <headgas[m]> Whats hokey?
09:34:36 <headgas[m]> Hikey?
09:34:48 <renlord> one of the linaro boards supported
09:34:52 <renlord> for dev use only
09:34:58 <headgas[m]> Oh ok
09:35:16 <renlord> im thinking of getting one to add to my arm board cluster
09:35:17 <renlord> heh
09:35:19 <headgas[m]> Work together?
09:35:35 <headgas[m]> Whats an arm board cluster
09:36:18 <anupritaisno1[m]> <headgas[m] "Oh you don't have a pixel"> Never will
09:36:27 <headgas[m]> Why not?
09:36:30 <anupritaisno1[m]> Don't have an unlimited supply of kidneys to sell
09:36:44 <anupritaisno1[m]> For rather bad hardware
09:36:52 <cn3m[m]>  @anupritaisno1:m.apex.to get a cracked one for developing
09:36:55 <headgas[m]> Why is it bad?
09:36:56 <anupritaisno1[m]> Even if I did I would not
09:37:27 <renlord> 1 kidney can buy 20 or so pixels
09:37:30 <anupritaisno1[m]> <headgas[m] "Why is it bad?"> One of the least durable ones I've seen honestly
09:37:31 <headgas[m]> I love my Pixel 4 XL
09:37:56 <anupritaisno1[m]> Besides that ram size....
09:38:08 <headgas[m]> Cus its glass? I have a screen protector and like five cases to mix it up. But I love the Later case
09:38:39 <cn3m[m]> pixels are awesome what else do you end up with an iPhone m
09:39:01 <anupritaisno1[m]> I tell you I actually use 8/12 GB on average and feel 12gb is actually less
09:39:12 <anupritaisno1[m]> Imagine going to something less for more cost
09:39:19 <headgas[m]> They may not be one plus, but what do you need 8 GB RAM for on a phone?
09:39:33 <anupritaisno1[m]> Heh
09:39:40 <headgas[m]> Oh they do have 12 now don't they
09:39:44 <anupritaisno1[m]> 8gb out of 12 is like my standard usage
09:39:49 <yolotrolo[m]> my phone is 6GB, it never use more than 3GB
09:39:51 <headgas[m]> How?
09:39:59 <cn3m[m]> I use Graphene and never hit 4gb
09:40:06 <headgas[m]> How do you see how much RAM your using?
09:40:11 <cn3m[m]> it's using your free space for cache
09:40:24 <renlord> bg apps should get killed
09:40:34 <renlord> no reason for them to be in resident memory
09:40:35 <headgas[m]> He must have a oneplus who else has that much RAM?
09:40:45 <renlord> too much ram is battery drain also
09:40:52 <headgas[m]> I had the 7 pro
09:40:56 <renlord> thats easily a couple of watts
09:40:57 <fll[m]> Allocated memory != needed memory
09:41:15 <renlord> its not liek available ram capacity will turn itself off
09:41:19 <renlord> thats not even how it works
09:41:49 <cn3m[m]> iPhones are a perfect example 2gb is perfectly usable
09:41:54 <renlord> foreground mem usage should be low, no more than a cuple of hundreds of MB
09:42:23 <headgas[m]> My wife has the 11 pro
09:42:36 <anupritaisno1[m]> <fll[m] "Allocated memory != needed memor"> If we're talking allocation that's sitting at 10gb
09:42:40 <cn3m[m]> <headgas[m] "My wife has the 11 pro"> can I be your wife?
09:42:44 <headgas[m]> Lol
09:42:55 <renlord> maybe you run a pretty heavyweight activity, 1gb RES size is also pretty huge
09:43:18 <headgas[m]> I tried to give her my iPad pro and the pixelbook, she never touched them so thats when I sold them haha
09:43:34 <anupritaisno1[m]> <renlord "maybe you run a pretty heavyweig"> I just changed the heap sizes
09:43:50 <headgas[m]> How do I check how much RAM im using?
09:44:02 <anupritaisno1[m]> Developer options has a section
09:44:11 <anupritaisno1[m]> But that's not the total allocation
09:44:15 <anupritaisno1[m]> It can be much higher
09:44:17 <headgas[m]> You would rather have an iPhone than the pixel 3 a running graphene is, cn3m ?
09:44:34 <headgas[m]> Os
09:44:39 <cn3m[m]> <headgas[m] "You would rather have an iPhone "> I consider them equal
09:44:39 <anupritaisno1[m]> <headgas[m] "You would rather have an iPhone "> Yes
09:44:48 <headgas[m]> Poo
09:44:54 <cn3m[m]> I don't have a preference between the OS
09:45:03 <fll[m]> > > <@fll:matrix.org> Allocated memory != needed memory
09:45:03 <fll[m]> > If we're talking allocation that's sitting at 10gb
09:45:03 <fll[m]> I would be very surprised if each app tells you the difference between allocation and actual usage ;)
09:45:04 <headgas[m]> IPhone is too simple and you cant do anything
09:45:07 <anupritaisno1[m]> Thing is the hardware
09:45:11 <cn3m[m]> pixels are better phones
09:45:30 <anupritaisno1[m]> If were going for broke and getting a pixel
09:45:30 <cn3m[m]> I haven't run into a better designed phone they are simple and nice
09:45:31 <renlord> i pay premium for PVC, TitanM and relatively better vendor support
09:45:34 <anupritaisno1[m]> Might as well get iPhone
09:45:40 <renlord> no other android phone has the above
09:45:45 <renlord> even iphone has no PVC
09:45:50 <headgas[m]> What is PVC, and TitanM?
09:45:55 <renlord> pixel visual core
09:46:14 <renlord> Titan M is the security chip on your pixel phone
09:46:17 <anupritaisno1[m]> Polyvinyl chloride. Don't listen to this guy ^
09:46:29 <renlord> lol
09:46:31 <headgas[m]> Haha
09:46:55 <anupritaisno1[m]> What the hell even is pixel visual core
09:47:04 <anupritaisno1[m]> That sounds like DRM with extra steps
09:47:09 <cn3m[m]> iPhone is pretty good photo wise
09:47:25 <headgas[m]> Googles software takes better pics though
09:47:26 <anupritaisno1[m]> Besides who buys phones for camera
09:47:31 <renlord> its hardware accelerated computational photograpohy
09:47:32 <cn3m[m]> I don't think it's fair to say Pixels are that much better than iPhones hardware wise
09:47:43 <anupritaisno1[m]> <renlord "its hardware accelerated computa"> Yeah no not interested
09:47:50 <renlord> for a shit camera person like me, its useful for me
09:47:53 <anupritaisno1[m]> Would rather buy a DSLR
09:48:05 <cn3m[m]> I am, but I have a 3a
09:48:06 <renlord> dotn know how to fkin use a DSLR
09:48:20 <renlord> and too bulky
09:48:38 <headgas[m]> I bought my wife a sony A6000 because she said she wanted to do photography but she barely touches it
09:48:41 <cn3m[m]> pixels are easier and better than DSLR for most people
09:48:44 <renlord> DSLR aint cheap either
09:48:45 <renlord> lol
09:48:56 <anupritaisno1[m]> <renlord "dotn know how to fkin use a DSLR"> Well if you can learn grapheneos dev you probably can if you put your mind to it
09:48:58 <renlord> a good DSLR can buy 2 pixels
09:49:05 <headgas[m]> The sony is mirrorless too
09:49:19 <anupritaisno1[m]> BTW yeah oneplus camera gets worse over time
09:49:25 <renlord> anupritaisno1[m]: ya, only got so much time for so many things :(
09:49:31 <anupritaisno1[m]> I'm thinking of separating the camera HAL
09:49:33 <renlord> if time got dilated by a factor of 2 i will buy a DSLR
09:49:38 <renlord> and practice photography
09:49:46 <anupritaisno1[m]> And merging CAF onto it
09:49:50 <renlord> i just need to move closer to a blackhole.
09:49:50 <cn3m[m]> I couldn't do what renlord does to save my life
09:49:59 <anupritaisno1[m]> So I don't have to pull it from oneplus again
09:50:05 <anupritaisno1[m]> <renlord "i just need to move closer to a "> You are
09:51:16 <cn3m[m]> you can really only master a few things
09:51:23 <headgas[m]> I loved the oneplus 7 pro, its a beautiful phone but thier customer service was crap so i returned it. Never need customer service with the reliability of a pixel
09:51:44 <cn3m[m]> pixel is amazing
09:51:53 <headgas[m]> Just like my glock, proven reliability
09:52:28 <cn3m[m]> haha Glock, reliability
09:52:29 <cn3m[m]> pick one
09:52:47 <headgas[m]> You dont think they are reliable??
09:53:15 <headgas[m]> Theyved freakin thrashed those things, went in the mud and everything and they still shoot
09:53:39 <cn3m[m]> you can't read sarcasm k
09:54:27 <headgas[m]> Easy to missunderstand when reading
09:55:47 <anupritaisno1[m]> <headgas[m] "I loved the oneplus 7 pro, its a"> They outsource servicing
09:55:55 <anupritaisno1[m]> So depending on the country it can be pretty shit
09:56:15 <anupritaisno1[m]> Here I got the phone fixed and delivered back on the same day
09:56:20 <headgas[m]> Good customer service is important to me
09:56:44 <headgas[m]> You guys may hate Purism but they have amazing customer service
09:57:57 <cn3m[m]> <headgas[m] "You guys may hate Purism but the"> so there's where their research staff went
09:58:07 <headgas[m]> Haha
09:59:31 <yolotrolo[m]> do you guys ever needed to use the customer service / warranty for a phone?
09:59:58 <yolotrolo[m]> in the last 10years
10:01:28 <organella[m]> How do you guys manage contacts for syncing/backup in case of losing the phone?
10:01:51 <anupritaisno1[m]> <organella[m] "How do you guys manage contacts "> Google contacts
10:02:04 <headgas[m]> yolotrolo: yea oneplus 7 pro
10:02:05 <anupritaisno1[m]> You can add in contacts through web
10:02:10 <anupritaisno1[m]> They let you export
10:02:35 <organella[m]> So export and import but what about new ones you add?
10:03:18 <organella[m]> <amb11[m] "this os support huawei p smart p"> No, only google pixels, see the faq on the website
10:03:26 <anupritaisno1[m]> <organella[m] "So export and import but what ab"> Add them yourself
10:03:55 <anupritaisno1[m]> <amb11[m] "this os support huawei p smart p"> You can get glassrom iff you have official lineage
10:04:51 <organella[m]> <anupritaisno1[m] "Add them yourself"> But isn't there some way to sync contacts to a private cloud-like account so I don't have to export&back up every so often?
10:04:59 <anupritaisno1[m]> <amb11[m] "what is this?"> Glassrom provides the grapheneos security changes as a patch set on top of lineage
10:09:02 <anupritaisno1[m]> <amb11[m] "sorry there is a tutorial"> No
10:12:05 <headgas[m]> So I got htop and obviously it shows everything thats running on your system.  Why is there soooo much stuff running?
10:13:25 <anupritaisno1[m]> Glassrom is intentionally made simple to build
10:13:43 <anupritaisno1[m]> However if you can't understand how
10:14:01 <anupritaisno1[m]> You're probably not ready to build at all
10:21:44 <joshman[m]> Ok. If iPad is not an option due to lack of proper connectivity to 4k monitor
10:21:44 <joshman[m]> Shall I go Chromebook or stick with Windows/Linux laptop instead
10:22:54 <headgas[m]> I don't know if Ipad can't connect to 4k,
10:23:36 <headgas[m]> And I'm not sure about chromebook either, I had the pixelbook but never tried to connect it to anything.
10:24:09 <joshman[m]> I know. It can't. Properly
11:06:03 <headgas[m]> Whats the best maps app to use?  Besides osandm cus i sucks
11:48:39 <renlord> google maps?
11:53:22 <xabi[m]> > I consider them equal
11:53:22 <xabi[m]> IOS has 1st party personal data harvesting built in, grapheneOS doesn't. I don't want a secure device designed to collect personal data.
12:17:19 <addikted2graphen> Hey, I was playing around with the multiple user profiles and noticed something with the icons.
12:19:15 <addikted2graphen> I login to the non admin account and pin my icons on the desktop etc. If I reboot the phone from said non admin account, and re login the icons are where I pinned them.
12:20:24 <addikted2graphen> But if I switch back to admin account, then login to the non admin account, the icons I pinned have all reset to default.
12:20:30 <renlord[m]> QC-CR#2013052
12:20:48 <renlord[m]> Should try to revert the camera workaround.
12:21:05 <renlord[m]> They fixed a potential use after free.
12:22:08 <cdesai> there was https://android.googlesource.com/platform/hardware/qcom/camera/+/e9b63db0ae86b3529b5e160e8d4a758703d0da3e last month
12:45:31 <bigtree[m]> hi
12:47:25 <madaidan[m]> Henlo
12:49:26 <demonMachina> is Vanadium dependent upon Vanadium WebView?
13:09:15 * parazen616[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/gDTnTtXShgNNGRVxhYWhLdZG >
14:07:01 <cyborgninjaneer[> What root account?
14:07:54 <cyborgninjaneer[> Oh, you mean the owner login, right? There's no root access on Android or GrapheneOS.
14:30:59 <xabi[m]> <demonMachina "is Vanadium dependent upon Vanad"> Im not sure about grapheneos but on android they are two independen packages
14:35:36 <yolotrolo[m]> it use trichrome, https://www.xda-developers.com/google-chrome-no-longer-webview-provider-android-10/
14:39:43 <yolotrolo[m]>  * it use trichrome now, https://www.xda-developers.com/google-chrome-no-longer-webview-provider-android-10/
14:46:29 <yolotrolo[m]> GrapheneOS switched to it not so long ago
14:47:55 <yolotrolo[m]> https://grapheneos.org/releases#changelog
16:01:09 <joshman[m]> Windy Maps just published their Maps app. Testing it now. So far Windy app was performing great for extreme watersports folks
16:55:25 <cn3m[m]> https://www.reddit.com/r/privacytoolsIO/comments/gv9r5f/best_laptop_for_privacy/
16:55:25 <cn3m[m]> oh no...
16:56:55 <EssentialChaos[m> <cn3m[m] "https://www.reddit.com/r/privacy"> Apart from Macs all laptops are pretty much the same, no?
16:57:48 <hypokeimenon[m]> an Ungoogled Chromebook if that's possible
16:58:26 <EssentialChaos[m> <hypokeimenon[m] "an Ungoogled Chromebook if that'"> If there's something like adb for ChomeOS, than maybe
16:58:33 <hypokeimenon[m]> Well, an Ungoogled ARM Chromebook
16:58:49 <cn3m[m]> oh no...
16:58:50 <EssentialChaos[m> Otherwise you can get CloudReady on some other laptops
16:59:01 <EssentialChaos[m> <EssentialChaos[m "Otherwise you can get CloudReady"> You'd miss only the verified boot, afaik
16:59:27 <hypokeimenon[m]> Well.. an Ungoogled Qualcomm Chromebook since the latest SoCs don't have built in modems anymore I think
16:59:47 <cn3m[m]> yeah I would recommend a MacBook or something with Qubes(if that fits the threat model with it's weird security issues)
16:59:56 <EssentialChaos[m> <hypokeimenon[m] "Well.. an Ungoogled Qualcomm Chr"> Is there such a thing?
17:00:07 <hypokeimenon[m]> <EssentialChaos[m "Is there such a thing?"> No man, just dreaming
17:00:51 <cn3m[m]> There are Qualcomm laptops you can run Ungoogled Chromium on
17:00:54 <cn3m[m]> CloudReady that is
17:01:10 <cn3m[m]> with Ungoogled Chromium in LXC
17:01:14 <EssentialChaos[m> <cn3m[m] "There are Qualcomm laptops you c"> Link?
17:01:43 <EssentialChaos[m> Do they let you use custom keys?
17:01:56 <cn3m[m]> I mean just find one of the Qualcomm laptops and load CloudReady on it
17:01:57 <hypokeimenon[m]> What Qualcomm laptops? The only one I know of is the Surface Pro X
17:04:02 <strcat[m]> GrapheneOS 2020.06.02.02 release: https://grapheneos.org/releases#2020.06.02.02
17:04:14 <hypokeimenon[m]> <EssentialChaos[m "Link?"> https://www.qualcomm.com/products/mobile-pcs
17:04:34 <anupritaisno1[m]> strcat
17:04:41 <anupritaisno1[m]> Working shadowcallstack
17:04:51 * anupritaisno1[m] uploaded an image: Screenshot_20200602-223235_Vanadium.png (131KB) < https://matrix.org/_matrix/media/r0/download/m.apex.to/htQNYNJLXlqQiJKEgHsYYZKp >
17:05:05 <anupritaisno1[m]> It launches fine
17:05:14 <anupritaisno1[m]> Also -fstack-protector-all for you madaidan
17:05:24 <strcat[m]> are you sure it's working though? SCS
17:05:27 <strcat[m]> check code and proc/maps
17:05:30 <anupritaisno1[m]> Yes
17:05:47 <anupritaisno1[m]> I just did a simple test
17:06:04 <anupritaisno1[m]> -fsanitize=shadow-call-stackg
17:06:11 <anupritaisno1[m]> With this invalid flag clang threw an error
17:06:25 <anupritaisno1[m]> Enough to prove the flag is uses throughout the build
17:07:02 <strcat[m]> you need to verify deeper than that though
17:07:11 <anupritaisno1[m]> BTW strcat if you can test it on yours would be nice
17:07:14 <anupritaisno1[m]> I changed the package name
17:07:17 <anupritaisno1[m]> https://0x0.st/iOaH.apk
17:07:32 <anupritaisno1[m]> But it's just test key signed
17:08:16 <anupritaisno1[m]> Here's the sha512 63f47d7293d28ad31fdf67b9a5f310e6b7a3e0b83582ad2ec6861ef87ae801df03b2d93fc5704b5771b8e58abfdfaf55de6d2d03a07e418868fe979281823ed5
17:09:58 <anupritaisno1[m]> strcat (@strcat:matrix.org): let me know how it goes
17:38:57 <stuux[m]> strcat: I have signed Auditor with the platform signing keys but still can´t get the signature|system permissions. Do you have any idea what is missing?
17:39:21 <stuux[m]> I have used the following to ask for the permissions in AndridManifest
17:39:26 <stuux[m]>     <uses-permission android:name="android.permission.MANAGE_USERS"/>
17:39:53 <stuux[m]>  * I have used the following to ask for the permissions in the AndroidManifest
17:40:06 <strcat[m]> are you sure it's signature|privileged
17:40:17 <stuux[m]> should be
17:40:28 <stuux[m]> donwloaded the keys form here
17:40:29 <stuux[m]> https://android.googlesource.com/platform/build/+/refs/tags/android-r-preview-4/target/product/security
17:40:46 <strcat[m]> that only applies to a test keys build
17:40:46 <stuux[m]> and then created a keystore with the following command
17:40:53 <stuux[m]> keytool-importkeypair -k google_certificate.keystore -p android -pk8 platform.pk8 -cert platform.x509.pem -alias platform
17:41:20 <stuux[m]> <strcat[m] "that only applies to a test keys"> so i can only test on non porduction builds?
17:41:36 <strcat[m]> you should be using the build system to replace the key
17:41:41 <strcat[m]> not signing with it separately
17:42:05 <stuux[m]> so i would have to build aosp from source?
17:42:21 <strcat[m]> yes, how are you trying to do it?
17:42:29 <strcat[m]> you can't use the test keys on a production build
17:42:33 <strcat[m]> those are for unsigned builds
17:42:35 <stuux[m]> oh ok
17:42:40 <stuux[m]> thanks
17:42:42 <strcat[m]> the signing keys are obviously not public
17:43:08 <strcat[m]> you're using keys that are strictly for signing development builds for testing
17:44:07 <stuux[m]> there is no other way i could test it without building from source?
17:44:53 <strcat[m]> how else?
17:45:12 <strcat[m]> you need the platform key for the build
17:45:14 <strcat[m]> to test stuff with it
17:49:29 <stuux[m]> would it be possible to build aosp on  a machine with 8gb of ram?
17:50:15 <strcat[m]> painfully with a ton of swap
17:50:16 <TheJollyRoger> stuux[m], it might be if you allocated a *lot* of swap space on an SSD, but it would take a very, very long time.
17:50:17 <anupritaisno1[m]> <stuux[m] "would it be possible to build ao"> Yes
17:50:23 <anupritaisno1[m]> Allocate 40gb of swap
17:50:33 <strcat[m]> would not recommend it, get a better build machine than that
17:50:53 <TheJollyRoger> I have some build docs coming up today.
17:50:56 <strcat[m]> although if you only need to do 1 full build
17:51:02 <strcat[m]> and then just do incremental builds for this app you need to test
17:52:18 <strcat[m]> renlord: btw a good step towards making the app update system would be adding signed channel metadata for Updater
17:52:26 <strcat[m]> renlord: so that the code from there can be reused
17:57:38 <stuux[m]> ok thanks, i will try
18:05:44 <stuux[m]> could I also build a userdebug version of graphene  os and use it´s signing keys?
18:06:21 <strcat[m]> yes
18:06:28 <strcat[m]> you don't need to do a signed build
18:06:41 <strcat[m]> just do a test key signed userdebug build with make
18:06:53 <strcat[m]> don't bother generating keys and then factory images / over-the-air update package
18:08:15 <stuux[m]> so i just follow the build instructions on the graphene os website for a userdebug build?
18:14:36 <anupritaisno1[m]> strcat what to set version code to?
18:15:11 <strcat[m]> anupritaisno1: for Vanadium? see my args.gn
18:15:14 <strcat[m]> in the repo
18:16:18 <anupritaisno1[m]> <strcat[m] "anupritaisno1: for Vanadium? see"> Assume upgrading to a newer version
18:16:18 <strcat[m]> difiewe: I think you're misunderstanding what sideloading updates does
18:16:38 <strcat[m]> anupritaisno1: you mean your own version?
18:16:43 <strcat[m]> you don't really need to bump it
18:17:00 <anupritaisno1[m]> .93
18:17:01 <strcat[m]> difiewe: yes that's it
18:17:14 <strcat[m]> anupritaisno1: change 83 to 93
18:19:47 <strcat[m]> anupritaisno1: https://chromiumdash.appspot.com/releases?platform=Android
18:19:49 <strcat[m]> the newest is 83
18:20:48 <anupritaisno1[m]> <strcat[m] "anupritaisno1: change 83 to 93"> BTW can I build multiple targets?
18:20:49 <strcat[m]> difiewe: yes but there's not much use case for that - why would you need to ever do that if your device is connected to the internet?
18:20:54 <strcat[m]> difiewe: I think you're misunderstanding what it does
18:21:01 <anupritaisno1[m]> Like also build chrome_modern_public?
18:21:08 <strcat[m]> sideloaded updates still have to be signed
18:21:14 <strcat[m]> anupritaisno1: sure? but that's not supported
18:21:19 <strcat[m]> anupritaisno1: by Vanadium
18:21:26 <strcat[m]> Vanadium only uses Trichrome targets
18:21:45 <strcat[m]> only the 3 Trichrome targets are supported, or the standalone WebView target
18:21:54 <strcat[m]> Vanadium does not support standalone browser targets or Monochrome
18:22:32 <strcat[m]> anupritaisno1: chrome_modern_public is NOT simply the same thing as the Trichrome browser without the library split
18:22:42 <strcat[m]> it targets older releases of Android
18:22:48 <strcat[m]> and it doesn't have Vanadium patches
18:23:42 <strcat[m]> anupritaisno1: just build the 3 Trichrome packages if you want the browser, or *only* the standalone WebView target if you only want the WebView
18:23:58 <strcat[m]> difiewe: I don't understand what you mean
18:24:04 <strcat[m]> difiewe: and you are definitely misunderstanding it
18:24:23 <strcat[m]> difiewe: updates are signed and verified, whether you use over-the-air updates or local sideloaded updates
18:24:44 <strcat[m]> difiewe: updates are signed and verified, if you use our releases you don't have the signing keys
18:24:51 <strcat[m]> if you want to modify the OS, you need to build and sign your own releases
18:24:53 <strcat[m]> with your changes
18:25:17 <strcat[m]> even if updates were not signed/verified there is verified boot
18:25:28 <strcat[m]> but obviously updates need to be signed/verified
18:25:37 <strcat[m]> as part of a basic sane security model
18:26:24 <strcat[m]> no
18:26:29 <strcat[m]> you build and sign each update with your keys
18:26:38 <strcat[m]> if you consider that 'official'
18:27:24 <strcat[m]> you don't need to develop anything
18:27:39 <strcat[m]> if you just want to sideload updates as you said you don't need an update server
18:27:59 <strcat[m]> either way it's just a static web server
18:28:05 <strcat[m]> dunno why you think you'd need to build your own system
18:28:44 <strcat[m]> I'd strongly suggest just using the official releases
18:29:09 <strcat[m]> if you want F-Droid and Orbot just install them
18:29:13 <strcat[m]> they don't need to be bundled into the OS
18:30:00 <strcat[m]> I answered already
18:30:03 <strcat[m]> both
18:30:14 <cn3m[m]> > <@difiewe:matrix.org> 1) How side-loading updates works (and if they work)
18:30:15 <cn3m[m]> > 2) If I can prebundle apps with the update (or a other smart way to speed up setup process)
18:30:15 <cn3m[m]> just install once and run it for 2 years and keep your installed stuff
18:30:16 <cn3m[m]> GrapheneOS is very stable set it up once and forget
18:30:37 <strcat[m]> https://grapheneos.org/usage#updates-sideloading explains it too
18:30:48 <strcat[m]> including that they are signed and verified like over-the-air updates
18:31:15 <cn3m[m]> install the official release and install your apps and then use official updates for the next 2 years
18:31:24 <Kurai> is it me or matrix is acting strange? I see strcat talking to himself
18:31:36 <strcat[m]> when is matrix not acting strange? :P
18:31:54 <TheJollyRoger> Kurai: hold on let me check.
18:31:59 <strcat[m]> I only use Matrix for this channel since I have to deal with stuff on the Matrix side of things
18:32:00 <TheJollyRoger> Since I see the same thing.
18:32:30 <strcat[m]> > Yes I can side-load updates and before the official google security updates
18:32:34 <strcat[m]> I don't quite know what you mean by this
18:32:40 <TheJollyRoger> difiewe: right now I can see you on the Matrix side, but not on the IRC side. I think Freenode is dropping people again.
18:32:43 * TheJollyRoger sighs.
18:32:49 <strcat[m]> > However, is there a smart way to install apps really fast for multiple phones?
18:32:55 <strcat[m]> not really
18:33:00 <TheJollyRoger-M> difiewe: but I can see you here.
18:33:04 <strcat[m]> just install them on each phone
18:33:13 <strcat[m]> why do you need to do it fast across many?
18:33:47 <strcat[m]> eventually we can have proper support for device policy management where it is provisioned as part of the initial setup wizard
18:33:50 <strcat[m]> and given device owner
18:33:54 <strcat[m]> for enterprise device deployments
18:34:19 <strcat[m]> I don't really understand why you need to be concerned with how fast it is to install 2 apps per phone
18:34:49 <strcat[m]> if you're talking about an enterprise device deployment, we do support profile owners already, but not really device owners without using adb
18:34:57 <strcat[m]> since the setup wizard doesn't support it afaik
18:35:04 <strcat[m]> and it has to be done at provisioning time afaik
18:35:17 <strcat[m]> perhaps it can be done later without adb - dunno
18:35:27 <strcat[m]> my understanding is that the normal way had to happen at provisioning time
18:35:33 <strcat[m]> profile owners are more flexible
18:36:03 <strcat[m]> enterprise support via device managers and in Auditor is something that can be worked on by interested parties
18:36:09 <strcat[m]> we aren't going to do much on our own though
18:36:19 <strcat[m]> if a company wants it they need to have a developer work on it
18:36:34 <strcat[m]> we have full device manager support - just not a bundled one that's integrated into the Setup Wizard
18:37:16 <strcat[m]> > Side-loading updates (cancels out active internet access) works for grapheneOS, right?
18:37:21 <strcat[m]> https://grapheneos.org/usage#updates-sideloading
18:37:25 <strcat[m]> read that whole section
18:37:38 <strcat[m]> > Before flashing GrapheneOS it is suggested to install the latest Google Updates. Can I them also side-load?
18:37:59 <strcat[m]> sure, or skip it if you know the firmware is already new enough
18:38:02 <strcat[m]> it's documented as a best practice
18:38:10 <strcat[m]> so people don't run into issues
18:38:27 <strcat[m]> it is not usually needed but if we didn't document it people would run into issues with firmware that's too old
18:38:39 <strcat[m]> we cover best practices and try to cover all the things people do wrong
18:41:49 <cn3m[m]> the documentation is fantastic
18:42:00 <cn3m[m]> I can answer 90% of questions with a quote
18:42:26 <TheJollyRoger> Hey guys. Er... what do you think of this...?
18:42:56 <cn3m[m]> <difiewe[m] "It isn't for speeding up flashin"> no
18:42:57 <TheJollyRoger> https://github.com/Peter-Easton/GrapheneOS-Knowledge/blob/for-maintainers/For%20Maintainers/Setting-Up-Your-Host.md
18:43:27 <TheJollyRoger> aeonsolution[m]: sorry this took so long!
18:43:39 <cn3m[m]> @cyredanthem:synapse.travnewmatic.com
18:43:49 <TheJollyRoger> I think I've got this part tested and working!
18:44:00 <TheJollyRoger> Ah wait whoops forgot one dependency...
18:45:05 <cyredanthem[m]> Man I really wish there was a highly compressed source archive so hard to get it with crappy net
18:45:08 <TheJollyRoger> There we go.
18:47:45 <cn3m[m]>  @difiewe:matrix.org you should setup a machine that can flash the OS and lock. then you store the apks needed on a flash drive and use a dongle you bang them out
18:48:51 <cyredanthem[m]> The bootloader?
18:50:13 <cn3m[m]> if you don't want to build your own system you have to update and maintain a server
18:51:40 <anupritaisno1[m]> BTW
18:51:47 <anupritaisno1[m]> If I get pixel 4 testers
18:51:53 <anupritaisno1[m]> I'll do graphene for pixel
18:51:54 <anupritaisno1[m]> At least unofficially
18:52:49 <cn3m[m]> @headgas:matrix.org
18:53:02 <cn3m[m]> if someone buys me a Pixel 4 I'll test ;-P
18:53:52 <cn3m[m]> <difiewe[m] "Was the bootloader meant?"> check the install guide
18:55:11 <anupritaisno1[m]> <cn3m[m] "if someone buys me a Pixel 4 I'l"> I don't have it either
18:55:17 <anupritaisno1[m]> I'm going to be reading logs/dmesg
18:55:51 <anupritaisno1[m]> The good news is
18:55:52 <anupritaisno1[m]> I already have a 4.14 hardened base
18:55:55 <anupritaisno1[m]> So expect some good hardening
18:56:59 <anupritaisno1[m]> To be honest I wouldn't
18:57:07 <anupritaisno1[m]> Unless someone wants to buy it for me
18:57:29 <cn3m[m]> <difiewe[m] "Why is the 4 cheaper than the 3/"> link?
19:01:12 <orge_td[m]> How to install latest update from the system settings page ?
19:02:11 <TheJollyRoger> Hi orge_td[m], just get on a wifi network and wait, it should happen automatically if your bootloader's locked.
19:02:29 <orge_td[m]> Ok
19:05:07 <TheJollyRoger> orge_td[m]: the seamless update client will check /periodically/ and if your network's unmetered it'll start downloading the update. If one isn't available it'll simply wait.
19:06:17 <orge_td[m]> Settings has no effect I ll wait then
19:07:16 <TheJollyRoger> Yeah, if it doesn't find one available, you're good to go. Note that the beta channel is usually used for some amount of testing, so depending on which update channel you're on, you may not get one. Notifications also need to be turned on, and your "Don't Disturb" should be switched off.
19:13:11 <cn3m[m]> Windows 10 Enterprise here
19:17:51 <cn3m[m]> Windows 10 is very secure with strong privacy controls and transparency
19:17:52 <cn3m[m]> it's probably the best windows ever
19:17:52 <cn3m[m]> not sure what the issue is
19:18:37 <cn3m[m]> that's an inspiration yes
19:19:10 <yolotrolo[m]> do qubeos support hardware acceleration now ?
19:19:20 <yolotrolo[m]> for gpu
19:19:30 <TheJollyRoger> difiewe: Also a Qubes user here.
19:19:38 <cn3m[m]> however Qubes fails to fix critical issues with the design since it's a research project focused on one thing
19:20:20 * cn3m[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/NixkcUJetmMBbSOnttXgTvec >
19:20:31 <TheJollyRoger> yolotrolo[m]: Qubes always has supported Intel Virtualization technology and even requires things like VT-d VT-x for some things.
19:20:47 <cn3m[m]> the product matters most
19:20:52 <TheJollyRoger> difiewe - prepare to have your mind blown.
19:20:53 <yolotrolo[m]> i mean the gpu thing
19:21:14 <TheJollyRoger> yolotrolo[m]: gpu passthrough is mutually exclusive with the project goals at this moment.
19:21:40 <TheJollyRoger> You *can* do it, if you really wanted to, and I met someone over the internet who actually had gotten it working, but he said you probably don't want to try it.
19:22:01 <TheJollyRoger> Unless you want to give a misbehaving VM the ability to do all sorts of incredibly nasty vectors to escape from isolation.
19:22:23 <TheJollyRoger-M> Also damn Matrix is really lagging.
19:23:10 <TheJollyRoger-M> <difiewe[m] "Can you say something about flas"> Yes. Don't.
19:24:17 <TheJollyRoger> The reason why we don't encourage flashing from a VM is because USB passthrough on different platforms can be incomplete, or buggy, and it really depends on what the platform is and the quality of the USB passthrough.
19:24:23 <TheJollyRoger> Some guests are broken for this. Some HOSTS are broken for this.
19:24:28 <TheJollyRoger> Some guests AND some hosts are broken for this.
19:24:35 <TheJollyRoger> Some software and kernels are broken for this.
19:25:40 <TheJollyRoger> Fastboot uses the full features available to USB and sometimes that's not completely done via passthrough. Sure. You could get lucky, and the stars could align and you might be able to complete the software installation fine.
19:25:51 <TheJollyRoger> More often than not though it'll just fail and deliver you an error message.
19:26:03 <TheJollyRoger> Or you'll get the infamous "No operating system found" and simply have to start over.
19:26:32 <TheJollyRoger-M> Hang on a sec and wait for my messages via irc to come in.
19:29:45 <TheJollyRoger-M> difiewe: are you seeing messages come in from "TheJollyRoger" on IRC? That's me on the other side but it's lagging terribly: Matrix is taking more than two minutes to receive a reply from the IRC side and on the IRC side I don't see you at all, this is a known bug where Matrix silently discards messages.
19:34:39 <TheJollyRoger-M> <difiewe[m] "why?"> difiewe: so in a nutshell we don't encourage installation from a VM because there's a high chance that USB pass through on the platform could be broken and either fail for no apparent reason.
19:34:48 <TheJollyRoger-M> Given the large number of combinations of hosts, guests, kernels, and also hardware, I can't tell you what will and won't work so you're on your own if you decide to do this.
19:34:52 <TheJollyRoger-M> Remember that you can use remote attestation to guarantee the authenticity of the OS after it's been installed so the computer doing the installation doesn't need to be as trusted as the phone is.
19:35:53 <anupritaisno1[m]> <TheJollyRoger-M "difiewe: so in a nutshell we don"> No need fyi
19:35:58 <anupritaisno1[m]> Download the fastboot image
19:36:03 <anupritaisno1[m]> Flash just boot.img
19:36:09 <anupritaisno1[m]> Reboot to recovery
19:36:15 <anupritaisno1[m]> Sideload the full OTA
19:36:22 <TheJollyRoger-M> <difiewe[m] "Okay. I'am new to matrix. How hi"> At this moment it's coming in at roughly two minutes to get from IRC to Matrix and your messages to IRC are being silently discarded.
19:36:53 <TheJollyRoger-M> <difiewe[m] "Is IRC still the better way to c"> Yes.
19:37:11 <anupritaisno1[m]> Telegram bridge when?
19:37:26 <TheJollyRoger> anupritaisno1[m]: for some reason, I can't see /you/ on the other side.
19:37:40 <TheJollyRoger> >_<.
19:37:48 <anupritaisno1[m]> <TheJollyRoger "anupritaisno1: for some reason, "> One sec
19:38:18 <cn3m[m]> xmpp bridge when?
19:38:38 <anupritaisno1[m]> TheJollyRoger: https://youtu.be/YX4L-vPnIJs
19:38:44 <anupritaisno1[m]> That should fix it
19:39:08 <TheJollyRoger> sorry anupritaisno1[m], I'm unable to watch YouTube Videos at this moment, what's at that link?
19:39:23 <cn3m[m]> Windows 10 is so awesome for security they did such a good job
19:39:33 <anupritaisno1[m]> <TheJollyRoger "sorry anupritaisno1, I'm unable "> You'll know when you hear it
19:40:01 <cn3m[m]> I might need one of those secured core PCs
19:40:01 <hypokeimenon[m]> ReactOS master race
19:40:03 <hypokeimenon[m]> jk
19:40:23 <TheJollyRoger> anupritaisno1[m]: I'll check in a sec, when I can, just right now the computer's tied up for the next couple hours doing a test build.
19:41:08 * yolotrolo[m] uploaded an image: hi.jpg (11KB) < https://matrix.org/_matrix/media/r0/download/matrix.org/jhWpwWbfDmqbBSrwqejijUOz >
19:41:10 <yolotrolo[m]> cn3m:
19:41:55 <TheJollyRoger> yolotrolo[m]: I can't see you or cn3m[m] on the Matrix side for some reason >_<.
19:42:34 <yolotrolo[m]> do ur device meets requirements for enhanced security?? 🥰 https://support.microsoft.com/en-us/help/4096339/windows-10-device-protection-in-windows-defender-security-center#hardwarescore
19:43:12 <yolotrolo[m]> <TheJollyRoger "yolotrolo: I can't see you or cn"> hmm strange
19:45:52 <TheJollyRoger> yolotrolo[m]: yeah, I think Matrix.org is silently discarding messages at the bridge.
19:46:32 <anupritaisno1[m]> <difiewe[m] "Is there a guide?"> Unzip the factory image
19:46:34 <anupritaisno1[m]> There's another zip inside
19:46:36 <anupritaisno1[m]> Unzip that too
19:46:37 <anupritaisno1[m]> You'll find boot.img
19:46:39 <anupritaisno1[m]> Flash it
19:52:50 <danielrf[m]> strcat  strcat : Getting "Expected BUILD_ID is QQ3A.200605.001 and currently building with QQ3A.200605.002" when building for crosshatch
19:53:11 <strcat[m]> crosshatch uses 001 tag
19:53:14 <danielrf[m]> build/make/core/build_id.mk is the same for both tags, with just "BUILD_ID=QQ3A.200605.002"
19:53:27 <strcat[m]> I'll check in a sec
19:53:33 <danielrf[m]> k thx
19:53:36 <cdesai> strcat[m]: just use my solution :P
19:53:49 <danielrf[m]> he had it in the last release, maybe just left out this time
19:53:57 <anupritaisno1[m]> <danielrf[m] "strcat  strcat : Getting "Expect"> Well just edit it
19:54:24 <danielrf[m]> I know how to fix it myself, i'm just reporting upstream
19:54:27 <anupritaisno1[m]> You should ideally pick the aosp tag corresponding to the latest pixel device
19:54:27 <anupritaisno1[m]> So pixel 4
19:55:36 <strcat[m]> cdesai: I am using your way
19:55:37 <strcat[m]> that's why it screwed up :P
19:55:37 <strcat[m]> I forgot to update it
19:56:08 <cdesai> strcat[m]: haha I did the same, left it at qq2a instead
19:56:16 <strcat[m]> cdesai: I just forgot to make the new commit
19:56:31 <cdesai> yeah
19:56:39 <cdesai> I do interactive rebases in manage.sh
19:56:39 <strcat[m]> I hate makefiles so much
19:56:43 <cdesai> so it gets that
19:56:45 <strcat[m]> $(filter) is so counter-intuitive
20:05:01 <strcat[m]> danielrf: alright trying to fix it
20:05:06 <strcat[m]> need to make new manifest tags
20:08:56 <strcat[m]> danielrf: try now, double checking it atm
20:08:59 <strcat[m]> it's hard to script this
20:09:14 <strcat[m]> since atm I'm manually generating manifests with repo manifest
20:09:24 <strcat[m]> to avoid needing people to verify tag signatures across all the repos
20:09:27 <strcat[m]> to verify tags
20:09:34 <strcat[m]> scripting screwed up this time
20:10:07 <strcat[m]> difiewe: why not just install apps after
20:10:32 <strcat[m]> difiewe: a proper fresh install is the factory reset state where userdata is erased
20:10:40 <strcat[m]> so when the user boots up the device
20:10:46 <strcat[m]> it generates the encryption keys, etc.
20:11:05 <strcat[m]> so for example in a scenario where GrapheneOS offered devices with GrapheneOS preloaded
20:11:16 <strcat[m]> the devices would be shipped in that factory reset state
20:11:20 <strcat[m]> where they are initialized when booted
20:11:32 <strcat[m]> unless we were doing something special for someone like letting them pair with Auditor remotely
20:11:40 <strcat[m]> and then verify the device is the right one when they get it
20:11:52 <strcat[m]> and then they'd probably want to factory reset it
20:12:07 <strcat[m]> you can't bundle apps in a way that they are there after a factory reset without making your own builds
20:12:37 <strcat[m]> if you want to customize it and change things you need your own builds, otherwise you're just making an install and changing settings, installing apps to that profile, etc.
20:12:48 <strcat[m]> it is not the same as an app being bundled and installed by default in all profiles
20:13:33 <strcat[m]> difiewe: it sounds like what you actually want is to make a fork of GrapheneOS customized to your liking, otherwise you are just installing GrapheneOS on each device and setting it up as you wish and that's not a fresh install meant for users to receive on a device
20:14:10 <strcat[m]> I don't see much reason to bundle Orbot
20:14:24 <strcat[m]> it's also a fairly problematic app and there really needs to be a new implementation of a tor-based VPN
20:14:37 <strcat[m]> doesn't meet our expectations for bundling an app
20:15:57 <danielrf[m]> strcat:  Working now. Build starts successfully with the latest tags. thanks
20:16:21 <strcat[m]> danielrf: I added a note to the procedure to avoid it happening again
20:16:25 <strcat[m]> so should be fine next time
20:17:19 <strcat[m]> just set it up for them then
20:17:54 <strcat[m]> it isn't going to work like a fresh device
20:17:58 <strcat[m]> since it isn't
20:18:36 <strcat[m]> you're talking about wanting to do it efficiently and you want it to be slick and working like a fresh install (generating new encryption key, setup wizard process)
20:18:41 <strcat[m]> don't see why that matters for that case
20:19:08 <strcat[m]> it isn't going to go through the initial setup / provisioning
20:19:13 <strcat[m]> I don't really see why it'd matter
20:19:29 <strcat[m]> what you're asking doesn't really make sense based on the proposed scenario
20:19:48 <strcat[m]> it sounds like what a company selling devices with it would ask me, and it's just not aimed at that right now
20:19:58 <strcat[m]> and if we pursue that it will be via official sales through a non-profit org
20:20:00 <strcat[m]> not a company
20:20:25 <TheJollyRoger> Whew.
20:21:32 <strcat[m]> various companies want to license it and use the trademarks, etc. but it is not really what this is meant to be
20:22:05 <strcat[m]> if we sell devices it'd be through official first party channels as a non-profit org
20:22:08 <orge_td[m]> Some already tried apparently n screw up
20:22:10 <strcat[m]> and I don't consider it suitable for people who can't install it on their own atm
20:23:10 <cx2[m]> At the moment
20:23:43 <strcat[m]> we have a lot of work to do
20:24:17 <strcat[m]> it is essentially production quality right now but it's early on and is missing important functionality that would need to be bundled
20:24:26 <strcat[m]> and is missing a properly sized/resourced development team
20:24:27 <strcat[m]> and device maintainers
20:24:53 <strcat[m]> we aren't trying to promote it for regular users and we aren't selling devices with it right now, for real reasons
20:25:08 <strcat[m]> needs a lot of missing things filled in, etc.
20:25:24 <strcat[m]> difiewe: no why don't you just set it up for them
20:25:26 <strcat[m]> and give them the phone
20:25:34 <strcat[m]> and accept that they won't go through the setup wizard themselves, etc.
20:26:01 <strcat[m]> difiewe: if that doesn't work your scenario doesn't seem to match what you want to do especially since you're asking about making this efficient i.e. you want to do it many times
20:26:47 <strcat[m]> my suggestion is for people to collaborate on the project and help make it better, fill in functionality gaps from not having Play Services, develop new apps to fill gaps in the ecosystem where existing apps are problematic
20:27:05 <strcat[m]> the way I want to handle F-Droid is not using it as our own app install/update system
20:27:42 <strcat[m]> but rather we could package our own builds of it and make it available via our own app repository system
20:28:17 <strcat[m]> it's not suitable to be bundled: too buggy, doesn't meet robustness/security standards for bundled code, and license is problematic
20:28:17 <cn3m[m]> if people want to install F-Droid that's their prerogative
20:28:23 <cn3m[m]> It shouldn't be shipped
20:28:25 <TheJollyRoger> Yeah.
20:28:34 <strcat[m]> but we could offer it in an app repository
20:28:40 <strcat[m]> so people can install our own build of it from there
20:28:45 <strcat[m]> it's just not going to be bundled
20:28:46 <TheJollyRoger> Heh heh. With a whole lot of warnings alright!
20:29:03 <strcat[m]> even if it wasn't really buggy and didn't have such major problems with the official repo
20:29:11 <cn3m[m]> difiewe: GrapheneOS as a project takes strong measures to protect the signing keys. Your organization likely will be unable to match that level of security.
20:29:17 <strcat[m]> we won't include GPLv3 code because it's incompatible with our goals
20:30:15 <TheJollyRoger-M> <difiewe[m] "If you don't use Fdroid, how do "> You get them by a preauthenticated and secured back channel to the upstream developers.
20:30:18 <EssentialChaos[m> <difiewe[m] "If you don't use Fdroid, how do "> Build from source when possible?
20:30:21 <cn3m[m]> F-Droid doesn't meet the standards of the project. That doesn't mean a user can't set it up themselves. There's not a good solution at this point
20:30:35 <strcat[m]> as I said earlier
20:30:43 <strcat[m]> I don't think things are ready for regular users right now
20:30:46 <EssentialChaos[m> Or download the APK from developer directly
20:31:00 <TheJollyRoger-M> <difiewe[m] "This security can be archived by"> No, it's a matter of endpoint security which is a rabbithole.
20:31:02 <strcat[m]> I don't have to give a recommendation / official answer for everything because this is in development and I've explicitly made it clear
20:31:10 <strcat[m]> that things are in an early stage and not ready for regular users
20:31:12 <strcat[m]> they should use an iPhone
20:31:16 <strcat[m]> as I keep saying everywhere
20:31:56 <sel[m]1> <strcat[m] "but we could offer it in an app "> Graphene is going to have it's own app repository?
20:33:11 <TheJollyRoger> difiewe[m]: I don't mean to sound snide, but if you're not ready to safeguard your own private keys, understand the security implications of data remnance and permanence, and understand the consequences of self-signing, you should not be undertaking making your own selfsigned builds and issuing them to other people.
20:33:54 <cn3m[m]> You really should use iPhones or Google Pixels for average users or large scale implementations. They have excellent enterprise support
20:34:56 <difiewe[m]> <TheJollyRoger "difiewe: I don't mean to sound s"> I think it's more a problem that I don't be a native speaker and don't understand all the details
20:35:15 <TheJollyRoger> difiewe[m]: ah, I am sorry. I don't speak any other languages :(
20:35:22 <difiewe[m]> What do you mean with "remnance and permanence"?
20:36:15 <difiewe[m]> signing with gpg and storing keys safely isn't that hard
20:36:54 <Jeremy_Rand_Tal4> <TheJollyRoger "cn3m, I have a slightly hard tim"> Hello cn3m ! Namecoin dev here; feel free to ask me questions if you still have any.  (Please mention my nick though; this channel is high-traffic enough that I'll miss it otherwise.)
20:37:07 <TheJollyRoger> Hey Jeremy_Rand_Tal4 good to see you ^_^.
20:37:26 <difiewe[m]> <cn3m[m] "You really should use iPhones or"> Both have wifi-triangulation. A lot of people don't like that "feature"
20:38:26 <strcat[m]> wifi triangulation?
20:38:32 <cn3m[m]> Jeremy_Rand_Talos: thanks I'll have some questions in a bit. Doing some mod work. Thanks for stopping by
20:38:43 <strcat[m]> 38qlew5q: it's not in AOSP or GrapheneOS
20:38:46 <strcat[m]> it's a Play Services feature
20:38:47 <TheJollyRoger> difiewe[m]: consider that data written to SSDs stays there forever, even if deleted, short of an ATA Secure Erasure (and even then). It is possible to recover keys from Solid State drives using some amount of forensics. What I'm saying is, your end point will end up being ultimately trusted, and you're going to need to be prepared to handle the consequences.
20:39:13 <Jeremy_Rand_Tal4> <TheJollyRoger "For a while, Namecoin was able t"> There are other ways we can do this besides Chromium's HPKP API; some of those approaches are already implemented (not particularly fun to install yet though) and others are in the works.
20:39:18 <cn3m[m]> <M38qlew5q[m] "Hey question for you all.  How d"> It's not there, but if it was and open source it wouldn't be removed if it was a reasonably designed system. Which it is
20:39:20 <cn3m[m]> It's a double opt in
20:39:27 <strcat[m]> TheJollyRoger: the keys aren't written to the flash drive unencrypted for AOSP tho
20:39:31 <strcat[m]> not how it works
20:39:58 <strcat[m]> even if you don't set a passphrase or anything
20:40:05 <TheJollyRoger> Whew.
20:40:06 <strcat[m]> there is no way to recover data from the flash alone
20:40:12 <TheJollyRoger> Well that gives me some peace of mind...
20:40:15 <strcat[m]> it is encrypted by default
20:40:25 <strcat[m]> before you set a passphrase everything is still encrypted
20:40:51 <strcat[m]> it generates random encryption keys for global device data (like installed apks) and per-profile data (user data)
20:41:09 <difiewe[m]> <TheJollyRoger "difiewe: consider that data writ"> I know all that stuff. Some forensics can countered with a trim script. The problem is wear leveling. Only thing I don't understand is the word "endpoint"
20:41:40 <strcat[m]> TheJollyRoger: the encryption keys used to encrypt data and file names are randomly generated and then *encrypted* with key encryption keys
20:41:44 <TheJollyRoger> "endpoint" being the security server itself.
20:41:49 <strcat[m]> key encryption keys are derived - never stored
20:41:51 <TheJollyRoger> *being the security of the server itself
20:42:36 <TheJollyRoger> strcat[m]: oh whew.
20:42:50 <difiewe[m]> <strcat[m] "it generates *random* encryption"> that random key is then encrypted with the users one, right?
20:43:13 <strcat[m]> TheJollyRoger: key encryption keys are derived from various inputs: TEE hardware-bound key, per-profile random token stored in the security chip (on devices with Weaver like Pixel 2, 3, 3a), OS verified boot key, secdiscardable data and for user profiles also a token derived from the user's auth method
20:43:19 <strcat[m]> TheJollyRoger: they are never stored - they are derived
20:43:25 <strcat[m]> TheJollyRoger: that includes before you set a passphrase
20:43:38 <strcat[m]> TheJollyRoger: the keys actually used to encrypt data / metadata are randomly generated and *encrypted* with the key encryption keys
20:43:43 <strcat[m]> and are only ever stored encrypted
20:43:51 <strcat[m]> key encryption keys are not stored
20:43:56 <difiewe[m]> <TheJollyRoger ""endpoint" being the security se"> ah, but I said I don't work GrapheneOS. So where comes the server from?
20:44:12 <TheJollyRoger> difiewe[m]: you're going to be doing your own builds right?
20:44:33 <strcat[m]> TheJollyRoger: and erase works reliably because Weaver tokens (provided by Titan M on Pixels) can be reliably erased on the security chip
20:44:39 <strcat[m]> and also there's the secdiscardable data
20:44:45 <TheJollyRoger> strcat[m]: would there be any advantage in-- hey wait a minute
20:44:53 <strcat[m]> which is a large randomly generated file on the flash memory that's hashed
20:44:58 <strcat[m]> and the hash is used as one of the inputs
20:45:11 <strcat[m]> so if even a dozen bytes of that file aren't recoverable that's enough
20:45:16 <strcat[m]> but on Pixels it's not really useful
20:45:19 <TheJollyRoger> I er... I was thinking about the keys being used to store the certificates used for signing in keytool, sorry.
20:45:19 <strcat[m]> it's basically a fallback for shit hardware
20:45:34 <TheJollyRoger> Since I was thinking of buying a bulk pack of yubikeys.
20:45:42 <difiewe[m]> <TheJollyRoger "difiewe: you're going to be doin"> No, I try to figure out how to deliver a stock GrapheneOS to an absolute normal person.
20:45:53 <TheJollyRoger> difiewe[m]: OH whoop, I misunderstood, sorry.
20:46:27 <strcat[m]> TheJollyRoger: https://source.android.com/security/encryption/file-based#aosp-implementation-details explains how device-independent encryption works
20:46:31 <strcat[m]> devices like Pixels enhance this
20:46:38 <TheJollyRoger> Woah.
20:46:49 <strcat[m]> also note 'held in the TEE' means in memory - key encryption keys are never stored
20:47:02 <TheJollyRoger> I'm setting up a dedicated build server for doing maintenance, and I was trying to think about where I'm going to store my device signing keys, since I don't want them on the hard drive of the PC.
20:47:11 <strcat[m]> TheJollyRoger: Pixels add in the Weaver feature (which other devices can also provide) via the Titan M
20:47:19 <strcat[m]> and provide a concrete implementation of the TEE part
20:47:22 <TheJollyRoger> Oh yeah.
20:47:34 <strcat[m]> the device-independent spec is hand wavy about that since it leaves a lot of freedom for devices to improve the TEE part of this
20:47:38 <difiewe[m]> <TheJollyRoger "I'm setting up a dedicated build"> Whats about hardware token
20:47:48 <difiewe[m]> Thing this is the standard
20:47:51 * strcat[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/XGsVPnsavVaBOvxpkGDeIfED >
20:47:52 <strcat[m]> so basically
20:48:07 <difiewe[m]> Like the Librem key. Full open firmware hardware token
20:48:09 <strcat[m]> they provide software key derivation (can be enhanced with hardware instructions) in the OS
20:48:11 <TheJollyRoger> difiewe[m]: yeah, I make smartcards and Yubikeys, but Feitian is my vendor.
20:48:22 <TheJollyRoger> *I make smartcards and use Yubikeys,
20:48:49 <TheJollyRoger> Sorry, correction: I make PGP smartcards and use Yubikeys, but Feitian is my vendor, the cards I use are J145H DIs.
20:48:51 <difiewe[m]> Yubikeys aren't open firmware
20:49:18 <TheJollyRoger> I know they aren't, neither are Libremkeys and Nitrokeys because they simply use an STM32 to make calls to a smartcard.
20:49:23 <strcat[m]> if the librem key is open source link the sources
20:49:25 <difiewe[m]> <difiewe[m] "Yubikeys aren't open firmware"> Librem key is better, becuase open firmware
20:49:32 <strcat[m]> link firmware sources then
20:49:59 <TheJollyRoger> difiewe[m]: they are not open source, because the open source in them only makes callbacks to a smartcard, where the cryptographic operations really happen.
20:50:10 <TheJollyRoger> Those smartcards are NDA'd eight ways to sunday.
20:50:18 <difiewe[m]> <strcat[m] "link firmware sources then"> Don't want to bet on this. I can check this for you.
20:50:26 <strcat[m]> they aren't actually open firmware
20:50:47 <strcat[m]> the usual purism scamming
20:50:51 <TheJollyRoger> Yes, I flash my own programs on my J145H-DIs, but the oracle toolchain is very specifically NON FREE, and it's distributed as a precompiled binary.
20:50:52 <strcat[m]> they even got people to claim it's open hardware
20:51:01 <strcat[m]> lol.
20:51:20 <TheJollyRoger> so all you're getting is essentially an open source /card reader/.
20:51:25 <strcat[m]> how is it open if there are no sources for the main part of it
20:51:45 <strcat[m]> yeah in theory it's an open firmware adaptor for a closed source secure element
20:51:45 <strcat[m]> but
20:51:48 <strcat[m]> where is that firmware?
20:51:49 <strcat[m]> for that?
20:51:52 * TheJollyRoger snickers.
20:51:54 <TheJollyRoger> I uh...
20:51:55 <TheJollyRoger> I have no idea.
20:52:00 <strcat[m]> feel free to link me purism's repo for the small open source part of it
20:52:25 <TheJollyRoger> I think they just use Nitrokey as an upstream provider and Nitrokeys are, well...
20:52:31 <spaceinfinite[m]> He seems to want to install grapheneos on multiple devices with enterprise profile managment but he doesny want it to be known for some reason
20:52:38 <strcat[m]> so where are the sources specifically for their version of it
20:52:53 <difiewe[m]> I will check it for you. Don't checked it yet so no reason for fighting xD
20:53:28 <EssentialChaos[m> There's a link on Purism's website "Librem Key firmware code", which for some reason leads to Nitrokey's firmware repo
20:53:30 <TheJollyRoger> Also the cards themselves are non free. Like I said, NDA'd six ways to sunday.
20:53:35 <TheJollyRoger> Yeah.
20:54:01 <TheJollyRoger> I'm browsing Nitrokey's firmware sources now, but like I said... the Nitrokey Pro simply is making calls to a smartcard chip. At that rate, you might as well just buy an Omnikey reader.
20:54:16 <EssentialChaos[m> <EssentialChaos[m "There's a link on Purism's websi"> https://docs.puri.sm/Librem_Key/Getting_Started/User_Manual.html
20:54:19 <TheJollyRoger> Since those are half the price and you don't have to worry about the attack surface of having to trust a second element.
20:54:41 <TheJollyRoger> I have two of them sitting on my desk.
20:54:48 <cn3m[m]> Google Titan is highly recommended from me
20:54:55 * difiewe[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/lRGqAskkJEjeZfjieGouJVwx >
20:55:08 <TheJollyRoger> cn3m[m]: yeah but at this moment, I can't do builds and signing those builds on my GrapheneOS phone.
20:55:52 <strcat[m]> https://github.com/rot42/gnuk-extractor
20:56:14 <TheJollyRoger> I mean it would be nice to build GrapheneOS on GrapheneOS but I think my phone would explode into a fireball if I looked it in the eye and said "Hey buddy, you're going to build Vanadium now!"
20:56:56 <strcat[m]> EssentialChaos: https://github.com/Nitrokey/nitrokey-pro-firmware is not secure element firmware
20:57:05 <cn3m[m]> TheJollyRoger: I'm talking about the Titan keys you can buy
20:57:12 <TheJollyRoger> strcat[m]: I've got the Trezor Model T as you suggested, I just haven't figured out how to make it work with OpenSSL.
20:57:28 <TheJollyRoger> cn3m[m]: oh, those U2F keys? I think those are also made by Feitan as well, it's a small world.
20:58:08 <difiewe[m]> After explaining I don't want a server and a GrapheneOS fork: I flash a phone and give it to a normal person. He can't install software, because he can't find a store on his phone. Sad story ends. All my questions try to figure out to avoid this dilemma. Prebundle apps doesn't work without a fork/server and then I have to deal with endpoint security (yay new word learned). So how to bring a technic-stupid person
20:58:08 <difiewe[m]> Fdroid? Giving stock GrapheneOS + USB stick with software?
20:58:58 <strcat[m]> difiewe: already been through this above
20:58:58 <TheJollyRoger> difiewe[m]: I think you will need to get them an iPhone, if they cannot update their apps on their own.
20:59:02 <strcat[m]> either don't give them the device
20:59:02 <EssentialChaos[m> <difiewe[m] "After explaining I don't want a "> You should probably consider an iPhone
20:59:13 <difiewe[m]> <strcat[m] "EssentialChaos: https://github.c"> That thing I meant. Not what you searching? Also not open firmware?
20:59:13 <strcat[m]> either don't do this, or set up the phone for them
20:59:25 <strcat[m]> difiewe: this is not secure element firmware
20:59:28 <TheJollyRoger> Yeah. Or that, take matters into your hands and become their phone sysadmin.
20:59:30 <cn3m[m]> GrapheneOS is not for people who are not tech savvy an iPhone is
20:59:30 <strcat[m]> difiewe: it's glue code
20:59:46 <strcat[m]> this is open source only in the sense than Qualcomm's TEE / SPU or Google's Titan M are open source
20:59:49 <strcat[m]> those are just as open source
20:59:58 <strcat[m]> which is to say
21:00:06 <strcat[m]> they are not, only the code to talk to them is open source
21:00:10 <strcat[m]> which is what that is
21:00:45 <xabi[m]> <cn3m[m] "GrapheneOS is not for people who"> Muy mum uses omnirom+microg+aurora store. No issues at all
21:00:56 <strcat[m]> difiewe: they are lying about it being open source
21:00:58 <xabi[m]> * My mum uses omnirom+microg+aurora store. No issues at all
21:00:59 <difiewe[m]> <strcat[m] "either don't do this, or set up "> why is this a bad idea?
21:01:09 <strcat[m]> difiewe: I didn't say it is a bad idea
21:01:16 <strcat[m]> I just said it is not going to be a fresh install with a setup wizard
21:01:21 <strcat[m]> it will be set up by you not them
21:01:39 <strcat[m]> and if they ever factory reset it won't have those apps you bundled
21:01:44 <strcat[m]> if they make a new user profile it won't have those apps in it
21:01:50 <xabi[m]> * My mum uses omnirom+microg+aurora store. No issues at all
21:01:51 <xabi[m]> Graphene would be the same
21:02:07 <strcat[m]> if you don't think they can install an app maybe don't give them GrapheneOS right now?
21:02:22 <strcat[m]> anyway I don't see anything new being said
21:02:26 <strcat[m]> you don't like the answer and keep asking the same thing
21:02:27 <strcat[m]> no point
21:02:47 <strcat[m]> plus
21:02:59 <strcat[m]> I don't think the scenario you started describing matches what you really want to do
21:03:00 <cn3m[m]> Just use an iPhone seriously. It's much more secure for the average person. They are most likely to get a dangerous app that trucks them into giving days over. The privacy is solid.
21:03:04 <strcat[m]> based on some of your earlier questions
21:03:12 <strcat[m]> where you asked how to do it in an automated / efficient way
21:03:16 <strcat[m]> if you are just doing this for 1 person
21:03:22 <strcat[m]> why do you need it to be automated / efficient
21:03:31 <difiewe[m]> No there was on every time a change in my question. Not a native speaker. Probably not able to point out the difference.
21:03:43 <cn3m[m]> GrapheneOS you should know how to install and vet apps. The anti exploitation is worth it in that case
21:03:46 <strcat[m]> and why does it matter that it relies on trust in you and isn't going to be a fresh install
21:03:57 <strcat[m]> as I said earlier
21:04:05 <anupritaisno1[m]> <strcat[m] "I don't think the scenario you s"> BTW if I just v3 sign trichrome with a pinned key is that enough?
21:04:05 <strcat[m]> GrapheneOS is not aimed at non-technical people right now
21:04:06 <strcat[m]> it has a long way to go first
21:04:20 <strcat[m]> anupritaisno1: you don't have to 'pin' any key
21:04:26 <strcat[m]> anupritaisno1: that is just how app keys work
21:04:36 <strcat[m]> it's implicitly pinned for EVERY app
21:04:37 <anupritaisno1[m]> <strcat[m] "GrapheneOS is not aimed at non-t"> Oh shit I'll find the door out
21:04:43 <anupritaisno1[m]> <strcat[m] "anupritaisno1: you don't have to"> The keystore key in args.gn
21:05:03 <difiewe[m]> <strcat[m] "why do you need it to be automat"> if there is a way for the most stupid person I can give a phone to all my family members and friends.
21:05:08 <strcat[m]> anupritaisno1: that's so the browser and webview apps can verify the library app
21:05:14 <strcat[m]> otherwise they reject it
21:05:15 <hitchhooker[m]> hey is my cable just shit if phone is in fastboot mode and ./fastboot flashing unlock keeps just waiting for device?
21:05:41 <anupritaisno1[m]> <strcat[m] "anupritaisno1: that's so the bro"> So can I go v3 only?
21:05:42 <cn3m[m]> difiewe: in a recent study of privacy communities only 2% of people in general can go without Google Play Services. If privacy focused people struggle everyone will. iPhone is vastly better for almost everyone
21:05:46 <strcat[m]> hitchhooker: perhaps or you're on a Linux distribution that doesn't allow regular users to access USB devices and need to either use root to run the command or use root to set up udev rules
21:06:01 <cn3m[m]> If you aren't tech savvy don't use Android
21:06:12 <cn3m[m]> That would seem to be the case for your friend
21:06:14 <strcat[m]> my general recommendation is to use an iPhone right now
21:06:27 <strcat[m]> a lot of work has to be done to provide something better for general purpose use cases
21:06:39 <strcat[m]> if people aren't going to help with the difficult work to do this
21:06:40 <strcat[m]> it won't happen
21:06:42 <strcat[m]> ever
21:06:50 <hitchhooker[m]> strcat running arch, makes sense since phones usb connection control cant be given to pc
21:06:52 <strcat[m]> and this discussion is getting really old - it has been answered well already
21:07:05 <strcat[m]> hitchhooker: follow the official install instructions
21:07:10 <strcat[m]> it tells you which packages you have to install
21:07:12 <anupritaisno1[m]> Strcat so can I sign with the build system signapk and just use a v3 signature?
21:07:15 <strcat[m]> Arch has working packages for this
21:07:25 <strcat[m]> anupritaisno1: don't use signapk
21:07:26 <strcat[m]> anupritaisno1: use apksigner
21:07:28 <strcat[m]> signapk is deprecated and being replaced in AOSP
21:07:43 <strcat[m]> anupritaisno1: look at my generate_release.sh script in the Vanadium repo
21:07:45 <strcat[m]> just use that
21:07:45 <anupritaisno1[m]> <strcat[m] "signapk is deprecated and being "> With?
21:07:59 <strcat[m]> anupritaisno1: apksigner, the SDK tool for this
21:08:00 <difiewe[m]> <strcat[m] "and why does it matter that it r"> How do you define a new installation? I don't think you understand my question correctly (or I'm not as precise as I wanted to be)? Self checking all signatures and flashing or starting the phone on the setupscreen?
21:08:09 <anupritaisno1[m]> <strcat[m] "anupritaisno1: look at my genera"> Yes but there's an issue: build and sign servers are separate
21:08:14 <strcat[m]> anupritaisno1: signapk is AOSP-specific, it's not used for building / signing apps outside AOSP
21:08:20 <strcat[m]> anupritaisno1: that's fine you can still use apksigner
21:08:20 <anupritaisno1[m]> Unless you know a way around it
21:08:23 <strcat[m]> look at generate_release.sh
21:08:25 <strcat[m]> why is that a problem?
21:08:37 <cn3m[m]> difiewe: just use an iPhone this is way too complicated for you and your friend and you have nothing to lose going with an iPhone
21:08:46 <anupritaisno1[m]> <strcat[m] "anupritaisno1: signapk is AOSP-s"> I am signing inside AOSP
21:08:46 <strcat[m]> anupritaisno1: https://github.com/GrapheneOS/Vanadium/blob/10/generate_release.sh
21:08:47 <strcat[m]> look
21:09:11 <magntcf[m]> What is the best phone and os for privacy i can get with 500$
21:09:12 <strcat[m]> anupritaisno1: aosp has an sdk bundled so it has apksigner
21:09:28 <strcat[m]> signapk is only used as part of building aosp or using the aosp release signing script
21:09:32 <strcat[m]> for standalone use you should use apksigner
21:09:33 <TheJollyRoger> difiewe[m]: please just use an iPhone. Your changes to the operating system will be lost on a factory reset (and that's essentially a new installation)
21:09:35 <cn3m[m]> <magntcf[m] "What is the best phone and os fo"> Pixel 3a with GrapheneOS or iPhone SE
21:09:37 <strcat[m]> and signapk is being replaced
21:09:40 <EssentialChaos[m> <magntcf[m] "What is the best phone and os fo"> iPhone SE 2020
21:09:46 <difiewe[m]> <cn3m[m] "difiewe: just use an iPhone this"> please answer my question
21:09:48 <cn3m[m]> You could consider Pixel 3 or iPhone XR as well
21:10:31 <strcat[m]> difiewe: GrapheneOS is not currently ready for the use case you want to use it for
21:10:54 <strcat[m]> difiewe: if people can't install F-Droid or other apps themselves, it doesn't work for them
21:11:21 <magntcf[m]> Should i flash grapheneos on pixel 3 or is it already there on the phone ?
21:11:33 <strcat[m]> going through the setup wizard and installing the apps in the main profile yourself will not make them available in other profiles and they will be gone after a factory reset
21:11:33 <difiewe[m]> That was not my question. I know a iPhone is a decent phone for a non techi. But that's not I asked!
21:11:50 <TheJollyRoger> magntcf[m]: for $500, your best bet is an iPhone if you are not tech savvy, or a Pixel 3a if you are.
21:12:05 <EssentialChaos[m> <magntcf[m] "Should i flash grapheneos on pix"> You have to flash it
21:12:06 <strcat[m]> difiewe: if you want them to have a clean GrapheneOS install just install GrapheneOS for them, and let them be the first to boot it
21:12:08 <strcat[m]> and help them install stuff on it
21:12:20 <strcat[m]> just make sure to install it properly and lock it
21:12:30 <difiewe[m]> <strcat[m] "difiewe: if people can't install"> Yes. But if people can install Fdroid themselves. What do you consider as a fresh install?
21:12:33 <strcat[m]> boot into the OS, turn off oem unlocking, do a factory reset from recovery
21:12:38 <strcat[m]> then power off
21:12:42 <strcat[m]> and let them be the first to boot it
21:12:45 <TheJollyRoger> difiewe[m]: a fresh install is after you've locked the bootloader for the first time.
21:12:51 <magntcf[m]> I'm tech savvy but non technical user
21:12:51 <magntcf[m]> At the same time
21:12:54 <strcat[m]> TheJollyRoger: well to do this properly
21:13:00 <TheJollyRoger> After GrapheneOS has been installed.
21:13:02 <strcat[m]> you need to boot up the OS
21:13:03 <strcat[m]> disable OEM unlocking
21:13:03 <TheJollyRoger> strcat[m]: yeah?
21:13:05 <strcat[m]> then boot back to recovery and wipe data
21:13:06 <strcat[m]> then power off
21:13:12 <anupritaisno1[m]> <strcat[m] "signapk is only used as part of "> That's exactly what I want to use
21:13:15 <difiewe[m]> <strcat[m] "just make sure to install it pro"> Okay, thanks. Thats what I try to point out in the last 20mins
21:13:15 <TheJollyRoger> Oh cripes, ack.
21:13:15 <strcat[m]> TheJollyRoger: I mean to have it as a fresh install for someone else
21:13:23 <TheJollyRoger> Oh, oh yeah... whoop.
21:13:27 <strcat[m]> TheJollyRoger: you don't have to do this for your own use
21:13:33 <strcat[m]> I just mean to have a fresh install similar to stock
21:13:42 <anupritaisno1[m]> LOCAL_CERTIFICATE := testkey and then call sign_target_files_apks to sign with the pinned release key
21:13:44 <TheJollyRoger> Got it, with the launcher.
21:13:48 <strcat[m]> so it generates encryption keys on first boot and runs through setup wizard
21:13:51 <strcat[m]> and has oem unlocking disabled
21:14:14 <strcat[m]> TheJollyRoger: locking bootloader is missing the step of disabling oem unlocking which isn't very important
21:14:16 <strcat[m]> but it part of a proper install
21:14:22 <strcat[m]>  * but it's part of a proper install
21:14:31 <TheJollyRoger> Got it. I will write that down...
21:14:46 <strcat[m]> there are 2 approaches to selling devices
21:14:57 <strcat[m]> 1) flash, lock, disable oem unlocking, wipe data in recovery, power off
21:15:05 <strcat[m]> that matches how stock devices come
21:15:07 <difiewe[m]> <TheJollyRoger "difiewe: a fresh install is afte"> Thanks for a clear answer. I don't know if it's matrix or my English skills, but sometimes it's hard to get a answer straight answered here...
21:15:32 <strcat[m]> because that doesn't really explain what it means
21:15:47 <strcat[m]> it explains how you get it
21:16:12 <strcat[m]> you end up in the same state as a fresh install after a factory reset from a proper existing install too
21:16:19 <strcat[m]> data partition wiped
21:17:33 <TheJollyRoger> Makes sense... I wrote that down for my notes.
21:17:47 <strcat[m]> TheJollyRoger: and the 2nd way of shipping a device to someone
21:17:53 <difiewe[m]> <strcat[m] "1) flash, lock, disable oem unlo"> This brings a stock GraphenOS without everything else + OEM locked, right?
21:18:19 <strcat[m]> TheJollyRoger: is you do the same install process - but don't wipe, instead set a passphrase on the owner account (which you communicate to them securely) and set up the Auditor app inside it - you can remotely pair with them via a chat client or email
21:18:29 <strcat[m]> TheJollyRoger: they send you a screenshot of QR code from Auditor
21:18:34 <strcat[m]> you send back the response QR code
21:18:41 <strcat[m]> and then they have a pairing with the device
21:18:44 <strcat[m]> TheJollyRoger: and then you ship this device to them
21:18:46 <strcat[m]> and when they receive it
21:18:54 <TheJollyRoger> Then they check it again...?
21:18:59 <strcat[m]> they can do a PAIRED Auditor check to verify identity and integrity of the device
21:19:10 <strcat[m]> and strong verification with the paired hardware-backed key and pinned attestation certificate chain
21:19:16 <strcat[m]> since they paired remotely
21:19:16 <cn3m[m]> <difiewe[m] "This brings a stock GraphenOS wi"> That's correct
21:19:18 <TheJollyRoger> Got it, and I send them a screenshot of the greenscreen, over something like Signal or I GPG sign it or something...?
21:19:18 <strcat[m]> and THEN they factory reset the device
21:19:27 <strcat[m]> TheJollyRoger: no
21:19:31 <strcat[m]> read what I wrote again
21:19:39 <TheJollyRoger> Ack, sorry.
21:19:49 <cn3m[m]> * That's correct. You do need to flip the OEM lock though
21:20:12 <TheJollyRoger> Okay! I think I follow!
21:20:26 <strcat[m]> TheJollyRoger: the seller of the device flashes GrapheneOS, locks, disables OEM unlocking
21:20:41 <strcat[m]> the buyer uses Auditor on an existing device and screenshots the challenge QR code from Auditor mode
21:21:10 <strcat[m]> the seller of the device scans the code on the device being sold, and emails back a picture of the screen with the attestation response QR code
21:21:34 <strcat[m]> the buyer of the device scans that on their existing phone which verifies it (basic initial check) and pairs with it
21:21:49 <strcat[m]> the seller sets a passphrase on the owner account too and shares it with them
21:21:51 <strcat[m]> now ships the device to them
21:22:05 <strcat[m]> now when they receive the device, they enter the passphrase that was shared with them to unlock
21:22:19 <strcat[m]> and they do another verification with the Auditor they used before
21:22:36 <strcat[m]> which is now a STRONG paired verification confirming identity and integrity of the device via the pairing
21:22:57 <strcat[m]> TheJollyRoger: since their Auditor instance was given the public key of the hardware-backed key along with the attestation certificate chain for it
21:23:09 <strcat[m]> so it's a strong verification
21:23:24 <strcat[m]> hope that makes sense
21:23:26 <strcat[m]> that is how to ship a device with a much higher level of assurance
21:23:45 <strcat[m]> an attacker could still do something like disassembling the phone and replacing the screen with an evil one
21:24:07 <strcat[m]> but there is strong cryptographic verification via the secure element
21:24:11 <strcat[m]> of the identity and integrity of the device
21:24:26 <difiewe[m]> <strcat[m] "an attacker could still do somet"> Some tamper proof tape and nail polish?
21:24:34 <strcat[m]> ideally all the peripherals like the touchscreen, etc. would be paired with the other hardware but people don't like that because it's anti-self-repair
21:25:38 <TheJollyRoger> strcat it does. Since it's preauthenticated via initial pairing, then it would not need any extra protection, I think I see...
21:25:41 <strcat[m]> and it's unlikely to be done for mainstream devices - other than iPhones at least, and those only attempt stuff like this in a very incomplete / weak way
21:25:50 <difiewe[m]> Than something like HEADS could be the solution, right?
21:25:57 <cn3m[m]> <strcat[m] "ideally all the peripherals like"> Ideally it would warn if this was changed at boot
21:26:02 <strcat[m]> difiewe: I don't see what that has to do with it
21:26:10 <cn3m[m]> Still giving people an option
21:26:20 <strcat[m]> difiewe: we don't need a work-in-progress security theater approach, we have the real thing already...
21:26:35 <strcat[m]> TheJollyRoger: this is a perfect use case for Auditor
21:26:35 <TheJollyRoger> difiewe[m]: this is why we have verified boot and remote attestation.
21:26:51 <TheJollyRoger> Hot damn. Uh...
21:26:56 <hitchhooker[m]> turned out to be shitty cable
21:26:57 <TheJollyRoger> Could I speak with you later on this, maybe?
21:27:01 <strcat[m]> yes
21:27:08 <TheJollyRoger> Thanks!
21:27:08 <not_techy[m]> Interesting
21:27:10 <strcat[m]> TheJollyRoger: this can also be used for other kinds of devices
21:27:24 <strcat[m]> but as I said above it works much better if peripherals are paired
21:27:25 <strcat[m]> cause
21:27:28 <TheJollyRoger> If we could get FlexVer to do the same I could finally colocate my Talos.
21:27:40 <TheJollyRoger> Then I can have unlimited internet. :P.
21:27:42 <strcat[m]> this doesn't stop an attacker from taking apart the device and replacing the screen
21:27:49 <TheJollyRoger> Yeah...
21:27:57 <strcat[m]> because the screen is not cryptographically paired
21:28:06 <strcat[m]> the SoC (via TEE) and the Titan M are paired
21:28:45 <strcat[m]> TheJollyRoger: setting encryption passphrase + using Auditor within the profile gives a really high level of assurance compared to anything else tho
21:28:56 <strcat[m]> TheJollyRoger: having a strong Auditor pairing BEFORE the device is shipped
21:29:03 <strcat[m]> is key
21:29:12 <strcat[m]> TheJollyRoger: because the initial pairing is weak - the point of Auditor is that it gives a really high level of assurance via pairing
21:29:18 <difiewe[m]> <strcat[m] "yes"> Also interested to learn about that. Can you also add me to your talk, pls?
21:29:25 <strcat[m]> TheJollyRoger: the reason stuff like DRM doesn't work well is because it doesn't have pairing
21:29:30 <strcat[m]> so it has to just chain up to some global root cert
21:29:40 <TheJollyRoger> Got it! And then once it's set, it won't change.
21:29:45 <strcat[m]> Auditor doesn't have that problem
21:29:46 <strcat[m]> because it's for users
21:29:55 <TheJollyRoger> Wow. This is super elegant.
21:29:59 <strcat[m]> so it's designed around a pairing model
21:30:14 <strcat[m]> it generates a hardware backed key on the device being verified with attestation enabled for it
21:30:22 <strcat[m]> and it pins that key on the device performing verification, and pins the attestation certificate chain
21:30:59 <strcat[m]> so after the 1st verification it has no use for the attestation root cert
21:31:18 <strcat[m]> it verifies the signature of Auditor's attestation message using the initial key
21:31:29 <strcat[m]> and it verifies the attestation cert chain WITHIN that signed message
21:31:33 <strcat[m]> using the pinned chain
21:31:48 <strcat[m]> so that if an attacker has compromised the device and has root access, they still can't fake the hardware-based attestation
21:32:11 <strcat[m]> TheJollyRoger: we want to make this strong, can happen maybe in Android 12
21:32:40 <strcat[m]> TheJollyRoger: atm the pinned attestation cert chain uses batch keys, I have convinced them to add a per-app key or attestations signed by a specific hardware-backed key
21:32:44 <strcat[m]> I don't know if they have decided how to do it yet
21:32:51 <TheJollyRoger> Wow.
21:32:52 <strcat[m]> but they agree it's useful and other people want it too
21:32:52 <magntcf[m]> So nothing else other than pixel phones for non tech savvy folks
21:32:53 <strcat[m]> so they are doing it
21:33:03 <TheJollyRoger> Upstream?
21:33:05 <strcat[m]>  * TheJollyRoger: we want to make this stronger, can happen maybe in Android 12
21:33:13 <TheJollyRoger> Woah.
21:33:14 <strcat[m]> TheJollyRoger: yes
21:33:20 <strcat[m]> in the keymaster spec
21:33:22 <cn3m[m]> <magntcf[m] "So nothing else other than pixel"> iPhones
21:33:25 <TheJollyRoger> WowwwwW!
21:33:31 <strcat[m]> for all Android compatible devices
21:34:02 <strcat[m]> TheJollyRoger: it's already really good right now
21:34:07 <TheJollyRoger> Yeah hot damn!
21:34:17 <strcat[m]> just not quite as good as it could be for certain parts of it
21:34:26 <strcat[m]> TheJollyRoger: the hardware-based attestations continue providing useful information
21:34:29 <strcat[m]> TheJollyRoger: like patch level
21:34:41 <cn3m[m]> iPhone for 98% of non tech savvy users and GrapheneOS for the 2% that are good with zero Google magntcf
21:34:41 <strcat[m]> TheJollyRoger: being able to produce a signature with the hardware-backed key that was paired
21:34:45 <difiewe[m]> But your 2nd method only works when the buyer has a GraphenOS already, right?
21:34:52 <strcat[m]> TheJollyRoger: already verifies integrity / identity of the device
21:34:53 <strcat[m]> difiewe: no
21:35:06 <strcat[m]> Auditor runs on any Android 7+ devices
21:35:12 <strcat[m]> it just can't verify most devices
21:35:21 <strcat[m]> it can be used to verify OTHER devices on any Android 7+ device with a camera tho
21:35:34 <strcat[m]> the only hardware requirement it has for the Auditor side is a camera
21:35:34 <difiewe[m]> Okay, sorry. The buyer needs a Android 7+ already, right?
21:35:44 <cn3m[m]> difiewe: many devices support Auditor
21:36:01 <strcat[m]> difiewe: yes the Auditor side needs an Android 7+ device
21:36:06 <strcat[m]> Auditee side is only specific devices we have added support for
21:36:10 <yolotrolo[m]> guys is the dual sim working well on graphene? i'm going to get a 3a i think, the price is discounted!!
21:36:11 <strcat[m]> and by specific I mean specific MODELS of phones
21:36:21 <strcat[m]> yolotrolo: eSIM isn't supported atm so no
21:36:38 <yolotrolo[m]> but i read it have 2 sim slot, no?
21:36:38 <strcat[m]> it could be supported
21:36:41 <strcat[m]> but it hasn't been implemented
21:36:55 <strcat[m]> yolotrolo: no it's dual SIM because you can have a physical SIM and an eSIM
21:37:00 <strcat[m]> GrapheneOS doesn't support eSIM yet
21:37:05 <strcat[m]> help wanted
21:37:19 <strcat[m]> it's one of many things that need a non-Play implementation
21:38:05 <strcat[m]> U2F library for browsers, eSIM, voice-to-text, text-to-speech, geocoding, supplemental location provider, standard accessibility services (talkback is open source but depends on having TTS - no point of bundling it atm)
21:38:12 <yolotrolo[m]> ho i see yea it's only 1 sim slot, sadly
21:38:33 <strcat[m]> yolotrolo: yeah it can do dual SIM but one of them has to be an eSIM
21:38:41 <strcat[m]> it genuinely has dual SIM support but not physical
21:38:46 <yolotrolo[m]> yea my carrier do not support that
21:38:55 <strcat[m]> GrapheneOS doesn't support eSIM yet anyway
21:39:05 <strcat[m]> eventually there will ONLY be eSIM probably...
21:39:25 <strcat[m]> similarly the only way to do traditional calls will eventually be VoLTE
21:39:32 <difiewe[m]> Thats sad becuase then you can't change the IMSI, right?
21:39:43 <strcat[m]> so it is important for people to help us get this stuff implemented
21:39:44 <strcat[m]> difiewe: IMSI is not related to this
21:40:50 <difiewe[m]> Thought that this identifier is on the sim card. If you using esim you can't swap them. Whats wrong?
21:41:19 <strcat[m]> you can swap your esim
21:41:45 <TheJollyRoger> strcat[m]: hot damn, the power of remote attestation keeps getting better and better!
21:41:46 <yolotrolo[m]> how do it work when you have 2 sims, can apps see the 2 numbers? it's the phone permission?
21:42:08 <difiewe[m]> So it's possible to switch IMSI even with esim in theory?
21:42:51 <strcat[m]> yolotrolo: apps can't see this
21:43:00 <strcat[m]> apps can't see hardware identifiers
21:43:03 <strcat[m]> see FAQ
21:43:25 <difiewe[m]> I think hardware identifiers can't only seen by the OS since Android 10, right?
21:43:26 <strcat[m]> apps aren't what does phone calls, the OS / firmware does it
21:43:45 <strcat[m]> difiewe: correct but they weren't accessible before that either without the Phone permission
21:43:45 <TheJollyRoger> Android 10. GrapheneOS is on Android 10.
21:43:55 <strcat[m]> they are just not accessible at all now
21:43:57 <strcat[m]> the Phone permission doesn't give access to it
21:44:23 <strcat[m]> apps not part of the OS don't have a legitimate use case
21:44:24 <strcat[m]> so it's gone
21:44:57 <yolotrolo[m]> nice
21:45:21 <TheJollyRoger> \o/
21:45:23 <TheJollyRoger> Just a sec.
21:45:48 <strcat[m]> ofc before you could just not give access to the Phone permission
21:46:01 <strcat[m]> but not you can grant apps access to the other info the Phone permission grants
21:46:06 <strcat[m]> but without giving them hardware IDs
21:46:09 <difiewe[m]> Back to the shipping/selling talk: strcat  you wrote "the seller of the device flashes GrapheneOS, locks, disables OEM unlocking". flashing (check), OEM unlocking disabled (check), but what do you mean with "locks"?
21:46:11 <strcat[m]> since they aren't part of it anymore
21:46:26 <strcat[m]> difiewe: locking with fastboot flashing lock
21:46:46 <strcat[m]> i.e. disabling flashing + enabling verified boot
21:46:58 <difiewe[m]> Ah okay
21:47:22 <strcat[m]> 'fastboot flashing unlock' forces a wipe of all the data
21:47:49 <strcat[m]> disabling OEM unlocking disables doing 'fastboot flashing unlock' without first wiping the device and enabling it - which is not really any different in terms of semantics
21:47:51 <strcat[m]> but it reduces attack surface
21:47:59 <strcat[m]> so it's useful to disable OEM unlocking
21:48:19 <strcat[m]> we don't support anti-theft features atm, since it's not a security thing
21:48:26 <strcat[m]> and doesn't really fit well into what we want to do
21:48:34 <strcat[m]> unless we invent our own way of doing it using a seed phrase
21:48:42 <difiewe[m]> But why the seller starts the audit with the screenshot of the old phone?
21:48:43 <strcat[m]> and it just seems really pointless if we are not selling millions of devices
21:48:52 <strcat[m]> difiewe: read about Auditor
21:49:11 <strcat[m]> https://attestation.app/about
21:49:23 <difiewe[m]> <strcat[m] "unless we invent our own way of "> Anti-theft is a Google account thing, right? Do you mean the backup option?
21:49:37 <strcat[m]> no
21:49:48 <strcat[m]> I mean we don't provide an equivalent to their Google account anti-theft feature
21:50:16 <strcat[m]> on the stock OS once you tie a device to a Google account, those Google account credentials are needed after a factory reset to proceed through the setup wizard
21:50:20 <difiewe[m]> <strcat[m] "and it just seems really pointle"> I don't selling a single phone. Only trying to wrap my mind around from all sides. This includes production.
21:50:42 <strcat[m]> which is an anti-theft feature
21:50:52 <strcat[m]> someone that steals a device can go into recovery and wipe data
21:51:14 <strcat[m]> but the device is still tied to the Google account because it is written out to the factory reset protection data block
21:51:24 <difiewe[m]> <strcat[m] "on the stock OS once you tie a d"> thats what I meant with anti-theft feature. It requires a Google account. Where I was wrong?
21:51:25 <strcat[m]> we don't have that anti-theft feature for obvious reasons
21:51:32 <strcat[m]> difiewe: well
21:51:36 <strcat[m]> the feature is still available to us
21:51:38 <strcat[m]> we can implement it
21:51:42 <strcat[m]> without a Google account
21:51:47 <strcat[m]> it is just not really interesting / useful
21:51:54 <strcat[m]> it's not a security feature, it's an anti-theft feature
21:52:00 <strcat[m]> it doesn't protect you against a device being stolen
21:52:11 <strcat[m]> it reduces the incentive to steal because the device is a useless piece of scrap metal to them
21:52:27 <difiewe[m]> Ah, the default is with Google Account, but the project can do it with a passphrase, but it is still not really useful and implemented?
21:52:35 <strcat[m]> thieves don't know GrapheneOS exists, it makes little difference if it has this feature or not
21:52:37 <strcat[m]> difiewe: right
21:52:42 <strcat[m]> so
21:52:54 <strcat[m]> we could make it so when you go through the setup wizard
21:52:55 <difiewe[m]> <strcat[m] "thieves don't know GrapheneOS ex"> but maybe funny.
21:52:57 <strcat[m]> it tells you to record a seed phrase
21:53:06 <strcat[m]> and you need that seed phrase to go through the setup wizard again after wiping
21:53:09 <strcat[m]> now here is the problem
21:53:14 <strcat[m]> people will skip writing it down or lose it
21:53:20 <strcat[m]> so after they wipe their device is a brick
21:53:29 <strcat[m]> Google has account recovery options including support people
21:53:40 <strcat[m]> if you don't enable advanced protection for your Google account, support people can give it back to you
21:53:53 <difiewe[m]> If there is this feature and its on. What happens when I lose it and require it? The phone becomes a piece of garbage?
21:54:00 <strcat[m]> difiewe: yes
21:54:06 <strcat[m]> difiewe: so in reality
21:54:14 <strcat[m]> implementing this will cause people financial harm
21:54:22 <strcat[m]> and it will not actually stop a SINGLE thief from stealing a GrapheneOS device
21:54:27 <strcat[m]> because thieves do not know GrapheneOS exists
21:54:36 <strcat[m]> the stock OS anti-theft works as deterrence for GrapheneOS anyway
21:54:46 <strcat[m]> thieves still steal devices despite anti-theft anyway
21:55:00 <difiewe[m]> So why Google implements this feature? Because they like do evil things?
21:55:03 <strcat[m]> because lots of people have no passphrase so they can just remove the Google account and wipe it
21:55:04 <strcat[m]> difiewe: no
21:55:07 <strcat[m]> it's an anti-theft feature
21:55:09 <strcat[m]> nothing about it is evil
21:55:11 <strcat[m]> it deters theft
21:55:26 <strcat[m]> since Google accounts have recovery options people don't brick their devices with this
21:55:33 <difiewe[m]> But why they locking it to an Google account?
21:55:49 <strcat[m]> USERS are locking it to their OWN Google account
21:55:52 <difiewe[m]> Because people can store a passpharse?
21:55:58 <strcat[m]> and they can disconnect it from the account
21:55:59 <strcat[m]> any time they want
21:56:07 <difiewe[m]> <strcat[m] "USERS are locking it to their OW"> obvious
21:56:12 <strcat[m]> when someone sells a phone they need to REMOVE the Google account and then factory reset
21:56:19 <strcat[m]> sometimes people make the mistake of ONLY doing a factory reset
21:56:33 <strcat[m]> and now when they sell the device, the person who receives it can't use it without the previous owner's Google account credentials
21:56:38 <strcat[m]> although at this point
21:56:46 <strcat[m]> most people are aware of this since both iOS and Google Android do this
21:57:02 <strcat[m]> and it's easy to just remove the account and then wipe
21:57:16 <difiewe[m]> But for GrapheneOS this is great. A "professional" thief this my phone (grapheneos - no protection) but thinks it is a normal locked google phone
21:57:28 <strcat[m]> difiewe: yeah but
21:57:29 <strcat[m]> the thing is
21:57:31 <strcat[m]> thieves don't care
21:57:38 <strcat[m]> they steal phones despite iOS and Google Android having this
21:57:52 <strcat[m]> because a lot of users have no lock method set on their phone
21:57:55 <strcat[m]> something like 20%+
21:57:56 <radixed9[m]> Search iCloud locked iPhone on eBay
21:58:02 <difiewe[m]> When IOS got this feature?
21:58:05 <strcat[m]> and also a lot of people have shit passwords
21:58:10 <strcat[m]> on their Google / iCloud account
21:58:23 <strcat[m]> yeah an 'iCloud lock iPhone' i.e. a 'stolen iPhone'
21:58:29 <strcat[m]> lol
21:58:36 <difiewe[m]> p4ssword is still good, right?
21:58:40 <strcat[m]>  * yeah an 'iCloud locked iPhone' i.e. a 'stolen iPhone'
21:58:51 <strcat[m]> just note this isn't a security feature
21:58:57 <strcat[m]> all it does is cause thieves to not profit from their theft
21:58:59 <blacklight447[m]> <strcat[m] "and also a lot of people have sh"> why do folks have such a hard time using a password manager
21:59:01 <blacklight447[m]> just one passprase to remember
21:59:06 <radixed9[m]> It is an anti theft feature and out of scope
21:59:13 <strcat[m]> but it's not like the thief is going to see it is locked to an account
21:59:17 <radixed9[m]> it doesn't even do GrapheneOS users any good
21:59:18 <strcat[m]> and then go find the owner of the phone and give it back
21:59:27 <strcat[m]> so this feature doesn't get you back a stole phone
21:59:34 <strcat[m]> and it won't stop your phone from being stolen
21:59:37 <strcat[m]>  * so this feature doesn't get you back a stolen phone
21:59:48 <strcat[m]> the only reason to do it is out of spite towards thieves basically
21:59:51 <strcat[m]> we could implement it
21:59:55 <strcat[m]> but it is not worth our time / resources
22:00:10 <radixed9[m]> There is no reason to implement this beside pairing with a hardware key(still risky and pointless)
22:00:13 <strcat[m]> https://grapheneos.org/faq#anti-theft
22:00:18 <difiewe[m]> How much locking anti-theft-feature the phone? Can you it for replacement parts?
22:00:27 <strcat[m]> radixed9: Auditor already provides that
22:00:45 <strcat[m]> difiewe: don't know what you mean
22:00:59 <strcat[m]> difiewe: lock method is not anti-theft - an attacker can boot up recovery and use 'wipe data'
22:01:02 <strcat[m]> wipes away all your data
22:01:08 <strcat[m]> now they have a fresh install of the OS essentially
22:01:22 <blacklight447[m]> if you steal a graphene device witha proper password, wouldnt it be a brick anyway
22:01:32 <strcat[m]> blacklight447: it is a brick, that they can wipe
22:01:33 <radixed9[m]> <strcat[m] "radixed9: Auditor already provid"> You can do anti theft with a hardware key?
22:01:35 <difiewe[m]> If a thief stolen a phone and it uses anti-theft-feature. The phone is trash. But what about the parts?
22:01:40 <strcat[m]> blacklight447: lock method is not anti-theft
22:01:41 <blacklight447[m]> you cannot flash the os  because of the lock and the device needs the password for a factory reset
22:01:45 <strcat[m]> blacklight447: no
22:01:52 <radixed9[m]> <blacklight447[m] "you cannot flash the os  because"> false
22:01:52 <strcat[m]> blacklight447: you can factory reset without the passphrase from recovery
22:02:01 <strcat[m]> forgetting your passphrase does not brick your device
22:02:03 <blacklight447[m]> hmm
22:02:06 <difiewe[m]> <strcat[m] "difiewe: lock method is not anti"> with lock I meant locked down
22:02:06 <strcat[m]> we COULD do that - we used to do it
22:02:08 <radixed9[m]> > <@blacklight447:privacytools.io> you cannot flash the os  because of the lock and the device needs the password for a factory reset
22:02:08 <radixed9[m]>  * false, that would be very dangerous
22:02:15 <strcat[m]> tons of people forgot their passphrases and bricked their devices
22:02:17 <strcat[m]> and for what?
22:02:19 <strcat[m]> it's not a security feature
22:02:21 <blacklight447[m]> huh, i thought this was the case
22:02:34 <strcat[m]> blacklight447: no because we don't remove the 'wipe data' option in recovery anymore
22:02:46 <strcat[m]> because I am tired of dealing with people forgetting their passphrase and having their phone bricked
22:02:54 <blacklight447[m]> ah
22:02:56 <strcat[m]> I don't see that as helpful because tons of people are bricking their phones
22:03:03 <strcat[m]> and it is not actually preventing a SINGLE theft ever
22:03:06 <strcat[m]> so what is the point
22:03:13 <radixed9[m]> There is no point
22:03:43 <blacklight447[m]> oh well, its not like most thieves are smart enough to know how to reset via recorvery anyway
22:03:44 <radixed9[m]> This is a discussion covered well in the FAQ. There is no reason to do this or discuss it
22:03:58 <strcat[m]> blacklight447: https://grapheneos.org/faq#anti-theft
22:04:00 <strcat[m]> blacklight447: the point is
22:04:04 <strcat[m]> your phone is already stolen at this point
22:04:04 <radixed9[m]> <blacklight447[m] "oh well, its not like most thiev"> they figure out how to bypass iCloud locks long enough to sell phones
22:04:23 <strcat[m]> blacklight447: the attacker has the option to wipe your data to make it not a brick
22:04:24 <strcat[m]> blacklight447: in some sense
22:04:25 <strcat[m]> that's a good thing
22:04:34 <strcat[m]> lets say your passphrase is abcdef123
22:04:46 <strcat[m]> isn't it a good thing if the thief is motivated to wipe your data ASAP
22:05:01 <difiewe[m]> strcat: you shared the auditor app website link. Can I found there the device auth pairing protocol you described?
22:05:02 <radixed9[m]> <strcat[m] "isn't it a good thing if the thi"> exactly
22:05:05 <strcat[m]> blacklight447: anti-theft is not a security feature
22:05:12 <strcat[m]> blacklight447: it is about DENYING revenue to the thief
22:05:17 <strcat[m]> it does NOT get your back your stolen phone
22:05:24 <strcat[m]> it does NOT make the device more secure
22:05:31 <strcat[m]> blacklight447: the idea is DETERRENCE
22:05:45 <strcat[m]> blacklight447: i.e. there are FEWER phone thieves now because 80%+ of phones are useless bricks for them
22:06:30 <strcat[m]> blacklight447: because both iPhones and Google Android phones tie devices to accounts and the user has to remove the account when logged in to allow wiping to a clean state not tied to the account
22:06:33 <cn3m[m]> I wish people would read the FAQ
22:06:36 <strcat[m]> you can still wipe without the account credentials
22:06:44 <strcat[m]> https://grapheneos.org/faq#anti-theft explains it well
22:06:48 <strcat[m]> explains what the feature does on stock
22:06:53 <cn3m[m]> would kill 4/5 conversations here honestly
22:07:02 <strcat[m]> explains that we don't provide it, but that we COULD provide it if we wanted
22:07:26 <strcat[m]> blacklight447: it could be provided via a seed phrase or passphrase instead of an account but...
22:07:32 <strcat[m]> blacklight447: that doesn't sidestep the main issue with this
22:07:52 <strcat[m]> this is what happens: user sets a new passphrase on their account, forgets it immediately
22:08:08 <strcat[m]> blacklight447: so, with that wipe option removed, they just bricked the phone hardware
22:08:19 <strcat[m]> blacklight447: we used to remove the wipe option as anti-theft feature
22:08:28 <strcat[m]> blacklight447: tons of ppl bricked their phones setting a passphrase they couldn't remember
22:08:49 <strcat[m]> blacklight447: so lets say instead, factory reset protection was opt-in
22:08:52 <magntcf[m]> Lol
22:09:01 <strcat[m]> we could add "anti theft" toggle to Settings
22:09:14 <strcat[m]> the simplest possible implementation
22:09:18 <strcat[m]> is to store a boolean in the FRP data area
22:09:25 <strcat[m]> if the boolean is set, remove the wipe data option from recovery
22:09:35 <strcat[m]> but... sometimes wipe data option is useful of some kind of horrible corruption happens or w/e
22:09:39 <strcat[m]> partial hardware failure, who knows
22:09:52 <strcat[m]> maybe some part of the flash memory died, the SSD is able to detect it and stop using it, but data is lost
22:09:56 <strcat[m]> wipe data can recover from that
22:10:20 <strcat[m]> blacklight447: so, instead, we could use a seed phrase, store a hash of the seed phrase in the FRP data
22:10:29 <magntcf[m]> Tech failed to face corona virus , let's turn to biology folks 😂
22:10:35 <strcat[m]> blacklight447: after you wipe, if you didn't disable FRP first, you must enter seed phrase to proceed with setup
22:10:51 <strcat[m]> blacklight447: that would be like the Google implementation but with a seed phrase instead of an account on their server
22:10:55 <strcat[m]> blacklight447: it's just pointless....
22:10:59 <strcat[m]> it doesn't achieve anything
22:11:08 <anupritaisno1[m]> This is useless
22:11:10 <cn3m[m]> this is all that has to be said on the matter https://grapheneos.org/faq#anti-theft
22:11:14 <strcat[m]> it has to be opt-in because people will brick their phones otherwise by not writing down this seed, or losing it
22:11:23 <strcat[m]> and then forgetting their lock passphrase
22:11:31 <strcat[m]> and if it's opt-in
22:11:36 <strcat[m]> only like 5% of ppl will do this
22:11:37 <strcat[m]> because it's useless
22:11:43 <strcat[m]> and only 5% of ppl doing it makes it even more useless
22:11:49 <strcat[m]> since the ENTIRE point is DETERRENCE of theft
22:12:04 <strcat[m]> also it just has no point b/c thieves don't know GrapheneOS exists and don't know if the phone they are stealing is a GrapheneOS phone
22:12:08 <strcat[m]> by the time they can figure that out
22:12:11 <strcat[m]> they have ALREADY stolen it
22:12:15 <strcat[m]> and they are not going to bring you back your phone
22:12:29 <anupritaisno1[m]> <strcat[m] "it has to be opt-in because peop"> More like enter fastbootd and fastboot -w
22:12:58 <strcat[m]> anupritaisno1: the point of the feature is that after wiping / flashing, it's still tied to this
22:13:02 <strcat[m]> since it's in the FRP data area
22:13:18 <strcat[m]> which on Pixel 2 and earlier was a dedicated frp partition (probably how it works on most devices)
22:13:28 <strcat[m]> tiny little 4k partition where like 200 bytes are used to do this
22:13:41 <strcat[m]> on Pixel 3 it's on the Titan M
22:13:50 <strcat[m]> we just don't use it - we are totally free to use it, it's a really simple API
22:13:56 <strcat[m]> you can set/get the FRP data, that's the API
22:14:05 <strcat[m]> and it persists through a factory reset unlike everything else
22:14:07 <strcat[m]> that's the point
22:14:29 <strcat[m]> so we could implement this in a lot of diff ways it just has no point
22:14:39 <strcat[m]> anupritaisno1: you can't flash it with fastboot and wiping data doesn't erase it
22:14:52 <strcat[m]> anupritaisno1: it allows the OS to implement an anti-theft post-factory-reset lock, basically
22:14:58 <strcat[m]> that's why google calls it
22:15:03 <strcat[m]> 'factory reset protection'
22:15:12 <anupritaisno1[m]> Well yes but how do you unbrick?
22:15:13 <strcat[m]> it means if a thief goes into recovery and factory resets the device
22:15:32 <strcat[m]> it still has the anti-theft lock
22:15:33 <radixed9[m]> Where is this idea that you can't sell stolen phones coming from anyway? Why would you return it when you can sell it to some guy who will part it out or try to crack it?
22:15:35 <strcat[m]> anupritaisno1: with Google, via logging into the Google account (which has recovery options)
22:15:59 <anupritaisno1[m]> <strcat[m] "anupritaisno1: with Google, via "> What about on graphene
22:16:02 <strcat[m]> radixed9: yeah they can still sell it but the value is a lot lower and with a strong implementation it's basically scrap metal
22:16:06 <strcat[m]> anupritaisno1: we don't implement the feature
22:16:12 <strcat[m]> anupritaisno1: see https://grapheneos.org/faq#anti-theft
22:16:24 <strcat[m]> anupritaisno1: explains how it COULD be implemented
22:16:29 <strcat[m]> we don't want it tho
22:16:30 <anupritaisno1[m]> <strcat[m] "radixed9: yeah they can still se"> What about edl attacks?
22:16:31 <difiewe[m]> Two fast questions I have to check by people who know more than I:
22:16:31 <difiewe[m]> 1) Bluetooth MAC is randomized by default, right?
22:16:31 <difiewe[m]> 2) Private DNS breaks anonymity of VPN and Orbot apps, right?
22:16:36 <strcat[m]> anupritaisno1: not a thing on Pixels
22:16:46 <strcat[m]> anupritaisno1: and doesn't let you wipe FRP on Pixels anyway
22:16:54 <strcat[m]> anupritaisno1: FRP data on pixels is on the Titan M
22:16:57 <anupritaisno1[m]> <strcat[m] "anupritaisno1: not a thing on Pi"> So how to unbrick?
22:17:03 <strcat[m]> anupritaisno1: read https://grapheneos.org/faq#anti-theft
22:17:11 <radixed9[m]> anupritaisno1: It is also often a problem of the security chip reverting the changes anyway. Secure Enclave does this against some attacks
22:17:23 <radixed9[m]> anupritaisno1: you reset your Google password
22:17:34 * strcat[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/MgejySrudoRaHrKlkDZaHAHW >
22:17:53 <anupritaisno1[m]> Yes got it
22:17:59 <anupritaisno1[m]> But how would you recover from this?
22:18:06 <strcat[m]> anupritaisno1: the seed phrase
22:18:22 <strcat[m]> anupritaisno1: the whole point is if you can't login to the account or provide the recovery phrase
22:18:23 <anupritaisno1[m]> What if it's lost
22:18:24 <strcat[m]> the device is a brick
22:18:26 <strcat[m]> you CANNOT recover
22:18:28 <strcat[m]> that's the point
22:18:33 <strcat[m]> the WHOLE point of the feature is bricking phones
22:18:40 * difiewe[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/ppYYcgkmsqyJfofNeIgBFTBT >
22:18:53 <strcat[m]> Private DNS certainly doesn't break anonymity...
22:18:54 <anupritaisno1[m]> Sounds useless
22:18:57 <strcat[m]> you should always use Private DNS
22:19:00 <strcat[m]> anupritaisno1: it is basically useless
22:19:15 <strcat[m]> anupritaisno1: the ONLY thing this does is make stolen phones bricks for thieves - that's it, nothing else
22:19:20 <radixed9[m]> anupritaisno1: GrapheneOS doing it would be harmful. It would be worse than useless
22:19:20 <difiewe[m]> <strcat[m] "Private DNS certainly doesn't br"> It is DNS over HTTPS, right?
22:19:25 <strcat[m]> DNS-over-TLS
22:19:28 <radixed9[m]> difiewe: DoT
22:19:33 <radixed9[m]> which is security/privacy theater
22:19:45 <difiewe[m]> <radixed9[m] "difiewe: DoT"> DoT?
22:19:52 <radixed9[m]> DNS-over-TLS
22:19:57 <strcat[m]> it is useful in some cases
22:20:07 <strcat[m]> because there isn't a DNSSEC enforcing resolver atm
22:20:20 <anupritaisno1[m]> Private DNS is not even going to do anything to anonymity
22:20:25 <difiewe[m]> <strcat[m] "DNS-over-TLS"> Than my ip goes directly to the DNS over TLS.
22:20:35 <strcat[m]> difiewe: I don't know what you mean
22:20:36 <anupritaisno1[m]> You just encrypt your connection to the DNS
22:20:45 <difiewe[m]> <difiewe[m] "Than my ip goes directly to the "> Then the DNS knows what I searched with my IP?
22:20:46 <strcat[m]> difiewe: the DNS-over-TLS connection goes through the VPN ofc
22:20:50 <radixed9[m]> difiewe: use VPN to connect
22:20:51 <strcat[m]> no...
22:20:56 <anupritaisno1[m]> The DNS still communicates unencrypted
22:21:04 <strcat[m]> difiewe: DNS-over-TLS doesn't change that DNS goes through the VPN
22:21:10 <strcat[m]> also
22:21:20 <strcat[m]> the VPN-provided DNS server is still used to resolve the IP of the DNS-over-TLS server
22:21:31 <difiewe[m]> <strcat[m] "difiewe: DNS-over-TLS doesn't ch"> Ah its DNS-over-TLS OR VPN?
22:21:33 <strcat[m]> because DNS-over-TLS server is specified as a hostname in order to verify the certificate
22:21:36 <strcat[m]> difiewe: no
22:21:45 <strcat[m]> difiewe: I clearly said that the DNS-over-TLS connection goes through the VPN
22:21:55 <radixed9[m]> difiewe: no DoT is connected to by the VPN so the DNS provider doesn't see your real ip
22:22:02 <anupritaisno1[m]> Using it on a vpn is stupid
22:22:06 <strcat[m]> you might as well use DNS-over-TLS, it doesn't cause any harm
22:22:11 <strcat[m]> it is not particularly useful
22:22:16 <difiewe[m]> <strcat[m] "difiewe: I clearly said that the"> But then my VPN provider can't use there DNS right?
22:22:28 <radixed9[m]> anupritaisno1: It is not you can use domain filtering with a VPN
22:22:38 <anupritaisno1[m]> Many VPNs provide a DNS server with an encrypted transport already
22:22:41 <strcat[m]> difiewe: the DNS-ver-TLS connections still go through the VPN
22:22:47 <strcat[m]>  * difiewe: the DNS-over-TLS connections still go through the VPN
22:22:48 <radixed9[m]> difiewe: that is correct, but dns.adguard.com with a VPN is usually ideal for most people
22:22:59 <anupritaisno1[m]> You're just differentiating yourself from other users
22:23:07 <strcat[m]> anupritaisno1: yes that's true
22:23:14 <difiewe[m]> Whats with TOR/Orbot? The same way?
22:23:17 <radixed9[m]> anupritaisno1: there are much better ways to fingerprint
22:23:24 <strcat[m]> difiewe: doesn't make a difference
22:23:48 <radixed9[m]> <difiewe[m] "Whats with TOR/Orbot? The same w"> Tor Browser uses it's own DNS
22:23:52 <strcat[m]> DNS-over-TLS works fine with a VPN and goes through the VPN whether than VPN is ipsec, openvpn, tor, w/e
22:24:03 <strcat[m]> whether it is a good idea to use
22:24:05 <strcat[m]> is a separate question
22:24:08 <anupritaisno1[m]> Well there's a dnssec enforcing resolver strcat
22:24:10 <strcat[m]> and not what was being asked
22:24:12 <difiewe[m]> But when DNS goes through DNS/TOR they need to have my actual IP to send it back?
22:24:25 <radixed9[m]> <difiewe[m] "But when DNS goes through DNS/TO"> no...
22:24:27 <strcat[m]> difiewe:no that is not how the internet works
22:24:28 <anupritaisno1[m]> I run it and it sometimes some sites won't resolve
22:24:43 <strcat[m]> difiewe: DNS is not special, it goes through the VPN - that's the end of the story
22:25:12 <strcat[m]> anupritaisno1: what I was saying is Android doesn't provide a local DNSSEC-enforcing resolver
22:25:53 <xabi[m]> What do i lose if i use bromite instead of vanadium?
22:25:53 <strcat[m]> a DNS provider like Cloudflare, Google, or w/e will enforce DNSSEC on their server
22:26:01 <strcat[m]> xabi: hardening
22:26:01 <difiewe[m]> And TOR also don't use special DNS servers? Sounds strange to use different circuits and then use the same DNS by encrypting only that one.
22:26:09 <radixed9[m]> <strcat[m] "a DNS provider like Cloudflare, "> this is covered in detail in the Usage guide
22:26:15 <strcat[m]> difiewe: you seem really confused about this
22:26:21 <strcat[m]> difiewe: refer back to what I said
22:26:25 <radixed9[m]> <strcat[m] "a DNS provider like Cloudflare, "> this is covered in detail in the Usage guide
22:26:43 <radixed9[m]> why does this not ping the guy asking about bromite and vanadium?
22:26:50 <difiewe[m]> <xabi[m] "What do i lose if i use bromite "> I think you have than the brwser engine twice on your phone, becuase PDF readers one i shared
22:26:50 <radixed9[m]> xabi: check the usage guide
22:27:09 <xabi[m]> I will!
22:27:09 <radixed9[m]> difiewe: bromite is the same browser engine
22:27:23 <difiewe[m]> Okay sorry
22:27:24 <strcat[m]> radixed9: it's based on the same one, it's not the same one though
22:27:35 <radixed9[m]> Bromite lacks hardening features
22:27:36 <strcat[m]> Vanadium provides the standalone Vanadium browser and the WebView on GrapheneOS
22:28:05 <strcat[m]> you can't replace the WebView implementation
22:28:06 <strcat[m]> so you ARE going to be using Vanadium
22:28:08 <strcat[m]> if you use GrapheneOS
22:28:34 <strcat[m]> whether you use the browser app it provides is up to you but you are using it
22:28:57 <anupritaisno1[m]> <strcat[m] "anupritaisno1: what I was saying"> Well that can be done
22:29:13 <strcat[m]> anupritaisno1: yeah it's not particularly useful tho
22:29:20 <anupritaisno1[m]> But is there an actual benefit?
22:29:26 <strcat[m]> DNS-over-TLS isn't particularrly useful either
22:29:26 <strcat[m]> as explained in the docs
22:29:46 <strcat[m]> anupritaisno1: the only use of DNSSEC is securing certificate issuance and email servers really
22:29:55 <strcat[m]> anupritaisno1: and CAs are not required to check DNSSEC
22:30:00 <strcat[m]> so it doesn't really secure certificate issuance
22:30:22 <strcat[m]> and most email providers / servers don't bother to set up authenticated encryption
22:30:42 <xabi[m]> <strcat[m] "whether you use the browser app "> What do you mean? Bromite uses vanadium webview? That would make it even better. Vanadium+adblock without dns
22:30:53 <strcat[m]> xabi: Bromite doesn't use the WebView
22:30:58 <radixed9[m]> xabi: It uses Chromium build with patches
22:31:01 <anupritaisno1[m]> <xabi[m] "What do you mean? Bromite uses v"> Just use DNS
22:31:16 <xabi[m]> Ok, that was what i thought first
22:31:26 <strcat[m]> xabi: the usage guide explains this stuff
22:31:33 <radixed9[m]> The Usage guide explains this all
22:31:34 <anupritaisno1[m]> Well it actually can
22:31:42 <strcat[m]> most apps that do web content use the WebView, and most random browsers use the WebView
22:31:45 <anupritaisno1[m]> But nobody builds it that way
22:31:56 <strcat[m]> but standalone browsers like Bromite and Firefox don't use the WebView
22:31:59 <xabi[m]> I have adblock DNS systemwide + swiss  privacy DNS set up inside bromite
22:32:12 <strcat[m]> anupritaisno1: nah bromite can't use the webview, it is possible for it to PROVIDE the webview but then it would have to be built into the OS
22:32:29 <anupritaisno1[m]> <strcat[m] "anupritaisno1: nah bromite can't"> It can in a way
22:32:29 <radixed9[m]> Only Firefox Lite is running the Vanadium WebView
22:32:40 <anupritaisno1[m]> An extremely hacky way
22:33:00 <anupritaisno1[m]> Building it separately as the trichrome bundle
22:33:03 <strcat[m]> anupritaisno1: well you could build Trichrome and whitelist the Vanadium Trichrome library yeah
22:33:09 <xabi[m]> <radixed9[m] "Only Firefox Lite is running the"> Does it make firefox work in an aceptable way?
22:33:15 <radixed9[m]>  * Only Firefox Lite is running the Vanadium WebView. Bromite is not, Firefox is not, Firefox Focus doesn't any more.
22:33:20 <strcat[m]> xabi: see the usage guide
22:33:23 <strcat[m]> please
22:33:24 <radixed9[m]> xabi: no Firefox Lite is borderline useless
22:33:34 <strcat[m]> https://grapheneos.org/usage#web-browsing
22:33:34 <radixed9[m]> Firefox shouldn't be used at all
22:33:38 <anupritaisno1[m]> <radixed9[m] "xabi: no Firefox Lite is borderl"> Firefox is useless /s
22:33:40 <strcat[m]> please read https://grapheneos.org/usage#web-browsing
22:33:45 <strcat[m]> explains all of this
22:33:52 <strcat[m]> I keep having to make it bigger
22:33:56 <strcat[m]> just read it
22:34:04 <anupritaisno1[m]> I might want to add extension support on android
22:34:07 <anupritaisno1[m]> Need adblock
22:34:13 <strcat[m]> anupritaisno1: just add adblock
22:34:17 <strcat[m]> via the built-in ad-blocking engine
22:34:24 <strcat[m]> Vanadium has an ad-blocking engine already via Chromium
22:34:25 <radixed9[m]> The last 30 minutes of dialogue has all been explained in depth in on the website
22:34:26 <strcat[m]> we just aren't using it
22:34:33 <anupritaisno1[m]> <strcat[m] "via the built-in ad-blocking eng"> Already know of it
22:34:36 <xabi[m]> Bromite has adblock without extensions
22:34:37 <strcat[m]> anupritaisno1: see what zoraver worked on
22:34:46 <anupritaisno1[m]> I need content hiding though
22:34:47 <strcat[m]> anupritaisno1: we just need to set it up
22:35:14 <anupritaisno1[m]> The current implementation doesn't clean up the space used by ads
22:35:26 <strcat[m]> I don't want extensions because it's a whole massive privacy / security can of worms and I want things done properly
22:35:30 <strcat[m]> anupritaisno1: yeah but we should start by using it
22:35:33 <strcat[m]> and then it can be improved
22:35:53 <strcat[m]> aren't content hiding rules basically just CSS that's injected
22:35:54 <anupritaisno1[m]> BTW did you test that SCS build?
22:36:02 <strcat[m]> no I don't have time
22:36:22 <strcat[m]> you should confirm it's actually using SCS
22:36:22 <anupritaisno1[m]> How to even check if it does?
22:36:33 <strcat[m]> look at generated code
22:36:35 <cn3m[m]> He's too busy rewriting the website to a chat that can't read
22:36:39 <strcat[m]> look at /proc/PID/maps for it
22:36:39 <anupritaisno1[m]> Well what am I looking for
22:36:52 <anupritaisno1[m]> <strcat[m] "look at /proc/PID/maps for it"> What to look for here?
22:37:03 <strcat[m]> shadow call stack mapping being used
22:37:21 <strcat[m]> you can use run-as if you did a debuggable build of the app
22:37:26 <strcat[m]> you can change that in the manifest and resign it anyway
22:37:31 <strcat[m]> run-as the app and cat /proc/PID/maps
22:38:56 <spaceinfinite[m]> <strcat[m] "whether you use the browser app "> When you open in app links does it use the webview or do apps have their own version of it?
22:39:52 <cn3m[m]> spaceinfinite: this can be handled in two ways. You can use WebView or by using a browser that handles custom Intents
22:39:53 <cn3m[m]> It varies
22:40:00 <spaceinfinite[m]> strcat (@strcat:matrix.org): nevermind you commented further down on it
22:40:03 <strcat[m]> when you open links in apps, they generally open your default browser
22:40:12 <strcat[m]> if you don't have a default browser the OS asks you to choose
22:40:29 <strcat[m]> however, apps can also decide to display web content INTERNALLY with the WebView (which is provided by the OS using Vanadium)
22:40:35 <strcat[m]> many apps use web content internally
22:40:51 <strcat[m]> for example an email app with use the WebView to display HTML emails (WebView with JS, etc. disabled)
22:40:56 <strcat[m]>  * for example an email app will use the WebView to display HTML emails (WebView with JS, etc. disabled)
22:41:00 <anupritaisno1[m]> BTW does use_cfi_icall/use_cfi_cast not work on android?
22:41:07 <strcat[m]> apps can also use 'chrome custom tabs'
22:41:15 <strcat[m]> anupritaisno1: use_cfi_cast may work but may uncover bugs
22:41:20 <cn3m[m]> Try disabling web view and trying all your apps. You'll be surpassed how many do
22:41:24 <strcat[m]> anupritaisno1: dunno about the others
22:41:34 <strcat[m]> anupritaisno1: there are code size issues for these being deployed on Android
22:41:39 <strcat[m]> that's the only reason it's not as far along
22:41:42 <anupritaisno1[m]> <strcat[m] "anupritaisno1: use_cfi_cast may "> Well it crashed
22:41:54 <strcat[m]> yeah you can expect all of these to uncover bugs
22:41:57 <anupritaisno1[m]> Tried those
22:42:01 <strcat[m]> they have a test bot for the vcall one we enable
22:42:12 <strcat[m]> anupritaisno1: you can see what they enable on desktop
22:42:15 <strcat[m]> they don't enable all
22:42:22 <anupritaisno1[m]> Hmm
22:42:23 <strcat[m]> half of this is in testing phase
22:42:41 <strcat[m]> vcall has been deployed for years
22:42:41 <anupritaisno1[m]> Why does Linux kernel have like everything enabled?
22:42:50 <strcat[m]> anupritaisno1: it doesn't
22:42:58 <strcat[m]> anupritaisno1: the Linux kernel has 0 of this in mainline
22:43:01 <strcat[m]> no shadow call stack, no CFI
22:43:14 <strcat[m]> anupritaisno1: Google did it for Pixel kernels and the Android common kernel
22:43:20 <strcat[m]> afaik it's in the common kernels now
22:43:26 <anupritaisno1[m]> Android common kernel doesn't have scs
22:43:36 <anupritaisno1[m]> I had to pick from the pixel kernel
22:43:39 <strcat[m]> ok just the pixel kernel then
22:43:44 <strcat[m]> anupritaisno1: because Google did it
22:43:55 <strcat[m]> they have tried for years to get security features like this upstream
22:44:11 <strcat[m]> many mainline kernel devs are anti-security and some are anti-LLVM
22:44:23 <strcat[m]> so this triggers both groups
22:44:27 <anupritaisno1[m]> BTW you mind if I work on pixel 4 support?
22:44:33 <strcat[m]> anupritaisno1: that would be great
22:44:37 <strcat[m]> I started making repos for it
22:44:42 <anupritaisno1[m]> Well without the device
22:44:43 <TheJollyRoger> Wow!
22:44:46 <anupritaisno1[m]> But
22:44:54 <anupritaisno1[m]> I've done that in the  past
22:44:58 <strcat[m]> anupritaisno1: someone started and ran into major problems
22:45:04 <anupritaisno1[m]> Have to be very careful when bljnd
22:45:05 <strcat[m]> so I don't think you could really go further without the device
22:45:18 <anupritaisno1[m]> <strcat[m] "so I don't think you could reall"> Can try
22:45:25 <strcat[m]> can't make further progress without people actively working on it / debugging / fixing stuff
22:45:32 <TheJollyRoger> I'm going to order another P3. I'm going to try to see if I can find a demo/cracked/burnt in device.
22:45:37 <anupritaisno1[m]> BTW you guys use prebuilt dtbo right?
22:45:37 <strcat[m]> I won't do it and end of June is a soft deadline for this
22:45:42 <strcat[m]> anupritaisno1: no
22:45:58 <strcat[m]> anupritaisno1: well what do you mean prebuilt
22:46:04 <strcat[m]> anupritaisno1: we build it ourselves
22:46:14 <strcat[m]> anupritaisno1: look at build.sh in kernel_google_crosshatch
22:46:21 <strcat[m]> that is how we build the kernel + dtbo
22:46:23 <anupritaisno1[m]> <strcat[m] "anupritaisno1: well what do you "> I mean do you use dtc to build a dtbo.img from source?
22:46:29 <strcat[m]> anupritaisno1: yes
22:46:30 <anupritaisno1[m]> Okay
22:46:42 <anupritaisno1[m]> Well that might be the issue
22:46:46 <strcat[m]> it gets built as part of building the kernel
22:46:51 <anupritaisno1[m]> Will need to take a look though
22:46:59 <strcat[m]> anupritaisno1: I doubt it - they said the issue was something to do with Wi-Fi
22:47:05 <strcat[m]> and worked around it in android-prepare-vendor / device repo
22:47:12 <strcat[m]> but they didn't solve the problem or figure out what caused it
22:47:24 <strcat[m]> anupritaisno1: https://github.com/paintedman?tab=repositories
22:47:30 <anupritaisno1[m]> What was the problem?
22:47:31 <strcat[m]> their repos are here - it's not suitable for merging atm
22:47:33 <radixed9[m]> <TheJollyRoger "I'm going to order another P3. I"> I tried to find a P4 like this
22:47:40 <strcat[m]> anupritaisno1: don't know they just said wifi was broken and they had to work around it
22:47:42 <strcat[m]> look at their repos
22:47:48 <strcat[m]> I don't know
22:47:55 <TheJollyRoger> Yeah. Just a testing/development device.
22:47:59 <strcat[m]> anupritaisno1: I have only glanced at their repos and determined that it's not ready for GrapheneOS to use
22:48:10 <strcat[m]> it can't have serious issues or hacks/workarounds
22:48:11 <anupritaisno1[m]> Yo wtf is this bs https://github.com/paintedman/coral_kernel_qca-wifi-host-cmn/commit/1f67add623c44a09d574db6d68e7167a2f868afd
22:48:21 <anupritaisno1[m]> "Update to new version"
22:48:27 <strcat[m]> yeah it can't have stuff like that
22:48:33 <strcat[m]> anupritaisno1: look at my crosshatch repos
22:48:39 <strcat[m]> anupritaisno1: it needs to match that, 1:1 commits
22:48:57 <strcat[m]> there should be no merged commits or extra commits
22:48:59 <strcat[m]> just 1:1 commits
22:49:06 <strcat[m]> only an extra commit if there's an extra thing to do for Pixel 4
22:49:10 <strcat[m]> and no merging multiple commits together
22:49:14 <strcat[m]> same order for commits too
22:49:16 <radixed9[m]> Is Pixel 4 development past deadline then?
22:49:25 <strcat[m]> soft deadline is end of june
22:49:29 <strcat[m]> if people want it this is the final month
22:49:34 <TheJollyRoger> Crud.
22:49:39 <strcat[m]> Pixel 4a will be off the table if 4 and 4 XL are not added
22:49:44 <strcat[m]> it is not an option to add only one of them
22:50:06 <strcat[m]> 4 and 4 XL are prerequisites for the 4a because the 4a will be merged into the main AOSP branch MUCH later
22:50:08 <radixed9[m]> No one wants to buy a Pixel 4, but everyone wants a Pixel 4a ha
22:50:09 <TheJollyRoger> Is there a way we could jettison the Pixel 2...?
22:50:11 <strcat[m]> and will share a lot of the code
22:50:30 <strcat[m]> TheJollyRoger: it will be gone near end of the year / start of next year in all likelihood anyway
22:50:33 <strcat[m]> probably in November ish
22:50:36 <strcat[m]> or December
22:50:46 <strcat[m]> I could also stop doing as many releases for it
22:50:50 <strcat[m]> or stop testing them
22:50:58 <TheJollyRoger> If it helps!
22:51:18 <anupritaisno1[m]> <strcat[m] "only an extra commit if there's "> Well I'll probably end up using my current base
22:51:20 <strcat[m]> anupritaisno1: look closely at my crosshatch repos, just need to do EXACTLY the same thing for coral/flame
22:51:22 <radixed9[m]> Will it even get Android 11 from GrapheneOS? It seems like a waste of time even though the device will get it officially
22:51:34 <strcat[m]> anupritaisno1: it needs to be based on my crosshatch repos
22:51:35 <anupritaisno1[m]> I have all of your current mitigations ported to 4.14
22:51:37 <radixed9[m]> Pixel 2
22:51:43 <TheJollyRoger> strcat[m]: , the 3 and 3XL share a lot of code, right...? Only really big difference is the driver for its screen?
22:51:48 <strcat[m]> anupritaisno1: it should be a 1:1 copy of our existing crosshatch support
22:51:52 <TheJollyRoger> Since now I'm wondering if I should buy a crosshatch too.
22:51:53 <strcat[m]> TheJollyRoger: yes and the dpi, etc.
22:52:03 <strcat[m]> TheJollyRoger: it is not worth buying both variants
22:52:07 <TheJollyRoger> OK, hang on I'll look for a crosshatch too. I'm still-- oh.
22:52:07 <strcat[m]> I have both that's good enough
22:52:09 <TheJollyRoger> Oh whew.
22:52:17 <TheJollyRoger> Oh whew.
22:52:30 <anupritaisno1[m]> <strcat[m] "anupritaisno1: it should be a 1:"> But why not just port the entire thing from the old one?
22:52:32 <strcat[m]> TheJollyRoger: there has never been an issue specific to the 3 or 3 XL unlike the Pixel 2 and 2 XL
22:52:41 <TheJollyRoger> I'm still waiting for this seller to get back to me, I'm trying to search for one so I don't have to constantly keep resetting my daily driver phone.
22:52:48 <strcat[m]> anupritaisno1: that is what I am saying, the coral support should be a 1:1 match with the crosshatch support
22:52:52 <strcat[m]> anupritaisno1: every single commit should match
22:53:00 <strcat[m]> they should be the same commits, in the same order, only adjusted as needed
22:53:02 <strcat[m]> no extra stuff
22:53:04 <strcat[m]> no missing stuff
22:53:12 <strcat[m]> no merged commits, no changed order
22:53:14 <strcat[m]> same thing, for coral
22:53:17 <strcat[m]> that's what I expect
22:53:36 <strcat[m]> anupritaisno1: need working android-prepare-vendor support and working GrapheneOS support
22:53:47 <strcat[m]> and nothing horribly broken, and no horrible workarounds like that attempt at doing it
22:53:55 <strcat[m]> where wifi was broken and there are drastic workarounds for it
22:53:57 <strcat[m]> don't want that
22:53:58 <radixed9[m]> TheJollyRoger: is GrapheneOS not compatible with DSU Loader in Android 10?
22:53:59 <strcat[m]> has to be proper
22:54:23 <anupritaisno1[m]> <strcat[m] "anupritaisno1: every single comm"> Why not this though? https://github.com/GlassROM-devices/android_kernel_oneplus_sm8150/commits/619103f3d5c27bf0e7782e3045d7964a3b700143
22:54:30 <strcat[m]> radixed9: GSI is only a system image not the whole OS
22:54:38 <anupritaisno1[m]> It is upstream Linux hardened fully ported
22:54:43 <strcat[m]> anupritaisno1: what I expect is every single commit matches, same commits, same order
22:54:47 <strcat[m]> anupritaisno1: that is something to do later
22:54:50 <spaceinfinite[m]> Is riot.im heavy on battery for anyone ?
22:54:53 <strcat[m]> anupritaisno1: every device has to match
22:55:07 <strcat[m]> anupritaisno1: I will reject any attempt to add Pixel 4 support not per the way we do things
22:55:18 <strcat[m]> I'll close the pull requests and we will skip the devices
22:55:19 <strcat[m]> to be clear
22:55:25 <strcat[m]> device maintainers do not decide how devices are supported
22:55:29 <strcat[m]> they follow the specs of the project
22:55:42 <strcat[m]> we keep consistency across devices
22:55:42 <radixed9[m]> anupritaisno1: Thanks for trying the Pixel 4 this would be awesome. I do want to get a Pixel 4a down the road
22:56:11 <strcat[m]> anupritaisno1: I *want* to start doing automated merges of the upstream LTS branches earlier than Google again, we used to, and I want to add back all the past hardening
22:56:16 <strcat[m]> anupritaisno1: but that is not part of adding Pixel 4 support
22:56:30 <strcat[m]> that is a separate task to do across devices, in a way that is within the specs and consistent
22:56:37 <strcat[m]> it's a separate project
22:56:45 <strcat[m]> first project is adding Pixel 4 support per the Pixel 3 support
22:57:01 <strcat[m]> if you want to add hardening commits they should be added for both devices with consistent commits whenever possible
22:57:08 <strcat[m]> avoid deviations between the devices unless it's too impractical
22:57:12 <anupritaisno1[m]> <strcat[m] "anupritaisno1: I *want* to start"> I already have stuff setup for that too
22:57:17 <strcat[m]> anupritaisno1: also atm the canary commit is reverted
22:57:18 <strcat[m]> so step 1
22:57:20 <strcat[m]> fix the canary feature
22:57:36 <M38qlew5q[m]> GrapheneOS runs so smoothly on the 3a.  Its amazing what a bloatfree non-google device can do with the hardware.  I will upgrade but I am happy with the project on 3a for the time being.
22:57:38 <strcat[m]> anupritaisno1: progress stalled on this because of the issue with the canary feature
22:57:40 <anupritaisno1[m]> <strcat[m] "fix the canary feature"> BTW that's a tricky one
22:58:02 <strcat[m]> well we need to get developers to help with the project including resolving tricky stuff like that
22:58:08 <strcat[m]> TheJollyRoger can help people get serial debug cables
22:58:10 <anupritaisno1[m]> The upstream extend initon{free,alloc} to slab constructors with caches commit also does not boot
22:58:13 <strcat[m]> and then they can do printk debugging at least
22:58:32 <anupritaisno1[m]> Okay why did riot screw up my formatting
22:58:42 <strcat[m]> because it has crappy partial markdown support
22:58:43 <anupritaisno1[m]> Anyway that too isn't booting
22:58:47 <strcat[m]> but it doesn't let you fix it via edit
22:58:51 <strcat[m]> so you can do underline or whatever
22:58:59 <strcat[m]> lol it doesn't support underline
22:59:01 <strcat[m]> exactly my point
22:59:07 <strcat[m]> anyway the edit text thing doesn't work properly
22:59:17 <strcat[m]>  * anyway the edit text thing doesn't work properly
22:59:21 <strcat[m]>  * anyway the edit text thing doesn't work \_properly_
22:59:28 <strcat[m]>  * anyway the edit text thing doesn't work properly
22:59:28 <anupritaisno1[m]> Well that guy already seems to have ported the patch
22:59:39 <anupritaisno1[m]> If you want to ignore that one patch and port the rest
22:59:43 <strcat[m]> anupritaisno1: it needs to match 1:1
22:59:54 <anupritaisno1[m]> The kernel I linked you to will cherry-pick cleanly
23:00:14 <anupritaisno1[m]> Because it's very close to the common kernel already
23:00:14 <strcat[m]> anupritaisno1: I have to work on all the devices so I want all the commits matching 100%
23:00:21 <strcat[m]> it must be the same commits, same order
23:00:24 <strcat[m]> only necessary changes
23:00:30 <anupritaisno1[m]> <strcat[m] "anupritaisno1: I have to work on"> Well I wish that were possible
23:00:36 <strcat[m]> if it's too hard to add a hardening feature for an older device that's fine
23:00:41 <strcat[m]> it is possible, that's what we do
23:00:46 <anupritaisno1[m]> But some things like init on free, there's a limit to how much you can backport
23:00:52 <strcat[m]> anupritaisno1: ok and that's fine
23:00:57 <strcat[m]> we don't need to backport it all
23:01:05 <strcat[m]> but adding extra features is NOT part of initially adding support for the device
23:01:16 <strcat[m]> I won't accept Pixel 4 support that is not 1:1 with Pixel 3 support
23:01:17 <strcat[m]> that is my spec
23:01:26 <strcat[m]> not matching spec == downstream fork that will never be merged
23:01:27 <strcat[m]> that's just how it is
23:01:31 <strcat[m]> I have a spec on how to do it
23:01:36 <anupritaisno1[m]> <strcat[m] "but adding extra features is NOT"> So when do you want to add these features?
23:01:55 <strcat[m]> Pixel 4 support needs to be added per Pixel 3 support
23:01:56 <strcat[m]> it needs to be 100% working
23:02:13 <strcat[m]> issues like whatever that wifi problem is need to be resolved without horrible hacks / workarounds
23:02:15 <strcat[m]> it needs to go through at least one stable release
23:02:18 <strcat[m]> THEN we can extend it
23:02:32 <anupritaisno1[m]> Okay so
23:02:33 <anupritaisno1[m]> Should I do like 1:1 with p3
23:02:36 <anupritaisno1[m]> Do a stable
23:02:38 <strcat[m]> now is not the time to do extra stuff for Pixel 4 - that's for later
23:02:47 <anupritaisno1[m]> And then port everything over?
23:02:47 <strcat[m]> yes need it 100% working matching Pixel 3 features
23:02:51 <strcat[m]> then adding more hardening can be done later
23:02:55 <strcat[m]> and as we go through the extra stuff
23:03:00 <strcat[m]> we can add what is feasible for Pixel 3 too
23:03:01 <strcat[m]> in same order
23:03:04 <strcat[m]> just skip what is too hard
23:03:10 <anupritaisno1[m]> Okay I get you
23:03:32 <anupritaisno1[m]> First I'll get it to work 1:1 with pixel 3
23:03:33 <strcat[m]> anupritaisno1: I want to be able to look at patch sets for each kernel and see same commits in same order - but newer devices have extra hardening, that's fine
23:03:42 <anupritaisno1[m]> Then once it's stable add all of the upstream hardening
23:03:50 <anupritaisno1[m]> Then merge LTS
23:03:54 <anupritaisno1[m]> That's the order you want?
23:04:04 <strcat[m]> anupritaisno1: yeah merging LTS is painful tho it needs to be done in a very specific way
23:04:13 <strcat[m]> I like what nathan chance has set up but it's not set up in a way that's meant for others to use atm
23:04:25 <strcat[m]> anupritaisno1: https://github.com/nathanchance/stable-patches
23:04:25 <anupritaisno1[m]> <strcat[m] "anupritaisno1: yeah merging LTS "> I've done way more complex merges than some LTS
23:04:37 <strcat[m]> anupritaisno1: I want to use this to AUTOMATICALLY apply the stable patches every month from scratch
23:04:47 <anupritaisno1[m]> Merging LTS is like a walk in the park compared to merging CAF
23:04:49 <strcat[m]> anupritaisno1: keep in mind there are monthly updates and with the Pixel 4 and 4 XL I will be dealing with 8 devices
23:05:03 <anupritaisno1[m]> <anupritaisno1[m] "Merging LTS is like a walk in th"> Well for me
23:05:04 <strcat[m]> I have to test 8 devices after 4 and 4 XL
23:05:10 <strcat[m]> 4a will be 9
23:05:21 <strcat[m]> and it will be 3 or 4 kernel trees
23:05:32 <anupritaisno1[m]> Will not be an issue
23:05:34 <strcat[m]> originally 3a and 3a XL had their own substantially different kernel tree
23:05:42 <strcat[m]> Google did substantial work to make it share the same sources as Pixel 3
23:05:51 <strcat[m]> so we have unified 3, 3 XL, 3a, 3a XL kernel sources
23:06:00 <anupritaisno1[m]> <anupritaisno1[m] "Will not be an issue"> .
23:06:10 <anupritaisno1[m]> Merging LTS is simple
23:06:10 <strcat[m]> if we really wanted we could use modules like they do to only have 2 kernel builds but we prefer having 4 separate specialized more hardened builds
23:06:16 <strcat[m]> anupritaisno1: yes it's simple
23:06:17 <strcat[m]> anupritaisno1: buuut
23:06:23 <strcat[m]> anupritaisno1: I want it automated like nathan chance hasd
23:06:25 <strcat[m]>  * anupritaisno1: I want it automated like nathan chance has
23:06:40 <anupritaisno1[m]> Glassrom already does that
23:06:41 <anupritaisno1[m]> But
23:06:42 <strcat[m]> anupritaisno1: so I can run some script that takes the fresh new upstream tag and applies the LTS branch on top of it and uses automated conflict resolution
23:06:47 <anupritaisno1[m]> A few times it fails
23:07:01 <anupritaisno1[m]> Because google backports F2FS
23:07:04 <strcat[m]> and we need to figure out how to make new conflict resolution things
23:07:21 <strcat[m]> anupritaisno1: ideally Google would merge the LTS branches much faster themselves
23:07:24 <anupritaisno1[m]> So you actually have a newer F2FS than what LTS is trying to add
23:07:30 <strcat[m]> if they only had 2-3 months lag it wouldn't matter much
23:07:44 <radixed9[m]> Is it wrong to buy a device with a bad IMEI.. I am genuinely unsure. Looking for a development device. Any advice?
23:07:54 <strcat[m]> what's a 'bad IMEI'
23:08:00 <strcat[m]> i.e. a stolen device with a blacklisted IMEI?
23:08:09 <anupritaisno1[m]> <strcat[m] "if they only had 2-3 months lag "> How much is it?
23:08:09 <radixed9[m]> blacklisted yes
23:08:23 <anupritaisno1[m]> I can see that their current ASB revision is 4.14.177
23:08:40 <anupritaisno1[m]> Is it older?
23:08:41 <radixed9[m]> financed IMEI is what it is listed as
23:08:45 <strcat[m]> anupritaisno1: atm Pixel 3 is 4.9.210
23:08:53 <radixed9[m]> I imagine it is a stolen device and I probably shouldn't buy it
23:09:03 <anupritaisno1[m]> <strcat[m] "anupritaisno1: atm Pixel 3 is 4."> Too old
23:09:04 <strcat[m]> https://www.kernel.org/ is 4.9.225
23:09:13 <anupritaisno1[m]> What about 4.14?
23:09:17 <strcat[m]> 4.9.210 is January
23:09:21 <strcat[m]> anupritaisno1: I'm talking about Pixel kernel
23:09:27 <strcat[m]> anupritaisno1: the Android common kernel is fully up-to-date
23:09:45 <strcat[m]> the problem is it's Qualcomm that forks Android common kernel and Pixel kernel is a fork of theirs
23:09:49 <anupritaisno1[m]> Well coral?
23:09:55 <strcat[m]> sec
23:10:03 <strcat[m]> anupritaisno1: so for pixels
23:10:09 <strcat[m]> anupritaisno1: https://android.googlesource.com/kernel/msm.git is main kernel repo (since they are Qualcomm)
23:10:17 <strcat[m]> anupritaisno1: the latest 4 tags are for the Pixels
23:10:23 * strcat[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/UjHSmrZoJnqAqftMWgAotwDt >
23:10:32 <strcat[m]> https://android.googlesource.com/kernel/msm.git/+log/666300e6213607815cf1607e0f33e8e6d22c17a4
23:10:34 <strcat[m]> this is coral
23:10:38 <strcat[m]> 666300e Merge android-msm-floral-4.14-qt-qpr2 into android-msm-floral-4.14-qt-qpr3 by SecurityBot AutoMerger · 8 weeks ago android-msm-coral-4.14-android10 android-10.0.0_r0.67
23:10:38 * anupritaisno1[m] uploaded an image: Screenshot_20200603-044013_Settings.png (166KB) < https://matrix.org/_matrix/media/r0/download/m.apex.to/MxqjOxxdIkqOXRlVEpCMulAm >
23:10:49 <anupritaisno1[m]> Well this is what I got
23:11:01 <strcat[m]> anupritaisno1: so you can see coral uses android-msm-coral-4.14-android10 branch and android-10.0.0_r0.67 tag is the latest
23:11:15 <strcat[m]> anupritaisno1: and this is important: you get the other repos via the same branches/tags in the other repos
23:11:26 <strcat[m]> anupritaisno1: they also post the repos to the android building group
23:11:59 <anupritaisno1[m]> Yes got it
23:12:00 <strcat[m]> anupritaisno1: https://groups.google.com/forum/?hl=bn#!topic/android-building/Zj5VVapM8H8 see here?
23:12:08 <anupritaisno1[m]> Yes
23:12:08 * strcat[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/okmGDgSCBtEIKhXxRWpMFCrv >
23:12:22 <anupritaisno1[m]> Wait
23:12:26 <anupritaisno1[m]> data-kernel?
23:12:33 <anupritaisno1[m]> Wtf is that driver doing there
23:12:34 <strcat[m]> that was for May
23:12:45 * strcat[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/xjXPbnyAEXWlDirwNUmAuRFF >
23:12:48 <strcat[m]> that's for June
23:12:52 <anupritaisno1[m]> No I mean what's data-kernel doing there?
23:13:02 <cdesai> that isn't built, probably just for headers for something else
23:13:03 <strcat[m]> I haven't looked at the Pixel 4 kernel yet
23:13:05 <strcat[m]> I don't know what it is
23:13:14 <anupritaisno1[m]> Data-kernel is a terribly broken driver
23:13:18 <cdesai> only modules built are techpack/audio, wifi and fts
23:13:22 <cdesai> other repos are just deps
23:13:23 <cdesai> not built
23:13:24 <strcat[m]> msm-extra is where they get teckpack/audio
23:13:29 <anupritaisno1[m]> You can never enforce CFI with that driver
23:13:39 <strcat[m]> anupritaisno1: they don't use it as cdesai is saying
23:13:40 <anupritaisno1[m]> Its some bs from Qualcomm to "boost internet speed"
23:13:59 <strcat[m]> yeah well Qualcomm makes a lot of BS
23:14:14 <strcat[m]> it would be nice if they cancelled half of their CAF projects and just worked on getting hardware support fully into AOSP and mainline kernels
23:14:20 <anupritaisno1[m]> It also causes a kernel panic if you bring a wireguard tunnel up
23:14:21 <strcat[m]> and open sourced all the libraries, etc.
23:14:30 <anupritaisno1[m]> With data-kernel compiled into the kernel
23:14:38 <strcat[m]> they are better than allt he other SoC vendors
23:14:42 <strcat[m]> but they are still fucking insane
23:14:58 <strcat[m]> why do they need to develop forks of everything in AOSP to micro-optimize shit and develop weird features no one uses
23:15:03 <strcat[m]> and why do they have a chromium fork
23:15:07 <strcat[m]> why don't they upstream shit
23:15:08 <anupritaisno1[m]> <strcat[m] "but they are still fucking insan"> You've probably seen qcacld so I don't need to reiterate
23:15:14 <strcat[m]> anupritaisno1: they didn't make that
23:15:16 <strcat[m]> they acquired it
23:15:24 <anupritaisno1[m]> <strcat[m] "anupritaisno1: they didn't make "> Yes but it's a terrible driver
23:15:30 <strcat[m]> anupritaisno1: yeah it is the most shit driver ever made
23:15:31 <strcat[m]> atheros made it
23:15:33 <strcat[m]> qualcomm bought them
23:15:44 <anupritaisno1[m]> The moment CAF pushes a tag
23:15:46 <strcat[m]> the upstream atheros drivers have awful performance and functionality
23:15:51 <strcat[m]> so they keep this qcacld monstrosity going
23:15:54 <cn3m[m]> Fun fact. Reddit sucks..
23:15:55 <anupritaisno1[m]> I just merge it immediately into CAF
23:16:02 <anupritaisno1[m]> It is the worst security theater
23:16:19 <anupritaisno1[m]> Not to add
23:16:24 <anupritaisno1[m]> It's split into 3 directories
23:16:26 <strcat[m]> anupritaisno1: well I hope this stuff gets a lot better but it's mostly out of our control
23:16:43 <strcat[m]> and for GrapheneOS we'll only ever use AOSP
23:16:51 <strcat[m]> because we care about non-Qualcomm devices too
23:16:54 <strcat[m]> and CAF is just fucked
23:17:27 <anupritaisno1[m]> <strcat[m] "and CAF is just fucked"> Well I'll never use their proprietary compiler
23:17:29 <strcat[m]> I don't understand why there is still vendor stuff in system without proper vendor HALs also
23:17:42 <anupritaisno1[m]> <strcat[m] "I don't understand why there is "> IMS?
23:17:52 <strcat[m]> anupritaisno1: among other things
23:18:02 <anupritaisno1[m]> The 4g stuff that many vendors keep in /system to this date
23:19:05 <anupritaisno1[m]> Well strcat (@strcat:matrix.org) CAF for one is really shit
23:19:14 <anupritaisno1[m]> Every month I merge that CAF tag
23:19:17 <strcat[m]> I wish VoLTE, etc. was just properly Treble abstracted
23:19:20 <strcat[m]> and worked universally
23:19:25 <strcat[m]> I don't understand why it's still so fucked
23:19:27 <anupritaisno1[m]> I have to sit and remove changes that aren't for my device
23:19:28 <strcat[m]> fuck verizon in particular
23:19:34 <anupritaisno1[m]> Before I can merge that tag
23:19:34 <strcat[m]> why does verizon need 20 bloatware apps for VoLTE to work
23:19:40 <strcat[m]> fuck verizon
23:19:47 <strcat[m]> and fuck sprint
23:19:51 <anupritaisno1[m]> It can take a week BTW strcat
23:19:51 <strcat[m]> what is wrong with US carriers
23:20:02 <anupritaisno1[m]> To just merge a CAF tag without breaking your kernel
23:20:25 <cn3m[m]> I only use AT&T been with them for a long time
23:20:37 <strcat[m]> anupritaisno1: I want to support a non-Pixel device at some point but I'd prefer a non-Qualcomm one for some diversity
23:20:42 <strcat[m]> and because Pixels are the best Qualcomm ones anyway
23:20:52 <anupritaisno1[m]> <strcat[m] "anupritaisno1: I want to support"> Hikey 960?
23:20:53 <cdesai> strcat[m]: there's some exynos motorola android one
23:21:01 <strcat[m]> anupritaisno1: we support HiKey and HiKey 960 already
23:21:07 <strcat[m]> they aren't phones
23:21:09 <strcat[m]> and their GPU driver is beyond fucked atm
23:21:15 <strcat[m]> so they boot with black / flashing screen without disabling hardened malloc
23:21:21 <strcat[m]> and I am not investing time in fixing dev board stuff
23:24:42 <anupritaisno1[m]> Well
23:24:43 <anupritaisno1[m]> Exynos then?
23:24:59 <strcat[m]> don't try GrapheneOS on HiKey if you have epilepsy
23:25:21 <cdesai> manta was the best google device ever made
23:25:37 <cdesai> https://android.googlesource.com/device/samsung/manta/+/refs/heads/master/proprietary-blobs.txt
23:25:40 <anupritaisno1[m]> I don't
23:25:40 <radixed9[m]> Do any devices get patches quickly enough?
23:25:40 <anupritaisno1[m]> But thanks for the concern
23:25:57 <cdesai> just look at this. firmware, drm, graphics. done
23:26:17 <anupritaisno1[m]> cdesai (@freenode_cdesai:matrix.org): can Google start making devices with some actual specc soon?
23:26:43 <anupritaisno1[m]> The fact that I can run out of 12gb ram without a memory leak makes me wonder what the 6gb guys on pixels do
23:26:59 <cdesai> I personally have never felt a lack of RAM on my phones
23:27:00 <anupritaisno1[m]> My current usage sits at 7 GB active used
23:27:06 <anupritaisno1[m]> And 3 GB cache
23:27:27 <anupritaisno1[m]> Gonna get 16gb on phone /s
23:27:32 <cn3m[m]> You don't need that much
23:27:42 <anupritaisno1[m]> <cn3m[m] "You don't need that much"> Is that a challenge?
23:27:55 <anupritaisno1[m]> BTW yes extreme case
23:28:09 <anupritaisno1[m]> I have like a 100 tabs open pointing to github
23:28:15 <anupritaisno1[m]> All huge pages
23:28:25 <anupritaisno1[m]> If I close all apps I fall to like 3gb
23:29:40 <cn3m[m]> anupritaisno1: well as long as you port pixel 4 you'll be my hero and I'll even say CAF might not be the top 5 biggest issues with lineage out of respect
23:29:43 <cn3m[m]> And I'll say you need that much RAM
23:29:46 <cn3m[m]> Fair trade?
23:30:17 <spaceinfinite[m]> Plus 1
23:32:15 <cn3m[m]> strcat: do we have a new version of the technical overview?
23:37:39 <anupritaisno1[m]> strcat anyway
23:37:49 <anupritaisno1[m]> Nah wrong tag
23:37:58 <anupritaisno1[m]> cn3m: can you get me 2 testers?
23:38:17 <anupritaisno1[m]> I can fix the android-prepare-vendor issue if I have 2 testers
23:38:30 <anupritaisno1[m]> Well what I'll do is simple
23:38:58 <anupritaisno1[m]> For the first approach I'll introduce line by line until WiFi breaks
23:39:23 <anupritaisno1[m]> For the second approach I'll go in a binary search manner
23:40:04 <anupritaisno1[m]> Assume the bad change is in half of the code, find that half and then narrow it down
23:40:05 <cn3m[m]> anupritaisno1: I'll try
23:40:19 <anupritaisno1[m]> I can do 2 simultaneous builds at once btw
23:40:26 <cn3m[m]> I got the full mod queue history I could try to ask them to participate
23:41:03 <cn3m[m]> I don't see a problem with that if strcat approves
23:41:33 <cn3m[m]> headgas should be able to help test
23:41:54 <cn3m[m]> Could also post on /r/GooglePixel looking for Pixel 4 testers
23:43:05 <headgas[m]> Test what?
23:43:39 <headgas[m]> Remember im a newb haha
23:44:11 <anupritaisno1[m]> <headgas[m] "Test what?"> Well I make a build with the issue
23:44:19 <anupritaisno1[m]> Report if the issue occurs
23:44:20 <strcat[m]> cn3m: no don't have a new version
23:44:31 <anupritaisno1[m]> Then I'll send a build without
23:44:43 <anupritaisno1[m]> From that point on I'll introduce changes one by one
23:44:44 <strcat[m]> cn3m: it's too hard to maintain it and stuff ends up happening upstream
23:44:47 <anupritaisno1[m]> Until WiFi breaks
23:44:49 <strcat[m]> so is it supposed to document our changes
23:44:53 <strcat[m]> or the security of the OS
23:45:01 <strcat[m]> I'd rather not try making a technical overview again
23:45:10 <cn3m[m]> Understood
23:45:23 <strcat[m]> it was incomplete and it trended towards saying stuff was upstream
23:45:27 <strcat[m]> or obsolete
23:45:28 <anupritaisno1[m]> <strcat[m] "I'd rather not try making a tech"> BTW would you want LTS merged or individual cherry pick?
23:45:31 <strcat[m]> and didn't cover all the new things
23:45:42 <strcat[m]> anupritaisno1: clean cherry-pick redone each month ideally
23:45:45 <anupritaisno1[m]> I'm fine with both
23:45:49 <strcat[m]> but don't worry about that yet
23:45:49 <anupritaisno1[m]> Okay
23:45:51 <strcat[m]> it's for later
23:45:58 <strcat[m]> needs some thought and good scripting
23:46:08 <strcat[m]> we have a lot of things to take care of first basically
23:46:15 <cn3m[m]> Copperhead's is now outright false
23:47:05 <anupritaisno1[m]> I personally prefer git merge btw
23:47:24 <strcat[m]> cn3m: it was ever since they forked my legacy code
23:47:32 <strcat[m]> cn3m: they lie about a ton of stuff
23:47:33 <strcat[m]> on the site
23:47:38 <anupritaisno1[m]> With cherry-pick you must deal with a bunch of shit like --keep-redundant-commits and then rebase to remove the blank commits
23:47:53 <strcat[m]> but yeah they just left around my old documentation even though it was never for their fork
23:47:54 <cn3m[m]> strcat: Can I invite people who asked for Pixel 4 support on the subreddit on the past week to test with anupritaisno1
23:47:57 <strcat[m]> and they added DRM / tracking to Updater
23:48:08 <anupritaisno1[m]> And there are many where google/caf merged LTS before LTS did
23:48:14 <madaidan[m]> <cn3m[m] "Copperhead's is now outright fal"> They can't even name a single hardening feature; I asked.
23:48:16 <anupritaisno1[m]> <strcat[m] "and they added DRM / tracking to"> DRM?
23:49:08 <anupritaisno1[m]> Well OTA encryption is something I've always wanted to do
23:49:17 <cn3m[m]> I'm sure that's why they don't sell to individuals anymore since one of us would buy one and sue them
23:49:42 <anupritaisno1[m]> Along with attestation baked right into OTA
23:49:51 <anupritaisno1[m]> Like Samsung's
23:50:11 <anupritaisno1[m]> So if a modification is detected the system will request a full flash from recovery
23:56:52 <cn3m[m]> madaidan.: I love your comment on their stalkerware post
23:57:14 <madaidan[m]> <cn3m[m] "madaidan.: I love your comment o"> That got me banned lol
