00:00:05 <strcat[m]> it's not one of the Android APIs
00:00:45 <strcat[m]> Scott: we don't currently add configuration / code to enable that
00:01:07 <`Scott`[m]> Okay, thanks again.
00:03:41 <`Scott`[m]> <strcat[m] "traditional Android push notific"> Yeah, bad choice of words on my behalf. I meant GCM or FCM.
02:22:56 * joehandcockandja uploaded an image: Screenshot_20201204-212228.png (158KiB) < https://matrix.org/_matrix/media/r0/download/matrix.org/tQBmbnnwFmaEyyGLHUULfryg/Screenshot_20201204-212228.png >
02:23:04 <joehandcockandja> Anyone notice this when taking a screenshot then hitting the edit button?
02:23:27 <joehandcockandja> It pulls up all blurry. Maybe just a problem upstream? Maybe just my phone
02:23:52 <joehandcockandja> Not a huge deal in any case...
03:24:03 <hasnoname[m]> Do you guys use any device admin app to locate a lost device or erase remotely?
03:24:14 <rny> no
05:14:02 <strcat[m]> joehandcockandjames: the AOSP gallery app just sucks
05:14:13 <strcat[m]> joehandcockandjames: think the edit preview is just super low res
05:14:19 <strcat[m]> could increase it
05:49:03 <Thatcher[m]> Is there a way to fully reveal or hide  app names below their respective icons on the homescreen?
05:50:02 <Thatcher[m]> All my app names display like this: RedRe... or KeePa...
06:22:40 <brenneke[m]> <Thatcher[m] "Is there a way to fully reveal o"> Nova launcher.
06:29:11 <brenneke[m]> Allows you to rename to whatever you want or choose no text.
07:55:43 <paski> hi
15:36:42 <johnidahoe[m]> hello any news to supporting pixel 4a 5G or pixel 5 devices?
15:38:38 <Lia[m]> Relevant recent tweet: https://nitter.net/DanielMicay/status/1335242518808682498#m
15:39:35 <johnidahoe[m]> ok thank you
16:41:35 <strcat[m]> https://grapheneos.org/features started work on this new page, not yet surfaced via the menu on other pages since it's very early in the process of being made
16:42:09 <strcat[m]> probably missed important things and doesn't go into much detail (probably want to just link to other places going into more detail)
16:42:38 <strcat[m]> it does NOT cover all the historical features we've had, ONLY current ones, historical belong in a separate place
16:43:21 <strcat[m]> many features we've implemented have become obsolete due to AOSP improvements, and a bunch of older features also need to be reimplemented, so that stuff isn't covered there
16:49:03 <arpysco[m]> I wish that page had been out when I was researching GOS, would have saved me a lot of time! Thanks for writing it up!
16:50:40 <Golli[m]> <strcat[m] "https://grapheneos.org/features "> This is really good for 3 main reasons:
16:53:33 <strcat[m]> the releases page also has an atom feed now
16:53:41 <strcat[m]> for another way of  following the release announcements
16:53:45 <strcat[m]>  * for another way of following the release announcements
16:54:04 <strcat[m]> just provide https://grapheneos.org/releases to a feed reader
16:54:45 <r0tt0r[m]> i ran several days mitm network sniff and not one connection came up that had no justification. i also run the update process and could not find anything suspicious nor identifying informations beeing send. well done
17:03:49 <somenerd[m]> > https://grapheneos.org/features started work on this new page, not yet surfaced via the menu on other pages since it's very early in the process of being made
17:03:49 <somenerd[m]> This looks quite nice. It'll also help differentiate GrapheneOS easier.
17:03:54 <somenerd[m]>  * > https://grapheneos.org/features started work on this new page, not yet surfaced via the menu on other pages since it's very early in the process of being made
17:03:54 <somenerd[m]> This looks quite nice.
17:54:36 <Baloo> thanks for that page, I didn't know there was a keypad scramble that's very cool
18:10:18 <edgar1[m]> I head graphene is going to have its own app repository, is this true?
18:14:50 <strcat[m]> yes but there's not going to be much there
18:14:51 <strcat[m]> and it's for use on GrapheneOS
18:18:46 <edgar1[m]> yes I know it’s for grapheneOS, which apps is it going to have?
18:19:43 <anupritaisno1[m]> edgar1: not much
18:23:38 <edgar1[m]> Yes but have they been announced or listed somewhere?
18:23:40 <hypokeimenon[m]> Minimal is best
18:39:25 <madaidan[m]> <edgar1[m] "yes I know it’s for grapheneOS, "> Apps developed as part of GrapheneOS such as Auditor or PdfViewer as well as a few select third party apps that meet the security requirements.
18:39:58 <madaidan[m]> <edgar1[m] "Yes but have they been announced"> A list of apps hasn't been made yet.
18:47:39 <joehandcockandja> I vote for Magisk Manager
18:49:03 <joehandcockandja> I'm joking btw
18:49:25 <strcat[m]> it's for shipping out-of-band updates to apps with release cycles not aligned with AOSP / GrapheneOS
18:49:43 <strcat[m]> and so we can ship some things that we don't want to install by default like our own builds of microG
18:56:17 <edgar1[m]> Will it have a 2fa app like aegis or andotp?
19:13:03 <strcat[m]> no, unless we write our own U2F/FIDO2 app based on the secure element in the phones
19:13:38 <strcat[m]> edgar1: it's not for distributing all kinds of third party apps only things we bundle or that need to be signed with our keys
19:13:44 <strcat[m]> at least in the beginning
19:20:23 <strcat> Baloo: it's primarily there for future use
19:20:38 <strcat> Baloo: for 2-factor fingerprint authentication, where you'll be able to optionally set a PIN for fingerprint unlock
19:21:15 <madaidan[m]> <joehandcockandja "I vote for Magisk Manager"> I vote for Xposed — it's a necessary requirement for any secure system.
19:21:50 <strcat[m]> the problem with sarcasm is a lot of people aren't going to get it
19:22:35 <anima[m]> now if you have to explain sarcasm ..
19:27:34 <niky> hello everyone , hope you all are doing well..
19:28:18 <niky> is it possible to have a shared file between the 2 users on gos ?
19:29:22 <niky> an example would be : having a secondary user with gcam and whatsapp wanting to share a pic or audio from that user to the main user (admin)
19:34:18 <hypokeimenon[m]> <madaidan[m] "I vote for Xposed — it's a neces"> AnonymouseJoker flashbacks
19:52:27 <Baloo> strcat: 2-factor fingerprint will be great. Very secure. I like that better than a long password to put in every time
19:52:32 <Baloo> thanks for all of the work
19:53:46 <strcat[m]> the idea is that you'd always set a strong passphrase as the primary unlock method
19:54:35 <Baloo> When it comes to security, which is more secure, the traced shape or the long password?
19:54:43 <strcat[m]> password
19:54:45 <strcat[m]> pattern unlock is bad
19:54:48 <strcat[m]> we may remove support for it
19:55:01 <Baloo> good to know.
19:55:12 <anima[m]> you can guess it with finger tracing
19:55:31 <strcat[m]> the main issue is that the complexity is quite low
19:55:33 <strcat[m]> comparable to a weak PIN
19:55:40 <strcat[m]> except it encourages really common patterns too
19:55:43 <strcat[m]> so it's all around really bad
19:59:49 <Pratyush[m]> <niky "an example would be : having a s"> I guess having saprate device is more better option but here is what i have done in past.
20:00:20 <strcat[m]> that's not the same multi-user approach
20:00:27 <strcat[m]> that's about an ancient, old version of Android
20:00:51 <edgar1[m]> strcat: how secure is a random 6 digit pin? On a pixel with graphene
20:01:12 <Pratyush[m]> <strcat[m] "that's about an ancient, old ver"> I just try to check online available resources
20:01:55 <strcat[m]> edgar1: you depend on the security of the secure element to throttle attempts to break it against a sophisticated attacker
20:02:00 <strcat[m]> with a 6 digit PIN
20:02:28 <strcat[m]> a random 6-digit PIN is secure if the secure element is not compromised
20:02:41 <strcat[m]> a strong passphrase is simply secure without relying on the hardware
20:02:51 <Pratyush[m]> <edgar1[m] "strcat: how secure is a random 6"> Bruteforceing 6 digit PIN is an easy task but due to limitations on how many pin you can try currently it's nearly impossible to do in real device
20:03:20 <strcat[m]> the secure element enforces exponentially increasing throttling for attempts
20:03:22 <strcat[m]> in hardware
20:03:32 <strcat[m]> and the secure element firmware cannot be updated until the owner account has authenticated
20:03:34 <Pratyush[m]> <strcat[m] "a strong passphrase is simply se"> And that's why you should always go for secure radom unlreted passphrase
20:04:03 <strcat[m]> so a random 6-digit PIN is secure as long as the secure element (which implements the Weaver feature doing this) remains uncompromised
20:04:10 <strcat[m]> if you don't want to rely on that, you need a strong passphrase
20:06:01 <M0xC0ncord[m]> strcat: What are you thoughts on wordlists and diceware to generate passphrases?
20:07:23 <strcat[m]> seed phrases are a great concept but they're not really that easy to quickly type for a given amount of entropy
20:08:28 <edgar1[m]> strcat: I see, so the hardware in question plays a big role when it comes to pin security. How does a pixel 4a compare to a modern iphone on this regard? Better or worse?
20:09:37 <strcat[m]> similar, likely better
20:09:48 <strcat[m]> fairly similar approach though
20:10:27 <strcat[m]> edgar1: AOSP supports Weaver which is a generic protocol for this
20:10:40 <strcat[m]> on a Pixel 3 and later, the Titan M secure element implements Weaver
20:11:10 <strcat[m]> the way it works is that it generates a high entropy random token (a key, essentially) to go along with your lock method
20:11:30 <strcat[m]> it derives an authentication token via hashing from your lock method for use with Weaver
20:11:54 <strcat[m]> edgar1: the security chip stores a mapping of auth token -> random token inside it
20:12:29 <strcat[m]> edgar1: the random token is used as an extra input for key derivation (alongside your lock method and the other inputs which I won't go into atm)
20:12:52 <strcat[m]> edgar1: the secure element has a a secure internal monotonic timer
20:12:58 <strcat[m]>  * edgar1: the secure element has a secure internal monotonic timer
20:13:20 <strcat[m]> and it implements exponentially increasing throttling for attempts to retrieve the random token by providing the auth token
20:13:36 <strcat[m]> so this provides exponentially increasing hardware-based rate limiting on decryption attempts
20:13:40 <strcat[m]> it quickly goes up to 1 day per attempt
20:14:16 <strcat[m]> you can try it out, it takes a bit to start ramping up due to the exponential approach and goes quickly up to 1 day
20:14:35 <strcat[m]> so you wouldn't notice it in regular use even typing a password wrong many times
20:14:50 <strcat[m]> you'd notice the initial delays, but you wouldn't release how quickly it ramps up
20:14:57 <strcat[m]>  * you'd notice the initial delays, but you wouldn't realize how quickly it ramps up
20:15:22 <strcat[m]> edgar1: there is other hardware support for improving encryption, this is just the role that the secure element plays
20:15:56 <strcat[m]> it provides this little bonus feature with a lot of value, it's a hardware implementation of the rate limits previously done by the OS essentially
20:16:29 <strcat[m]> edgar1: and this is always enabled, and it's per-profile since encryption is per-profile
20:18:02 <strcat[m]> edgar1: the security chip is designed to have a tiny amount of attack surface and to avoid common sources of vulnerabilities via some kind of very simple VM to run code
20:18:14 <strcat[m]> edgar1: and has a lot of physical anti-tampering stuff
20:18:34 <strcat[m]> if you use a strong passphrase you avoid relying on this but you still benefit from it
20:18:58 <strcat[m]> random 6 digit PIN is secure as long as the security chip is not compromised
20:19:28 <strcat[m]> which could not be said about it before the Pixel 2 (which introduced an NXP security chip for this, later replaced by the Titan M in the Pixel 3 which provides much more than this feature)
20:20:42 <strcat[m]> strong key derivation does no good with a starting point as weak as a 6 digit PIN, same with hardware-bound / hardware-accelerated key derivative, 6 digit PIN is too weak, the only thing that makes it secure (in a case where the OS is compromised) is the secure element enforcing an exponentially increasing rate limit
20:21:21 <strcat[m]> the key derivation stuff makes passphrases stronger than they would otherwise be
20:21:39 <strcat[m]> but you need to have something decent as a starting point for the key derivation to matter
20:21:50 <strcat[m]> and the key derivation has to be tuned to have a reasonable delay that doesn't annoy users
20:23:57 <strcat[m]> Weaver is the main feature we'd be missing if we simply partnered with a company to produce a high quality Snapdragon device based on a reference design, with a focus on security, because as far as I know the Snapdragon SPU doesn't provide a secure timer for Weaver - not sure if that has been addressed for the upcoming generation
20:23:59 <edgar1[m]> Interesting. The encryption is much better than anything on desktop. Which is great because typing a long passphrase on mobile is a pain in the ass.
20:24:28 <strcat[m]> edgar1: there is a combination of strong key derivation + hardware acceleration for it + hardware-bound key derivation + Weaver
20:24:40 <strcat[m]> edgar1: the hardware-bound key derivation depends on the SoC manufacturer making a good implementation
20:25:19 <strcat[m]> edgar1: if it sucks, it doesn't make things worse, there's scrypt in software anyway
20:25:29 <strcat[m]> edgar1: it always uses a mix of stuff
20:25:53 <strcat[m]> edgar1: https://source.android.com/security/encryption/file-based#key-derivation
20:26:11 <strcat[m]> this is how the per-user key encryption key (used to encrypt the per-user disk encryption key) is derived
20:26:37 <strcat[m]> edgar1: so basically Weaver is a hardware implementation of the gatekeeper token part of this
20:26:46 <strcat[m]> edgar1: optional hardware feature for Android devices
20:27:47 <strcat[m]> edgar1: so the OS does part of this (scrypt based derivation, fallback software implementation of making key deletion work properly), and it deals with Weaver, and then the TEE does the rest via SoC security features
20:28:11 <strcat[m]> edgar1: the security chip can reliably delete the tokens in Weaver
20:28:25 <strcat[m]> edgar1: so that's the most secure portion of how keys are wiped when deleting a profile or doing a factory reset
20:28:49 <strcat[m]> but there's also this 16 KB file that's hashed and used as an input for key derivation by the OS
20:28:51 <strcat[m]> to avoid relying on hardware working properly
20:29:19 <strcat[m]> edgar1: basically way this is done is to take maximum advantage of SoC security features + secure element features while also having a strong software implementation to avoid trusting those to be done well
20:31:24 <strcat[m]> edgar1: the encryption itself is filesystem-based full disk encryption where there's a low-level early boot key used to encrypt basic fs metadata and data outside profiles (like installed apps), and then the per-profile keys based on their credentials (used to encrypt all the file names and data inside profiles)
20:31:56 <strcat[m]> if we really wanted, we could add a boot passphrase for the low-level key but it would be little use since the whole point is sensitive data is inside the profiles
21:37:53 <naribia> hello everyone
21:38:00 <naribia> any ETA for pixel 5 support?
21:47:15 <strcat[m]> no
21:47:20 <strcat[m]> no one has stepped up to develop it
21:47:25 <strcat[m]> devices need device maintainers
21:47:47 <strcat[m]> if it's started today, it's not going to take longer than if it's started in 6 months
21:47:58 <strcat[m]> what matters is that people capable of doing it step up to develop and maintain it
21:50:05 <lodtank> how small is the graphene team? is it mostly a one man show?
21:52:07 <strcat[m]> no
21:52:58 <strcat[m]> 2 full time developers right now, ~6 or so regular contributors that are part of the development team
22:03:40 <lodtank> thx
22:18:03 * Pratyush[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/XmzKThdnxRlxXSXukKAncfUs/message.txt >
22:51:11 <xi79> Hello GOS Team
22:51:49 <xi79> Can I request a build for Samsung A90 5G
22:56:15 <joehandcockandja> Lmao
23:12:22 <edgar1[m]> @freenode_xi79:matrix.org: pixels only
