00:02:38 <snowfur[m]> <redibc[m] "Do you think the nsa tries to br"> Well they probably try to break GrapheneOS but its a lot harder to do then to hack Stock Android and IOS also if they want to hack you they'll probably will
00:03:23 <redibc[m]> What are the methods they can use to break graphene currently
00:04:52 <alex-resist_> This is not the right place for speculation
00:05:20 <snowfur[m]> <redibc[m] "What are the methods they can us"> The NSA keeps everything secret so it would be hard to know that (expect if you got access to their files in some ways but I doubt that)
00:07:59 <snowfur[m]> * Well they probably try to break GrapheneOS but its a lot harder to do then to hack Stock Android and IOS also if they want to hack you they'll probably will (which they may not be able to currently)
00:08:13 <alex-resist_> If you want to research what police departments are actually using, search for Cellebrite's UFED, but that is off-topic here
00:11:01 <snowfur[m]> * As long as the malware isn't on the hardware then yes
00:29:14 <renlord[m]> <redibc[m] "What are the methods they can us"> coerce the user into unlocking the phone
00:29:20 <renlord[m]> or phishing
00:30:21 <redibc[m]> What about if they had physical access to it? Can anything be installed or can they break the password easy?
00:30:39 <renlord[m]> <redibc[m] "What about if they had physical "> No
00:31:54 <renlord[m]> a really advanced technique i read is, obtained while phone unlocked, flash freeze RAM to retain the states persistently and bring to a lab for extraction.
00:32:11 <renlord[m]> but you must be pretty high up on a wanted list to warrant this
00:32:47 <bend[m]> https://github.com/Peter-Easton/GrapheneOS-Knowledge/blob/master/GrapheneOS-Security-Q%26A.md
00:33:22 <bend[m]> Someone posted this link a couple of days ago and I found it had a lot of useful information redibc
00:33:31 <renlord[m]> http://citpsite.s3-website-us-east-1.amazonaws.com/oldsite-htdocs/pub/coldboot.pdf
00:33:50 <renlord[m]> if paranoid users are interested ^
00:34:11 <renlord[m]> sorry, we cant beat the laws of thermodyanmics
00:34:41 <rosebushactivism> Paranoid users won't open a PDF
00:34:49 <redibc[m]> Yea you are talking about a cold boot extraction right
00:35:10 <alex-resist_> That paper was written for laptops, it's probably 1000 times more difficult to remove RAM from a phone and install it somewhere else while keeping the low temperatures
00:35:52 <renlord[m]> :shrugs: i imagine an expert can de-assemble quite quickly if they practiced
00:36:36 <renlord[m]> the point is that these vectors exist.
00:39:11 <madaidan[m]> <renlord[m] "a really advanced technique i re"> Cold boot attacks aren't really viable, especially when it comes to modern phones. RAM usually clears within seconds. The attacker would have to rip out the RAM sticks from the phone and stick them inside a freezer all within a few seconds and without the user noticing. GrapheneOS also zeroes memory after it's freed which makes this even harder. Cold boot attacks are
00:39:11 <madaidan[m]> pretty circumstantial.
00:41:21 <renlord[m]> good points
00:44:15 <alex-resist_> The idea is of course to freeze the RAM or the entire phone before turning it off and removing the RAM, but it's still almost impossible to perform. Much more difficult than removing the RAM sticks from a Thinkpad
00:44:38 <anonhat[m]> I recall watching a spy show where the protagonist used an upside down canister of compressed air to freeze laptop RAM prior to removing it for a cold boot attack. But on a phone, where RAM would have to be de-soldered, the heat from that process would probably make it very difficult.
00:46:57 <anonhat[m]> Especially since compressed air propellants are usually flammable.
00:47:35 <cicadasolver[m]> It seems to me that guys have misconceptions about thermodynamics
00:49:00 <cicadasolver[m]> Tho explaining that would take too much time and words. And gonna go to off-topic channel.
00:49:00 <cicadasolver[m]> So I'm not gonna do that
00:49:40 <cicadasolver[m]> * It seems to me that you guys have misconceptions about thermodynamics
00:51:33 <renlord[m]> <cicadasolver[m] "It seems to me that guys have mi"> i'll admit that i probably have a misconception. I'm not a physics major.
00:51:51 <renlord[m]> you can ping me privately to correct my misconceptions.
01:00:42 <redibc[m]> What about them installing hardware on the phone or a computer without your knowledge before you get it. I heard about tao doing that
01:02:48 <anonhat[m]> Buying from a local store can help defeat that type of targeted attack.
01:03:35 <rosebushactivism> Those already have the big box backdoors in. No specialized hardware either.
01:10:02 <lvnilesh[m]> I am new here. Hi. Appreciate if you can point me to documentation with the best practice to install known good secure apps on GrapheneOS. Thanks.
01:11:17 <rosebushactivism> Verify the application from the vendor, usually via OpenPGP signatures, although GrapheneOS uses signify of OpenBSD project
01:12:57 <lvnilesh[m]> ok step 1. Verify sign or hash from creator/vendor. Step 2. put on a USB drive. Step 3. Sideload via USB drive onto GrapheneOS without the need of any app store.
01:13:02 <lvnilesh[m]> Did I get it right?
01:13:08 <lvnilesh[m]> Thanks.
01:14:47 <lvnilesh[m]> or did I overlook something critical?
01:16:58 <rosebushactivism> Yes, if your GrapheneOS isn't verified correctly though, it wouldn't be that important as it would be compromised at a system level
01:17:15 <rosebushactivism> No USB device is needed, you can sideload on the device
01:17:44 <lvnilesh[m]> true. I verified GrapheneOS before install using signify.
01:18:08 <lvnilesh[m]> USB drive might make it easy to store my personal collection of trusted apps.
01:18:11 <rosebushactivism> There are apps that can help manage PGP verification, I would start with the verification of F-Droid, an app store, if your threat model allows it.
01:18:26 <lvnilesh[m]> :)
01:18:29 <lvnilesh[m]> Thanks
01:18:30 <lvnilesh[m]> Another topic: I had to manually apply OTA update via USB cable. I was expecting OTA update to arrive via WiFi but it wouldn't for some reason. It is fair to expect OTA updates over the WiFi air?
01:18:36 <rosebushactivism> You should save installers if you want to yes, but no need to use it to sideload
01:19:06 <lvnilesh[m]> how will the installer arrive on the phone in that case without USB?
01:19:17 <lvnilesh[m]> probably a silly question
01:19:49 <rosebushactivism> You can download APK directly from F-Droid, or if the vendor supplies an APK, you can just save that one
01:19:56 <anon_reee> anyone here installed Tails? looking for hashes to verify the .iso file
01:20:08 <anon_reee> sorry, I mean Qubes OS *
01:20:45 <rosebushactivism> I also don't know if GrapheneOS can update itself, I'd assume it can be, but maybe the infrastructure is not configured by the developer
01:20:45 <lvnilesh[m]> First time hearing about F-Droid. Now exploring. Looks interesting.... YAY!
01:21:34 <rosebushactivism> Follow the first step of verifying F-Droid itself and there should be no worries, it doesn't seem like you have a strict threat model.
01:21:51 <lvnilesh[m]> no strictness. I am just a dude. experimenting
01:22:16 <rosebushactivism> anon_reee: I have the verified PGP keys, I will download the hash and check and relay them to you
01:22:17 <lvnilesh[m]> with an interest in learning to be strict
01:22:19 <lvnilesh[m]> when needed
01:22:25 <rosebushactivism> If you trust me, of course
01:22:28 <madaidan[m]> <anon_reee "sorry, I mean Qubes OS *"> They provide PGP signatures and hashes on the download page. Also, totally off-topic. This group isn't for Qubes support.
01:22:58 <lvnilesh[m]> Of course, Verify. Don't trust. Indeed.
01:23:10 <rosebushactivism> Also probably a good idea to look in a more Qubes focused room as well
01:25:34 <lvnilesh[m]> OTA updates would need backend infrastructure that the developers may not have provided. So the burden is on the user to manually apply OTA updates via USB cable as and when updates arrive.
01:26:11 <rosebushactivism> I was sure Android could also flash itself from a file, but maybe a computer is needed to assist
01:27:02 <lvnilesh[m]> Thanks a lot @rose
01:27:14 <lvnilesh[m]> Thanks a lot rosebushactivism:
01:32:11 <anon_reee> madaidan[m]: they do, but they say to not trust the website and verify it from multiple sources. the website could be compromised
01:32:25 <anon_reee> sorry, I'll switch to the other channel
01:54:33 <rosebushactivism> As a follow up, there may not actually be an application for verifying PGP signatures on F-Droid, I thought there would be, it still has other good apps. I think you could probably get a terminal emulator like termux and run something like gpg if you can build it for Android, though I'm also not sure how the filesystem access of the terminal emulators work.
01:55:45 <rosebushactivism> OpenKeychain still seems like a very powerful app.
02:01:29 <rosebushactivism> Maybe I'm wrong about being wrong, and OpenKeychain actually can verify files, it does seem like an odd omission for a PGP app, but I saw a GitHub issue saying it lacked this feature, but other sources give it the feature in the description.
02:44:14 <anonhat[m]> I love conflicting information about potentially important software.
02:57:22 <louipc> anonhat[m]: what do you love about it
08:32:33 <bartsimpson1993[> Has anyone with newpipe been directed to a Github webpage to download an update?
08:32:33 <bartsimpson1993[> I was directed to github webpage to download an update the other day and it warned me the signing certificate was different etc..
08:33:18 <projectmoon> Fdroid cert different than the GitHub cert
08:33:32 <projectmoon> Though they have started building with the same cert on fdroid
09:17:10 <anonhat[m]> The github notice is verified. It's genuine.
10:09:44 <dazinism> Newpipe has its own fdroid repo that gets updates quicker than the fdroid repo.
10:10:53 <dazinism> May have to reinstall if you've already got it from fdroid, as it could be signed with a different cert.
10:12:04 <dazinism> As mentioned its now available from the fdroid repo with Newpipes cert,but also different build with an fdroid cert
10:13:31 <dazinism> lvnilesh: check out https://hub.libranet.de/wiki/graphene-os/wiki/Apps
10:23:10 <stuux[m]> Hello
10:23:31 <stuux[m]> I am trying to reset my pixel 3a and getting the following error message:
10:23:47 <bartsimpson1993[> So I don't have to worry about it.
10:23:47 <bartsimpson1993[> I'm assuming other people have had the same thing happen..
10:23:49 <stuux[m]> E: can´t send spi message: Try again
10:24:02 <stuux[m]> is this something to worry about?
10:26:36 <stuux[m]> this message appears when resetting within the recovery menu
10:26:43 <CarpeDiem[m]> If you can't reset dev I'd day its a doozy
10:26:57 <CarpeDiem[m]> Why not reset in settings?
10:27:50 <stuux[m]> well it says Data wipe complete and it seems to reset the device
10:28:03 <stuux[m]> but i am just unsure if this is intended behaviour
10:28:32 <stuux[m]> have not had this before
10:28:41 <CarpeDiem[m]> If its reset to factory gos I think ur OK
10:29:04 <CarpeDiem[m]> Maybe a recent update specific bug
10:29:16 <stuux[m]> and when resetting from the settings it shows a new resetting animation which i also have not seen before
10:29:28 <CarpeDiem[m]> I dunno I've had too many beers tonight to compute properly honestly
10:29:39 <CarpeDiem[m]> Oh ???
10:29:59 <CarpeDiem[m]> Is this a newly updated android 11 device?
10:30:26 <stuux[m]> <CarpeDiem[m] "Is this a newly updated android "> yes, newest gos
10:30:45 <CarpeDiem[m]> I think ur Gucci.
10:31:01 <CarpeDiem[m]> I reset mine and the reset thing changed
10:31:05 <CarpeDiem[m]> As in the animation right ?
10:31:15 <stuux[m]> yes
10:31:25 <stuux[m]> it s like a circle
10:31:29 <CarpeDiem[m]> Yea seemslegit.jpg
10:31:35 <CarpeDiem[m]> Its a11 mate
10:31:39 <stuux[m]> ok
10:31:42 <stuux[m]> thanks
10:31:53 <CarpeDiem[m]> NP have a good nyte/day
10:31:58 <CarpeDiem[m]> Me needs sleep lel
10:32:13 <stuux[m]> good night 😴
10:59:18 <anonhat[m]> I'm an intermediate level infosec professional with little programming knowledge, but I want to contribute to grapheneos. Eventually maybe even with commits. Where do you guys recommend I start?
11:11:33 <strcat[m]> start by learning how to sync and build the whole OS
11:11:40 <strcat[m]> https://grapheneos.org/build
11:12:21 <strcat[m]> learn how to do signed, production builds by following the full guide and also try doing development builds (i.e. not using target-files-package or signing)
11:12:57 <strcat[m]> and then you can choose an area to start contributing
11:13:36 <anonhat[m]> Is it all written in C/C++?
11:14:23 <anonhat[m]> I know the kernel is. *shivers*
11:15:39 <strcat[m]> no
11:16:23 <strcat[m]> mostly Java that's being replaced with Kotlin
11:16:56 <strcat[m]> Android Studio can automatically convert Java to Kotlin that's generally shorter than the Java it was translated from despite not being at all idiomatic Kotlin
11:17:01 <louipc_> anonhat[m]: infosec does that mean pentesting?
11:17:11 <strcat[m]> I don't know if they're using the automatic tooling for the AOSP transition
11:17:31 <strcat[m]> anonhat: low-level code is mostly C++ (other than external projects that are C)
11:17:41 <strcat[m]> Android itself uses C++17 for most low-level code
11:17:58 <louipc_> can u fuzz/hammer grapheneos from all angles and find vulns :)
11:18:01 <strcat[m]> although it is mostly not brand new code so don't expect anything but newer things to be at all modern C++
11:18:02 <anupritaisno1[m]> [anonhat](https://matrix.to/#/@anonhat:matrix.org) just pm me for help with getting started
11:18:29 <strcat[m]> https://grapheneos.org/build#programming-languages is our own guidelines
11:18:34 <strcat[m]>  * https://grapheneos.org/build#programming-languages are our own guidelines
11:18:35 <anupritaisno1[m]> <strcat[m] "Android Studio can automatically"> Actually it's pretty bad
11:18:37 <somenerd[m]> > although it is mostly not brand new code so don't expect anything but newer things to be at all modern C++
11:18:37 <somenerd[m]> is knowledge of rust needed / preferred?
11:18:51 <anupritaisno1[m]> It doesn't convert correctly [strcat](https://matrix.to/#/@strcat:matrix.org)
11:19:00 <somenerd[m]> (it says for new code so I guess nvm)
11:19:01 <anonhat[m]> <louipc_ "anonhat: infosec does that mean "> System auditing and secure network design, mostly.
11:19:43 <louipc_> auditing cool
11:21:27 <anonhat[m]> <strcat[m] "https://grapheneos.org/build#pro"> I've heard Go is pretty security oriented. Would that be considered at some point due to its simplicity?
11:21:30 <louipc_> i bet some ppl wouldnt mind seeing an audit of grapheneos
11:22:28 <louipc_> i don't see the point in piling more languages onto the pile
11:22:50 <somenerd[m]> I think gVisor (written in Go) is mentioned in the roadmap
11:23:52 <strcat[m]> louipc_: that would pretty much just be an audit of AOSP
11:23:56 <strcat[m]> unless it's limited to only auditing our changes
11:24:28 <strcat[m]> since 99.99% of the code is AOSP
11:24:35 <anonhat[m]> <louipc_ "i don't see the point in piling "> I just prefer easier stuff. If it accomplishes the same goals as rust, I would prefer Go.
11:24:45 <strcat[m]> (including external projects like Linux)
11:25:01 <louipc_> strcat[m]: quite an undertaking :D
11:25:05 <strcat[m]> anonhat: we don't use Go, there isn't a use case for it in our work
11:25:14 <strcat[m]> Kotlin is a better fit
11:25:31 <somenerd[m]> <strcat[m] "(including external projects lik"> that would take a while
11:25:41 <strcat[m]> it wouldn't make sense to use a less expressive language without official support and without support for calling all of the standard APIs
11:25:52 <somenerd[m]> now it makes sense why Graphene would want to move away from linux
11:26:02 <strcat[m]> and server-side it still makes more sense for us to use Kotlin
11:26:07 <louipc_> anonhat[m]: youre looking to become a coder?
11:26:09 <strcat[m]> somenerd: I suggest reading about the topic
11:26:24 <somenerd[m]> > somenerd: I suggest reading about the topic
11:26:24 <somenerd[m]> which one?
11:26:34 <anupritaisno1[m]> [strcat](https://matrix.to/#/@strcat:matrix.org) let's say I know java, how much time would it take to learn kotlin?
11:26:45 <strcat[m]> the Linux kernel is highly insecure
11:26:50 <strcat[m]> it's written in a low-level, type and memory unsafe language with very lax code review
11:27:04 <strcat[m]> and it's designed as a monolithic kernel which means there are zero internal security boundaries
11:27:08 <strcat[m]> all of the code is fully trusted and privileged
11:27:20 <strcat[m]> a minor bug in miscellaneous, rarely used code is a full compromise of the kernel
11:27:26 <anupritaisno1[m]> I wonder if we can run NT kernel. LOL
11:27:37 <louipc_> lol
11:27:39 <somenerd[m]> what about MINIX?
11:27:42 <strcat[m]> the Linux kernel design is equivalent to having userspace designed as a single process (init) having 100% of the code for the entire OS
11:27:43 <somenerd[m]> lol
11:27:49 <louipc_> hurd
11:28:09 <strcat[m]> people complain about systemd but systemd is far less monolithic than the Linux kernel and covers drastically less functionality
11:28:09 <anupritaisno1[m]> [strcat](https://matrix.to/#/@strcat:matrix.org) anyway how much would it take to learn kotlin if one already knows java?
11:28:43 <strcat[m]> imagine if systemd was not modular (i.e. everything in the systemd process, not all those systemd-* services and various utilities) and contained the whole desktop environment, etc.
11:28:50 <strcat[m]> pretty much the entire OS other than applications in the init process
11:28:53 <anonhat[m]> So how does gvisor fit into your intention to improve sandbox security and replace the kernel?
11:28:56 <strcat[m]> that's legitimately how the Linux kernel is designed
11:29:00 <strcat[m]> and how much code it has
11:29:14 <anupritaisno1[m]> <anonhat[m] "So how does gvisor fit into your"> Well gvisor becomes the one providing the Linux kernel API
11:29:17 <strcat[m]>  * imagine if systemd was not modular (i.e. everything in the systemd process, not all those systemd-* services and various utilities) and contained the whole base OS / application layer, etc.
11:29:26 <anupritaisno1[m]> So the actual insecure kernel is protected
11:29:28 <louipc_> but linux does have modules
11:29:37 <anupritaisno1[m]> <louipc_ "but linux does have modules"> No
11:29:40 <anupritaisno1[m]> Just no
11:29:47 <strcat[m]> louipc_: those are just dynamic libraries, not isolated components
11:29:48 <louipc_> whats modprobe
11:30:03 <strcat[m]> louipc_: Linux kernel modules have no boundaries between them and the core kernel
11:30:09 <anupritaisno1[m]> <strcat[m] "louipc_: those are just dynamic "> Ah yeah and this
11:30:13 <strcat[m]> louipc_: they are just libraries loaded into the kernel
11:30:30 <strcat[m]> the Linux kernel is fully monolithic, supporting dynamic linking doesn't make it any less monolithic in that regard
11:30:46 <louipc_> ok they are modular, but not in an isolated sense
11:31:02 <strcat[m]> louipc_: they're dynamically loaded, not modular in the sense we are talking about
11:31:05 <anonhat[m]> What about xen? It's mentioned in docs as well. Do you plan to have full hardware virtualization of apps? If so, how much overhead would that cause?
11:31:11 <strcat[m]> louipc_: they are dynamically loaded as part of the monolithic Linux kernel
11:31:11 <louipc_> sure
11:31:22 <strcat[m]> they became part of the monolithic kernel as part of loading them
11:31:31 <strcat[m]> they are in the same address space, with no boundaries between anything
11:31:45 <strcat[m]> they have no restrictions on them and they can do whatever they want to the core kernel
11:32:48 <strcat[m]> there is no stable API / ABI provided to modules either, which among other things means you cannot just implement a compatibility layer for Linux kernel modules with a defined scope, etc.
11:33:16 <strcat[m]> louipc_: so, you're probably aware there are projects taking Windows kernel drivers and running them elsewhere in an isolated environment
11:34:01 <louipc_> I think I heard something along those lines. Not really fully aware of it tho
11:34:06 <strcat[m]> you can't realistically do that for Linux kernel drivers because they are not divided from the core kernel beyond being dynamically linked to it
11:34:29 <strcat[m]> there isn't a limit on what they can do once loaded (statically or dynamically)
11:34:37 <strcat[m]> and there is no stable API / ABI for them
11:34:42 <strcat[m]> so it's an arbitrarily moving target
11:34:46 <louipc_> they are bound to the specific kernel
11:34:56 <strcat[m]> yes not just a specific version of the kernel
11:35:05 <strcat[m]> but a specific configuration of that specific version
11:35:09 <louipc_> the build itself
11:35:15 <strcat[m]> and the compiler has to match too
11:35:19 <strcat[m]> exact same compiler version
11:35:21 <louipc_> nice
11:35:38 <strcat[m]> they are libraries but unlike libraries there is no well defined API / ABI
11:35:43 <louipc_> yea thats pretty unmodular
11:35:50 <strcat[m]> yes they are just dynamically loaded
11:35:51 <strcat[m]> that's it
11:35:58 <strcat[m]> they are less modular than dynamic libraries
11:36:01 <strcat[m]> a lot less
11:36:13 <strcat[m]> and like dynamic libraries, they are fully trusted components of that program
11:36:25 <somenerd[m]> wow
11:36:30 <strcat[m]> louipc_: there's little difference between building the code into the kernel vs. as a dynamic kernel module other than it being dynamically loaded and initialized
11:36:32 <somenerd[m]> lot of trust in code
11:36:55 <strcat[m]> the Linux kernel is the most highly trusted component of the OS, it can do anything that the OS can do, it's in control of everything
11:37:02 <strcat[m]> and that applies to the entire thing
11:37:32 <strcat[m]> code in the network stack handling an obscure TCP extension is as trusted as anything else
11:38:06 <strcat[m]> if the programmer there makes a mistake like being off by one in a calculation that can easily end up being a remote code execution vulnerability where the attacker starts out with full privileges
11:38:17 <strcat[m]> since there is no privilege separation, no isolation, no security boundary at all
11:38:24 <projectmoon> <anupritaisno1[m] "[strcat](https://matrix.to/#/@st"> it's very easy to pick up kotlin if you are proficient in java. a week or 2 to be productive i think, and maybe a few weeks after that to achieve full idiomatic enlightenment
11:38:46 <projectmoon> or even less time to be productive, at least that was my experience
11:40:05 <anonhat[m]> All I really know is python.
11:40:44 <somenerd[m]> is the microkernel going to be custom-made or a currently existing one (ex: MINIX, RedoxOS)?
11:41:00 <jpds> anonhat[m]: Go is not security-oriented
11:41:42 <anonhat[m]> I read that it was designed to be memory safe.
11:41:58 <projectmoon> go doesn't really have any particular memory safety features
11:42:05 <SkyFox[privacyto> Go has a garbage collector
11:42:07 <projectmoon> it will happily let you shoot yourself in the foot with null pointers
11:42:10 <jpds> Yes, but that doesn't security-oriented
11:42:26 <jpds> Go is primarily designed with ease of use
11:42:34 <jpds> But anyhow, -offtopic
11:43:18 <anonhat[m]> <anonhat[m] "What about xen? It's mentioned i"> I still want to know this.
11:44:30 <somenerd[m]> isn't there already a sandbox?
11:45:03 <anupritaisno1[m]> There is already a per app VM
11:45:09 <anonhat[m]> Escape is possible due to its design.
11:45:28 <anupritaisno1[m]> Then report those as security vulnerabilities to google
11:45:29 <louipc_> collect your own dang garbage
11:46:37 <anonhat[m]> I mean that it's not full hardware virtualization as xen offers, so by its nature it isn't as secure.
11:47:08 <jpds> And even then, there are plenty of ways of escaping Xen
11:47:20 <somenerd[m]> > And even then, there are plenty of ways of escaping Xen
11:47:20 <somenerd[m]> WAIT WHAT????!?!??!
11:47:21 <anupritaisno1[m]> Anyway that's not the goal really
11:47:22 <anonhat[m]> I agree...
11:47:38 <anupritaisno1[m]> We are not going to design our own VM per app
11:47:50 <jpds> somenerd[m]: Do you realize that you say "wait what" a lot?
11:48:08 <somenerd[m]> > somenerd: Do you realize that you say "wait what" a lot?
11:48:08 <somenerd[m]> I say a lot of things a lot.
11:48:23 <anonhat[m]> <jpds "And even then, there are plenty "> Someone should have told Gordon Freeman that.
11:48:29 <somenerd[m]> (and no "a lot of things" isn't really one of them)
11:49:21 <anonhat[m]> <anupritaisno1[m] "We are not going to design our o"> So what is the purpose of cen/gvisor in the roadmap, then?
11:49:41 <anonhat[m]> * So what is the purpose of xen/gvisor in the roadmap, then?
11:49:50 <somenerd[m]> I think to keep the os in a sandbox
11:50:10 <somenerd[m]> >to leverage it for reinforcing existing security boundaries
11:50:11 <anupritaisno1[m]> <anonhat[m] "So what is the purpose of cen/gv"> To isolate the insecure Linux kernel
11:50:27 <anupritaisno1[m]> You are just misunderstanding what we want to do inside gvisor
11:51:05 <somenerd[m]> and then replace linux as well? (with say a ,microkernel)
11:51:22 <anupritaisno1[m]> Eventually
11:52:00 <anonhat[m]> It seems like gvisor is a project specifically designed to help system engineers actually sandbox their application containers. How do you plan to use it, if not for this 5
11:52:18 <somenerd[m]> well, the roadmap seems really cool
11:52:18 <anonhat[m]> * It seems like gvisor is a project specifically designed to help system engineers actually sandbox their application containers. How do you plan to use it, if not for this?
11:53:20 <anupritaisno1[m]> [anonhat](https://matrix.to/#/@anonhat:matrix.org) we are basically going to run the entirety of android inside it
11:53:23 <anupritaisno1[m]> That's the plan
11:53:55 <anonhat[m]> How does that improve security in any meaningful way?
11:56:32 <anonhat[m]> Are you just planning to use it as a syscall filter for the kernel? System-wide, everything shares the same instance of gvisor? Sounds marginally better, but not ideal.
12:10:48 <Wonderfall[m]> It might be a Chromium upstream issue or a misconfiguration on my part: can you still open external apps from links in Vanadium?
12:10:48 <Wonderfall[m]> Cannot do that since v86, and freshly installed Bromite is also affected. Opening external apps from links works on other apps though.
12:10:48 <Wonderfall[m]> (Originally posted on off topic but go skipped, just wanted to know if someone can try so I can know how to fix the issue if it's on my end.)
13:21:01 <yarimob838[m]> File transfer is enabled, the MTP host is running on the phone.
13:21:01 <yarimob838[m]> Previously connecting my Huawei worked, however trying to open my GraphenOS 3a XL in the file manager on my Laptop isn't working.
13:21:01 <yarimob838[m]> Why is this happening? Any clues?
13:37:46 <strcat[m]> anonhat: per-app gvisor instance
13:37:51 <strcat[m]> replacement of the app sandbox
13:38:18 <strcat[m]> it's not a syscall filter
13:38:24 <strcat[m]> it's a reimplementation of the Linux kernel API in userspace
13:38:41 <strcat[m]> it could be ported to run on something other than Linux
13:38:51 <strcat[m]> it's a Linux kernel API reimplementation
13:39:14 <strcat[m]> anonhat: the point of it is having that implemented in memory / type safe Go in userspace and you can run multiple instances of it
13:39:50 <strcat[m]> IPC attack surface would be unchanged but it is a way of addressing the weaknesses of the OS sandbox relying on the Linux kernel
13:39:56 <anupritaisno1[m]> Oops
13:40:05 <strcat[m]> and it is a way of making things more portable in theory
13:40:48 <strcat[m]> anonhat: we aren't ready to do this largely because gvisor is not ready for this yet
13:41:03 <strcat[m]> anonhat: so we're keeping an eye on it and experimenting with it
13:41:33 <strcat[m]> we need it to fully support arm64 and we probably wouldn't consider using the ptrace-based implementation, we need the kvm-based implementation available for arm64
13:41:34 <strcat[m]> and stable
13:49:18 <coffeebag[m]> Hey
13:49:41 <coffeebag[m]> I've fixed some bugs on Gallery2
14:07:27 <strcat[m]> coffeebag: nice
14:08:15 <coffeebag[m]> I've increase the quality of the pics preview and i'm fixing the crop / styling crash
14:10:43 <anupritaisno1[m]> Gg [coffeebag](https://matrix.to/#/@ukah:matrix.org)
14:10:46 <strcat[m]> coffeebag: I tried reverted it to the Android 10 state already and it that was still broken so it seems like it had latent bugs uncovered by the Android 11 changes
14:10:48 <strcat[m]> unsure on the details
14:10:53 <strcat[m]>  * coffeebag: I tried reverting it to the Android 10 state already and it that was still broken so it seems like it had latent bugs uncovered by the Android 11 changes
14:12:30 <jur> Do I need to install microG to make esim work on graphene?
14:13:01 <coffeebag[m]> @jur
14:13:48 <coffeebag[m]> jur: https://grapheneos.org/ CTRL+F microg
14:14:47 <coffeebag[m]> Also, https://www.reddit.com/r/GrapheneOS/comments/c1j6u5/is_grapheneos_for_me_questions_and_concerns/
14:16:24 <clox[m]> Hi guys, when you guys have a 'release' for the pixel 5?
14:19:34 <coffeebag[m]> strcat: What do you think about using using androidx for Gallery2 ?
14:19:35 * Wonderfall[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/OCxbTHzCoJoLtretOnJpvpsk/message.txt >
14:20:24 <strcat[m]> coffeebag: that's fine, but don't want to make a ton of changes / refactor it
14:20:35 <strcat[m]> coffeebag: also worth noting that we should probably submit fixes upstream to AOSP and try to get them merged
14:21:23 <coffeebag[m]> strcat:  Yep sure, i will see that
14:25:04 <cossmic_wray> Hello all, might I inquire as to the best android tablet to attempt a grapheneos install on? Thank you kindly.  P.s. I love this os.
14:25:17 <strcat[m]> we don't currently support any tablets officially
14:25:27 <strcat[m]> it can be built and run on tablets and all our changes should be compatible with them
14:25:33 <strcat[m]> but we don't have official support for any ourselves
14:29:14 <cossmic_wray> OK, makes sense.  If I were to attempt this build, would I want to stick to Google tablets for hardware compatability?
14:29:41 <cossmic_wray> In an unoffcial capacity, of course
14:31:48 <strcat[m]> there aren't Pixel Android tablets and no you wouldn't have to stick to those if there were
14:31:58 <strcat[m]> read https://grapheneos.org/faq#device-support
14:32:13 <strcat[m]> devices need to meet the requirements for them to be a proper target for GrapheneOS
14:33:08 <strcat[m]> you need to identify a device that ideally meets the requirements
14:33:33 <strcat[m]> and bring the AOSP support code for that device into GrapheneOS along with porting all of the upstream and downstream hardening features over to it
14:34:18 <strcat[m]> that is, if you want a proper build of it for a device capable of meeting the requirements
14:37:16 <cossmic_wray> Yup, thank you, I started reading it previously and then went looking for Google pixel tablets and got lost along the way.  As I read farther it seems I'll wait for a pixel type tablet.  Best phone I ever had now, though. Love it.
14:37:50 <strcat[m]> cossmic_wray: I don't really think there will be a Pixel Android tablet
14:37:54 * ultracard[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/JpXTuZnifGhheePWNgPyzrmY/message.txt >
14:37:58 <ultracard[m]>  https://gitlab.com/CalyxOS/platform_frameworks_base/-/merge_requests/2/diffs
14:38:42 <strcat[m]> someone is welcome to submit a pull request for this
14:38:59 <strcat[m]> our focus is not on changing things unrelated to privacy/security from how they work in AOSP and the stock OS
14:39:28 <strcat[m]> so if you users want build configuration changes like that they need to implement and test it (cannot blindly submit it without testing)
14:40:25 <ultracard[m]> <strcat[m] "our focus is not on changing thi"> yeah i know, And i fully understand your reasons behind that. but changing a single variable regarding screen color temperature shouldn't have any security implications
14:40:55 <anupritaisno1[m]> <ultracard[m] "yeah i know, And i fully underst"> Again, not really possible
14:42:06 <ultracard[m]> if i was a dev i'd do this right away, but sadyl i cannot code
14:42:14 <ultracard[m]> but to me it doesn't seem that difficult
14:42:35 <ultracard[m]> maybe i'll be able to make a pull request on gitlab
14:42:47 <Wonderfall[m]> Could not replicate my issue on Chromium v85 so it's related to 86. Should I open an issue on Vanadium or Chromium issue tracker since it should be upstream? I see no one complaining about this but it's impacting me, I used to have Slide open automatically when browsing reddit.
14:45:24 <strcat[m]> Wonderfall: can you install Chrome and try with that
14:45:31 <strcat[m]> which is not quite as good as testing on the stock OS
14:45:35 <strcat[m]> but useful nonetheless
14:45:44 <strcat[m]> can do it in a user profile
14:45:47 <strcat[m]> if you want
14:46:08 <Wonderfall[m]> I'm doing that
14:52:23 <Wonderfall[m]> Okay, it works in Chrome 86.0.4240.110
14:53:13 <Wonderfall[m]> And not in Vanadium 86.0.4240.99, same profile (which is a brand new one)
14:55:11 <Wonderfall[m]> And doesn't work either in Bromite 86.0.4240.112, interesting.
14:59:07 <yarimob838[m]> How much of a compromise is made using the SIM from my old Googled phone in the new GrapheneOS phone? How much data from the past will be connected to me on the new phon? Would it even be feasible to leave that behind with a new sim/phone? Asking because I need to use things like whatsapp for the time being anyways.
14:59:44 <strcat[m]> the SIM card uniquely identifies itself to the carrier as part of authenticating
14:59:51 <strcat[m]> a SIM card is a little secure element for authenticating on a network
15:00:24 <strcat[m]> you can think of it like your private key to authenticate you on the network, although in a way that it doesn't trust the OS, etc. with the private key
15:01:38 <strcat[m]> eSIM functionality works by using a secure element that's built-in to the phone (Qualcomm SPU provides eSIM) and just puts the carrier secure element applet(s) there
15:01:49 <yarimob838[m]> strcat: So the real problems arise when I keep using whatsapp and all that other services and stuff that has my sim tied to it like telegram too.
15:01:49 <yarimob838[m]> At least my browsing will be more secure if I use some countermeasures from now on.
15:01:49 <yarimob838[m]> What happens with banking apps? Not much, right? Just more securely sandboxed in graphene?
15:01:54 <strcat[m]> so, essentially the same thing, just using a secure element built into the phone instead of the SIM card
15:02:00 <strcat[m]> we just don't have the high-level code for setting up eSIM
15:02:18 <strcat[m]> yarimob838: you're venturing off into other topics and it's too general / vague
15:02:35 <yarimob838[m]> strcat: Ah yes, sorry, I got carried away. This is all so new to me.
15:02:45 <strcat[m]> the answer to the question is the SIM card uniquely identifies you to the network, that's the fundamental purpose of it
15:03:15 <yarimob838[m]> Okay, so on the rest I have to be the judge of where I gave away my data when tied to it.
15:03:20 <strcat[m]> if you give apps your phone number (they can't get that by default), then they have your phone number
15:03:33 <strcat[m]> many apps requiring a phone number also allow entering one instead of giving the permission to get it automatically
15:03:42 <strcat[m]> and it could actually be a different phone number
15:03:53 <yarimob838[m]> eSim seems like a cool concept.
15:04:03 <strcat[m]> it's a nice convenience
15:04:03 <yarimob838[m]> I will go to OT to ask about it
15:04:10 <strcat[m]> but unfortunately we don't support it yet
15:04:20 <strcat[m]> the hardware and OS have support for it but we're missing the high-level app functionality to set it up
15:05:23 <yarimob838[m]> strcat: But eventually it'll be in an upcoming google pixel, right?
15:06:07 <yarimob838[m]> Half of it went completely over my head but reading the GrapheneOS raodmap - the goals seem pretty impressive
15:08:13 <strcat[m]> eSIM is already supported by Pixels
15:08:25 <strcat[m]> and the low-level implementation in GrapheneOS works
15:08:32 <strcat[m]> as I said above we're missing high-level app code for setting it up
15:08:44 <yarimob838[m]> Ah sorry, I misread you.
15:08:50 <strcat[m]> the issue is that this is provided by Google apps on the stock OS
15:08:55 <strcat[m]> which we don't include
15:09:03 <strcat[m]> so we need an alternate implementation of that functionality
15:09:04 <yarimob838[m]> That's cool to hear. Will SIM trays eventually vanish completely?
15:09:08 <strcat[m]> probably
15:09:25 <strcat[m]> some carriers may be reluctant to implement eSIM
15:09:47 <strcat[m]> it's important to get this working but we lack resources to implement alternate implementations for all the Play services, etc. functionality in the short term
15:09:55 <yarimob838[m]> So basically the GrapheneOS devteam needs to mirror what that gapp is doing... that's a steep goal.
15:09:56 <strcat[m]> we need help with things like this, or collaboration with other projects
15:10:11 <strcat[m]> this is relevant to any OS without Play services
15:10:18 <strcat[m]>  * this is relevant to any OS without Play services / Google apps
15:10:43 <anupritaisno1[m]> Can we just remove the code that checks for gms?
15:10:56 <yarimob838[m]> But since it's all open the efforts never run into thin air, right?
15:10:59 <anupritaisno1[m]> I remember putting in a blank app there with the package name of gms
15:11:11 <anupritaisno1[m]> And from what I remember esim stopped crashing
15:11:33 <strcat[m]> anupritaisno1: it sounds like you're talking about bundling the Google apps for this
15:11:34 <strcat[m]> which isn't what we do
15:11:40 <anupritaisno1[m]> No
15:11:49 <anupritaisno1[m]> I just put in a dummy app in
15:11:56 <strcat[m]> you'll need to better explain what you're talking about then
15:12:05 <anupritaisno1[m]> Nvm
15:12:07 <strcat[m]> what code crashes?
15:12:11 <anupritaisno1[m]> Yeah you're right
15:12:21 <strcat[m]> as far as I know we're not including the apps with high-level eSIM support
15:12:26 <anupritaisno1[m]> I was using the official esim apps
15:12:30 <strcat[m]> we need our own implementation which can be shared with other projects
15:12:36 <strcat[m]> I don't think we can simply include those
15:12:45 <strcat[m]> and we do not want to hack things into working that are not meant to work
15:12:52 <strcat[m]> that's not our approach, it is bound to break in the future
15:13:25 <strcat[m]> that is how we would get stuck unable to upgrade to a new major release without dropping the feature and breaking carrier support for everyone relying on that hack
15:13:28 <strcat[m]> we can't do that stuff
15:13:49 <strcat[m]> need a proper implementation of this that can be relied upon to keep working and that's not unsupported
15:14:02 <strcat[m]> collaboration with other projects that need the same thing makes sense
15:14:18 <strcat[m]> hopefully they just add support for this to AOSP but remains to be seen
15:14:28 <strcat[m]> they've been adding RCS support, etc. not that we really want it
15:16:01 <anupritaisno1[m]> We can add the so called AOSP RCS packages
15:19:42 <lurkercheckwrong> <anupritaisno1[m] "We can add the so called AOSP RC"> Does the useShimServer app count as RCS?
15:20:04 <lurkercheckwrong> useShimService*
15:21:17 <anupritaisno1[m]> uceshimservice*
15:23:08 <lurkercheckwrong> <anupritaisno1[m] "uceshimservice*"> Well, not sure if it's an intended system app in GrapheneOS
15:27:09 <anupritaisno1[m]> It is
15:53:26 <Wonderfall[m]> I opened an issue on the Vanadium tracker: https://github.com/GrapheneOS/Vanadium/issues/84
15:53:26 <Wonderfall[m]> Help is needed for fixing/replication.
15:53:42 <strcat[m]> coffeebag: could you split your changes into 2 separate commits in 2 separate pull requests?
15:54:48 <strcat[m]> coffeebag: also look at https://android-review.googlesource.com/c/platform/packages/apps/Gallery2/+/1471522
15:54:56 <strcat[m]> there's a pending upstream fix from NXP
15:55:01 <strcat[m]> you could try that instead of your crash fix
15:56:00 <strcat[m]> coffeebag: I just applied that upstream fix - worth trying that
16:14:29 <mateusfmcota> Hi, I don't know if this is the best place to ask but I'm wanting to build a grapheneOs rom for my device which isn't a supported one and because this is the first time I'm trying to create a custom rom I'm having some problems about it which I wanted a bit of help
16:14:52 <mateusfmcota> So I wanted to know if I can ask here or if you guys know anywhere better to seek help
16:59:39 <incognitopeople> hello everybody, is here any admin of Grapahene OS online?
17:00:05 <louipc_> what is your question
17:05:27 <mateusfmcota> I have one, when I was doing some reading about how to compile the rom for my phone, they said to put this repo https://github.com/HarukeyUA/android_device_xiaomi_sm6125-common on  "device/xiaomi/sm6125-common", but how do I make to choosecombo to use it?
17:07:29 <mateusfmcota> And this repo https://github.com/PMS22/android_device_xiaomi_laurel_sprout on "device/xiaomi/laurel_sprout/"
17:09:03 <cark> is there a way i could test the quality of my usb cable before trying to flash? i'm a bit anxious
17:09:10 <incognitopeople> we would like to talk about a possibilty to do a partnership with you. We read all the subreddit and we had a fuill pic about the community of Graphene OS. We understood you have a lack of resources and developers. We're privacy GEEK working on a encrypted phone centered mostly on the privacy, we also integrate privacy for blockchain and some other
17:09:10 <incognitopeople> features. We're also working together with Incognito and theirs developers and we want to find a way to integrate a Cold wallet for incognito chain with titan-M chip. As we know, company like Omerta used and sell smartphone with you OS. We would like to do similar but before that, we would like to make a partnership and work together with you to
17:09:11 <incognitopeople> make a bigger and more solid fondation. Are you might be interested in it?
17:11:44 <spathionema[m]> Why don't you just email Micay?
17:13:17 <louipc_> mateusfmcota: what thats not a grapheneos repo though
17:13:41 <mateusfmcota> I know, I'm using the generic aosp repo
17:13:43 <jpds> louipc_: It's the device they're targetting
17:13:46 <mateusfmcota> And adding the aosp tree
17:14:24 <louipc_> incognitopeople: yes I think you better email Daniel Micay about any partnership, but stay in the chat anyways
17:14:55 <mateusfmcota> Sorry, what I've done is to clone the generic repo("RP1A.201005.006.2020.10.23.04") and add these trees there
17:15:54 <mateusfmcota> But I didn't understood if I have to specify the build process to use the sm6125-common or not
17:16:07 <nscnt> E-mail could easily end up in spam. It's fine to express interest here, imo
17:16:46 <nscnt> incognitopeople: strcat[m] is the one you need to talk to
17:18:24 <louipc_> incognitopeople: i think any partnership is unlikely without any upfront monetary or code contributions though
17:18:42 <louipc_> he has lot of people asking him, or even 'imposing' partnerships
17:18:58 <louipc_> most go nowhere and some become nuisances
17:19:09 <louipc_> so you should prove you are neither
17:20:36 <nscnt> Even if it's true, I think we shouldn't speak for him
17:23:22 <louipc_> incognitopeople: do you have a website or some kind of online profile about your group?
17:38:21 <cark> how can i test the quality of my usb cable before flashing?
17:39:18 <strcat[m]> incognitopeople: Omerta is not partnered with us btw
17:39:29 <strcat[m]> GrapheneOS is an open source project
17:52:02 <strcat[m]> cark: it's highly unlikely that you'll permanently brick a device as long as you're following the official instructions
17:54:57 <cark> yeah, i'm following the install guide, i've just never done anything like this before so i'm a bit anxious
17:55:03 <cark> thanks
17:58:44 <yarimob838[m]> cark: I actually installed it on a Pixel 3a XL yesterday and I literally never did something like this either. The phone works and it went right on the first try.
17:58:53 <yarimob838[m]> *a few days ago
17:59:20 <madaidan[m]> Bricking a device unintentionally is pretty hard nowadays
18:01:31 <cark> good to hear
19:13:06 <strcat[m]> okay Gallery app is working again with this fix from NXP submitted upstream
19:13:34 <strcat[m]> coffeebag: can you check the latest Gallery code, seems it works fine now with this fix applied
19:13:39 <strcat[m]> I'll take a look at your other change
19:15:51 <cark> i've just got graphene running on my 4a! thanks for reassuring me
19:25:56 <anonhat[m]> <strcat[m] "replacement of the app sandbox"> Is this also what you plan to use xen for? If so, what kind of overhead would that cause?
19:35:26 <strcat[m]> anonhat: I doubt there would be significant overhead
19:35:37 <strcat[m]> we already do hardening that does have significant overhead for C and C++ code heavily using malloc
19:36:03 <strcat[m]> and exec spawning has a noticeable impact on app spawning time but has substantial security benefits along with (less substantial, but still clear) privacy benefits
20:01:00 <r0tt0r[m]> hi all, thx for this awesome rom
20:03:14 <r0tt0r[m]> though one question i have, when searching for updates, just nothing is shown, no toast or anything like im on latest version. i know i ise latest though an indicator that search was successfull is missing somehow
20:03:31 <r0tt0r[m]> * though one question i have, when searching for updates, just nothing is shown, no toast or anything like im on latest version. i know i use latest though an indicator that search was successfull is missing somehow
20:05:26 <madaidan[m]> <r0tt0r[m] "though one question i have, when"> Compare the version number with those on https://grapheneos.org/releases
20:06:35 <r0tt0r[m]> <madaidan[m] "Compare the version number with "> yes i mean that is clear, i have current latest but how do i verify update search was successfull?
20:07:51 <strcat> it doesn't give feedback like that atm
20:08:12 <strcat> we have to decide how to implement it
20:08:41 <alex-resist> I also found it a bit confusing until I ran enough updates to have sufficient confidence that the updater will show an update when one is available
20:13:02 <r0tt0r[m]> <strcat "it doesn't give feedback like th"> thanks for the info so im good that nothing is wrong if its currently as designed, a simple toast : check successful imho sufficient
20:15:09 <strcat> it'd be a notification saying it was successful
20:15:19 <strcat> the check for updates action just schedules it to happen as soon as possible
20:15:32 <strcat> if you have it set to wifi only for example and aren't on a wifi network until 2 hours later
20:15:37 <strcat> it's not going to check until then
20:16:08 <strcat> we'd have to make it so that the job scheduled by the settings action is special and triggers a notification if no updates are available rather than just for downloading and installing one
20:40:13 <dar_gomml[m]> I just got stuck during flash all of a 4a device at "waiting for any device" after super_empty.IMG dtep. The device rebooted and is in the fastbootd screen.
20:40:38 <dar_gomml[m]> * I just got stuck during flash all of a 4a device at "waiting for any device" after super_empty.IMG step. The device rebooted and is in the fastbootd screen.
20:43:14 <dar_gomml[m]> I am on Windows 10 using the latest platform tools
20:46:54 <redibc[m]> What info could the nsa get by pinning a phone number tied to a phone with graphene. Is your imsi tied to your imei?
20:47:37 <liporush[m]> <redibc[m] "What info could the nsa get by p"> Yep
20:47:57 <strcat[m]> IMSI is your service subscription number (SIM / eSIM) with the carrier
20:48:06 <strcat[m]> IMEI is the hardware identifier of the cellular baseband
20:48:39 <strcat[m]> IMSI is what's tied to your phone number in a sense (although getting your carrier to give you a new phone number wouldn't change it, it's your subscription id for your carrier service on that device basically)
20:48:51 <strcat[m]> if you got a new SIM card it presumably comes with a new one
20:48:56 <strcat[m]> it identifiers the SIM basically
20:49:12 <strcat[m]> I doubt they'd give you a SIM card provisioned to have the same ID - maybe, I guess
20:49:52 <anupritaisno1[m]> They can
20:51:40 <dar_gomml[m]> <cark "i've just got graphene running o"> Did you get stuck during flashing?
20:53:05 <anupritaisno1[m]> <dar_gomml[m] "Did you get stuck during flashin"> You can get remote support if you need help
20:54:36 <dar_gomml[m]> anupritaisno1: can i pm you?
20:54:45 <anupritaisno1[m]> Yes
20:58:18 <dar_gomml[m]> <anupritaisno1[m] "Yes "> anupritaisno1 sorry first time on matrix... Is this a pm? :d
20:58:27 <Dylanger[m]> Your EID is tied to your eUICC as well, if you think using eSIMs to switch your IMSI
20:58:31 <Dylanger[m]> <dar_gomml[m] "anupritaisno1 sorry first time o"> No
20:59:22 <dar_gomml[m]>  OK got it 😀
21:02:24 <Yanagibashi> Is the pixel 4a 5G currently or planning to be supported?
21:03:07 <anupritaisno1[m]> No
21:03:15 <anupritaisno1[m]> No maintainer
21:04:18 <Dylanger[m]> It's the same SoC right?
21:04:25 <Dylanger[m]> As something
21:04:36 <Dylanger[m]> 4a 5G and 4a
21:04:41 <Dylanger[m]> Same SoC?
21:04:44 <Dylanger[m]> No
21:04:56 <Dylanger[m]> 4a 5G and Pixel 5
21:05:01 <Dylanger[m]> Same SoC?
21:06:15 <Dylanger[m]> Should be really easy to support 4a 5G if only changes are dt and vendor blobs
21:41:11 <pikey[m]> <cark "i've just got graphene running o"> Great feeling isn't it! I was there not long ago. Considering trying a 4a now
21:53:14 <rosebushactivism> Where is the best place to purchase a Google Pixel device?
21:54:47 <pikey[m]> In which country?
21:55:12 <rosebushactivism> United States.
21:56:39 <rosebushactivism> Is it better to go through the Google store itself, or through a third party?
21:56:54 <strcat> Dylanger[m]: 4a 5G is more similar to 5 than 4a
21:57:00 <strcat> it should be called the 5a, really
21:57:12 <strcat> but perhaps they already have a 5a planned part of the way through the year
21:58:45 <pikey[m]> <rosebushactivism "Is it better to go through the G"> Doesn't matter so long as you can be sure its a factory unlocked device. I get mine on fleabay
21:59:48 <pikey[m]> Leaving pixel 3. Much prefer 4a to 5 but not sure if 4a is a safe bet for future support/maintenance. Any guidance appreciated.
22:00:24 <rosebushactivism> The only requirement is that it is not a used device.
22:00:44 <pikey[m]> <rosebushactivism "The only requirement is that it "> Mine are all used
22:02:03 <rosebushactivism> I can't trust used devices.
22:02:36 <pikey[m]> I can't trust shop devices. Go figure!
22:02:57 <pikey[m]> Oops I meant afford
22:04:24 <pikey[m]> If you pick the seller of a used device, it can't be a setup, and all money trails to device are in someone else's name. Get a friend to buy phone for you on eBay and I think that's pretty darn optimal. But to each his own
22:05:24 <rosebushactivism> I'll buy the additional electron microscope to inspect the circuitry then.
22:35:41 <rosebushactivism> I wasn't involved in the community for any other release cycle, how long on average were the previous Pixel devices supported by GrapheneOS? Reading the FAQ, and correlating the information provided by Google, it should be at the most 3 years with the phones being maintained by Google during this period, but how much of that period is filled by contributions of the project?
22:36:59 <dar_gomml[m]> Finally 😀 4a running GrapheneOS
22:38:20 <rosebushactivism> Google included a 3.5mm output on the 4a?
22:39:31 <projectmoon> yes
22:39:41 <stan65> Hallo, since grapheneos has been updated from Android 10 to 11, my bank app crashes. I have deleted and installed Again several times but stil same. The bank app had maybe 8 updates but stil crashing.
22:42:49 <peertopeer12[m]> <rosebushactivism "I wasn't involved in the communi"> Not sure if I understand your question correctly but my guess would be, as long as their is a maintainer for that device. Support can continue
22:44:41 <rosebushactivism> I was asking how long it had been maintained on average in the past.
22:47:03 <peertopeer12[m]> Pixel 2 was released >3 years ago, still has legacy support. No guarantees given
22:47:24 <dazinism> So far, I think, once a device has GrapheneOS support it has stayed that way till device support was dropped by Google
22:48:06 <dazinism> Except the Pixel 1 which was dropped after October 2019
22:48:10 <peertopeer12[m]> best thing to do if you care about privacy, is buy the next newest support device for graphenos. It's the only way to be certain
22:49:07 <dazinism> There was another update from Google in Decemeber, but if I remember correctly GrapheneOS didnt do a December release
22:52:48 <dazinism> How soon after device release do devices get GraphenOS? Think the 4a may be the quickest yet. The 4/4XL probably the longest
22:54:00 <louipc> hey its still experimental lol whys it in stable
22:54:14 <rosebushactivism> I may wait for the Pixel 5 to be supported then, the 4a having a 3.5mm output is nice, but not necessary on a phone.
22:54:32 <dazinism> Although support for new Pixel phones won't happen now unless someone/some people commit to maintaining the device for the duration.
22:55:27 <louipc> why wait rosebushactivism. support it yourself :D
22:55:48 <rosebushactivism> What is needed?
22:56:02 <dazinism> rosebushactivism: don't think theres anyone who's said they'll take on the 5 yet.
22:56:35 <louipc> someone wants to make a partnership with grapheneos.. i'd recommend he volunteer for pixel5 too
22:57:04 <rosebushactivism> Someone should also make a case for the Pixel phones that has a camera cover like the ones developed for the iPhone. Maybe I can do it in FreeCAD and have a file to send to a 3D printer.
22:57:22 <louipc> rosebushactivism: you need to build and test grapheneos for the device then report issues
22:57:23 <anonhat[m]> I will do it maybe. Still new to this though.
22:57:51 <anonhat[m]> Need to get a 5 first.
22:58:22 <louipc> how many cameras do these phones have now anyways
22:58:28 <louipc> like 4? 5?
22:58:32 <dazinism> https://hub.libranet.de/wiki/graphene-os/wiki/Helping-graphene-os#Device_Maintaining
22:58:49 <rosebushactivism> I'm not sure how well 3D printing would work for moving parts, some assembly required?
22:59:03 <louipc> 3d print is bad
22:59:28 <louipc> you better off using an exacto knife and some thinn plastic or cardbord material
22:59:54 <peertopeer12[m]> <dazinism "https://hub.libranet.de/wiki/gra"> Will look into this, thanks for posting!
22:59:55 <louipc> a couple dots of super glue or something
23:00:03 <rosebushactivism> I also wonder how invasive it would be to develop your own power switches for the components in a phone.
23:00:21 <louipc> what components
23:00:22 <peertopeer12[m]> Wanted to help with support for the 5 but was looking around where to find more info about maintaining and what exactly is required
23:01:02 <chamchi> Is it posible 2 change imeion grapheneos? That would give the ultimate privacy
23:01:10 <rosebushactivism> The microphone, wireless, and extra sensors.
23:01:11 <louipc> dazinism: im wondering if i could pull your whole wiki in git..
23:01:26 <louipc> that will be extremely invasive
23:01:53 <louipc> dont forget the speakers
23:02:11 <louipc> they can be used as microphones
23:02:18 <rosebushactivism> About the speakers, does anyone know how the mute button on an iPhone works?
23:02:34 <rosebushactivism> mute switch is more specific
23:03:44 <peertopeer12[m]> rosebushactivism: maybe you are talking about the Librem Purism phone
23:04:17 <louipc> i think he wants to make a graphene phone with all the switches lol
23:04:22 <peertopeer12[m]> or librem 5. That device has physical switches which you can disable to stop mic from working
23:04:27 <peertopeer12[m]> oh lol
23:05:15 <rosebushactivism> I am looking to replicate the functionality of those devices, but they do not contain the strict security of the operating system featured in GrapheneOS, and am wondering if there is a slight possibility to get away with a DIY modification.
23:05:22 <louipc> i'd do it for fun
23:05:46 <louipc> but thats #grapheneos-offtopic :p
23:05:58 <rosebushactivism> I cannot contribute to the codebase of GrapheneOS, but I can offer DIY solutions.
23:09:28 <louipc> get some busted phones to practice mods on
23:10:20 <rosebushactivism> At this point we should really just develop our own phone.
23:10:42 <louipc> sure
23:11:09 <dazinism> louipc: if you goto wiki in the menu top left theres an option to download the whole thing as a zip file
23:12:22 <dazinism> *menu top right
23:14:25 <chamchi> Is it possible to change imei with grapheneos?
23:14:28 <louipc> dazinism: ok but not something you can push/pull to/from
23:16:01 <cUmUc> i love graphmeme os
23:16:04 <cUmUc> its good4u
23:20:18 <chamchi> How do i add this chat 2 revolution IRC? Anyone?
23:22:08 <louipc> chamchi: https://grapheneos.org/faq#hardware-identifiers
23:22:38 <louipc> chamchi: server is chat.freenode.net port 6697 channel is #grapheneos
23:24:11 <chamchi> And password? Authenficatioj mode? Or can i leave those blanl?
23:25:52 <louipc> leave them blank until you register
23:26:53 <louipc> please join #freenode for help on the irc stuff
23:55:26 <dazinism> louipc: the wiki is on a somewhat random Hubzilla server(not mine). Don't think that Hubzilla wikis support git pull/push
