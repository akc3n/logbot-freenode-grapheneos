00:00:15 <makingaliasesisa> I am just listing a scenario
00:12:44 <strcat[m]> the CalyxOS developers have been acting in a way that encourages their community members to spread misinformation about GrapheneOS and attempt to cause harm to it, so we're no longer going to be collaborating with them
00:13:09 <strcat[m]> CalyxOS does not provide privacy and security hardening, and they don't keep up with the Android major version upgrades and security updates, so they don't offer the baseline privacy and security of AOSP either
00:13:37 <strcat[m]> instead of competing on a technical level, they're instead misleading users and resorting to disparaging our work and misrepresenting what it provides
00:14:00 <strcat[m]> we're not going to be working with people who regularly misrepresent the differences between the OSes and downplay the substantial privacy and security improvements we develop
00:14:37 <strcat[m]> I've always talked on CalyxOS positively and I've probably played a major role in people becoming aware of it, but they haven't treated us the same way
00:15:23 <strcat[m]> unfortunately, the misinformation and misleading claims from their community have become more and more frequent and their developers participate in it, and we will be starting to respond to it
00:15:43 <strcat[m]> for the time being, GrapheneOS is still part of AOSP Alliance, but we're going to be focusing on doing things ourselves
00:15:46 <anupritaisno1[m]> strcat: whoa chill
00:16:10 <TheJollyRoger> Good gravy... argh.
00:16:39 <strcat[m]> important for us to be self-sufficient rather than relying on people demonstrating themselves to be untrustworthy and not loyal
00:16:39 <anupritaisno1[m]> Tbh I don't care
00:16:51 <anupritaisno1[m]> strcat: should I share glassrom's stance too?
00:17:44 <anupritaisno1[m]> Because we are also pissed off at their behavior
00:19:43 <strcat[m]> I just wanted to make it clear for everyone how things have changed
00:20:50 <strcat[m]> the latest attacks from their community were the last straw, we're officially taking a different approach
00:21:02 <TheJollyRoger> Oh :(
00:21:06 <Lia[m]> I am alright on how their OS is presented, but some statements throw me off like
00:21:06 <Lia[m]> "Fetishizing the verified boot"
00:21:35 <anupritaisno1[m]> CalyxOS developers have actively caused harm to glassrom. Glassrom has had to spend resources into dealing with their hacks rather than working on real hardening. They make misleading claims about the glassrom project, such as how glassrom is dependent on calyx (it isn't) and even go so far as to claiming glassrom owes something to calyx. When asked to fix some of their hacks, they will often respond to tone
00:21:35 <anupritaisno1[m]> rather than fixing the issue at hand
00:24:08 <anupritaisno1[m]> The glassrom board also did a thorough analysis of numerous calyx' claims and has come at the decision that glassrom will be labelling calyx a scam
00:24:47 <alzxjm[m]> <anupritaisno1[m] "The glassrom board also did a th"> How is it a scam? It's a free product.
00:24:56 <renlord> lol
00:25:03 <anupritaisno1[m]> Calyx relies on false marketing and often offloads many of their features to external apps, some shipped without permission from the original developers
00:25:05 <alzxjm[m]> It doesn't profit off of user data
00:25:06 * Lia[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/tpDyqQcqjZiXknJZUDIqhCbJ/message.txt >
00:25:27 <anupritaisno1[m]> alzxjm: false marketing is the issue
00:25:39 <anupritaisno1[m]> Many of the claims on calyx's site are just bogus
00:26:02 <anupritaisno1[m]> Glassrom doesn't tolerate such false marketing tactics
00:26:03 <alzxjm[m]> Such as? I'm curious. I haven't gone on the site in a while.
00:26:06 <renlord> not quite right to call it false marketing either, since they arent really acquiring paying customers
00:26:20 <renlord> you can say they engage in deceptive practices and misinform users.
00:26:27 <renlord> or mislead users
00:26:36 <strcat[m]> renlord: they do have a paid product, not CalyxOS though
00:26:37 <anupritaisno1[m]> <renlord "you can say they engage in decep"> Well, basically that
00:29:30 <Lia[m]> <renlord "you can say they engage in decep"> Yeah... No wonder they seem more "lax" there
00:30:37 <strcat[m]> what I have a problem with is that from our side we've attempted to collaborate with them and we promoted their project for them
00:31:05 <strcat[m]> but they were two faced and at the same time they were regularly making misleading comparisons with GrapheneOS and misrepresenting the differences between the projects
00:31:30 <strcat[m]> and they've created a culture of doing that and now they try to claim they have no part in doing it despite actively making those kinds of statements themselves
00:31:48 <Lia[m]> <strcat[m] "and they've created a culture of"> My impression is CalyxOS room sometines seemed to be the other people fallback when they felt hurt or offended here
00:31:54 <Lia[m]> <strcat[m] "and they've created a culture of"> Causing that to form
00:32:11 <Lia[m]> Mostly due to the rules and corrections
00:37:11 <strcat[m]> they've made it clear that they are not friends and intend to cause harm to us
00:37:17 <strcat[m]> so that's how I'll be handling it
00:37:46 <strcat[m]> we'll be making an official build variant with microG and no longer mentioning CalyxOS as a reasonable option since it doesn't even keep up with security updates and misleads users about what they are providing
00:38:00 <strcat[m]> I have a major issue with not shipping the full security updates but claiming that you do
00:38:23 <strcat[m]> you can see I went out of the way to make an alternative set of builds for the Pixel 2 and 2 XL to mark them as only having the 2020-11-01 patch level rather than a dishonest one
00:38:51 <anupritaisno1[m]> strcat: well let me know if you like my approach or need it to be implemented differently
00:39:20 <strcat[m]> Pixels require Android 11 for 2020-09-05 patch level and later (2020-10-01, 2020-10-05, 2020-11-01, 2020-11-05)
00:39:22 <anupritaisno1[m]> I am the only person left on glassrom so it is easier for me to take an already upstream graphene implementation
00:39:30 <strcat[m]> I have a major issue with claiming to provide those security updates to users
00:39:36 <strcat[m]> while not actually shipping them
00:39:50 <anupritaisno1[m]> strcat: yep, same here
00:40:08 <anupritaisno1[m]> I get really pissed off at people like that
00:40:13 <strcat[m]> that gets into being actively dishonest and harming users with insecure products that are misrepresented
00:41:10 <anupritaisno1[m]> strcat: let me know how you want microg to be implemented
00:41:33 <strcat[m]> anupritaisno1: Dylanger probably wants to work on it
00:41:38 <strcat[m]> you don't need to do it
00:42:00 <strcat[m]> I need my new workstation before there can be another set of official builds with it
00:42:31 <anupritaisno1[m]> strcat: but I do
00:43:04 <TheJollyRoger> I... I see.
00:43:12 <anupritaisno1[m]> This will be a problem I'll have to deal with 6 months later
00:46:01 <makingaliasesisa> > I need my new workstation before there can be another set of official builds with it
00:46:01 <makingaliasesisa> What are planning to get for your new workstation
00:47:14 <makingaliasesisa> anupritaisno1: lol
00:47:29 <makingaliasesisa> * > I need my new workstation before there can be another set of official builds with it
00:47:29 <makingaliasesisa> What are you planning to get for your new workstation
00:47:42 <makingaliasesisa> * > I need my new workstation before there can be another set of official builds with it
00:47:42 <makingaliasesisa> What are you planning to get for your new workstation
00:48:38 <makingaliasesisa> Cannot spell in chatrooms 😔
00:49:26 <strcat[m]> anupritaisno1: Dylanger: so I think the way to do it is offering it as an app that can be installed and is as anupritaisno1 suggested ideally a per-profile thing
00:49:32 <strcat[m]> not something acting as a cross-user system app
00:50:35 <anupritaisno1[m]> That is how it works on glassrom
00:50:51 <strcat[m]> anupritaisno1: does that require making changes to microG?
00:50:51 <anupritaisno1[m]> The ROM includes signature spoofing and a cross user geocoder
00:51:00 <anupritaisno1[m]> strcat: no
00:51:16 <anupritaisno1[m]> The only thing is the geocoder has to be separate
00:51:20 <strcat[m]> geocoder and supplementary location service should just be integrated in GrapheneOS itself but in a more minimal / robust way
00:51:21 <strcat[m]> that's fine
00:51:26 <anupritaisno1[m]> The microg geocoder won't work
00:51:30 <strcat[m]> we want that separately from the microG stuff anyway
00:51:43 <strcat[m]> because we want that in normal GrapheneOS, integrated in
00:51:51 <anupritaisno1[m]> strcat: also glassrom geocoder is target sdk29
00:51:52 <strcat[m]> there's an issue that has been open about it for years
00:51:59 <anupritaisno1[m]> Any help to target sdk30 is welcome
00:52:19 <strcat[m]> anupritaisno1: when I last looked at it, the unifiednlp one was very messy and designed around extensibility
00:52:26 <strcat[m]> we want something a lot more minimal and simple
00:52:40 <strcat[m]> we probably don't want to support using network-based location services, only local databases
00:52:41 <anupritaisno1[m]> Yeah that is what I use
00:52:50 <strcat[m]> since I think network-based location services are a bad idea
00:53:06 <strcat[m]> even if we self-hosted it
00:53:09 <anupritaisno1[m]> Geocoder is optional btw
00:53:16 <strcat[m]> I don't want to host services that receive user data in the first place
00:53:20 <anupritaisno1[m]> We can leave it not working. It won't really matter
00:53:28 <strcat[m]> but as a last resort it's better for us to host something than someone else
00:54:09 <anupritaisno1[m]> strcat: we can make unifiednlp accept only system apps to get input from
00:54:20 <anupritaisno1[m]> And then ship a back end that only does local
00:54:32 <anupritaisno1[m]> * And then ship a back end that only does local in the system
00:56:18 <strcat[m]> yeah but I'd like to simplify the code and overhaul it into a simpler app ideally
01:01:32 <anupritaisno1[m]> strcat: again, geocoder is a separate component and is optional
01:01:48 <anupritaisno1[m]> Microg doesn't need the geocoder
01:01:50 <strcat[m]> yeah we should do that separately and not involving microG
01:19:55 <Dylanger[m]> I think anupritaisno1 wants to work on this a little more 🙂
01:20:13 <Dylanger[m]> anupritaisno1 has a better idea of exactly what you're after
01:40:48 <strcat[m]> Dylanger: https://twitter.com/GrapheneOS/status/1331403599902076929
01:41:58 <TheLynx> TheJollyRoger: Thanks for the clarification with the baseband modem. My knowledge here was preety old.
01:44:35 <TheLynx> TheJollyRoger: I told a friend about GrapheneOS and he was still arguing with basebade exploits and I hadn`t done reasearch on taht topic for years
01:48:30 <TheJollyRoger> TheLynx: Yo-ho! Yarr, indeed it's a bit of an old subject, but it's one that gets kinda rehashed a lot in privacy circles since it sounds very impressive and very niche.
01:48:42 <strcat[m]> Dylanger: so if you want to work on this it's wanted, basically we would make our own official builds of these apps
01:48:47 <strcat[m]> Dylanger: which I could start doing soon
01:49:06 <strcat[m]> Dylanger: and then we hard-wire spoofing the specific Google app keys for these specific apps (correct app id + signing key for our build)
01:49:15 <strcat[m]> Dylanger: no permission for spoofing at all - just hard-wire it for these specific apps
01:49:53 <strcat[m]> if (app_id == our_app_id_for_this_app && signing_key == our_signing_key_for_this_app) { pretend to have a specific Google signature }
01:50:10 <strcat[m]> Dylanger: just hard-wired for microG and the fake store app, or whatever else
01:50:14 <strcat[m]> our builds of them
01:50:47 <strcat[m]> Dylanger: and it's not going to be bundled in any way
01:51:25 <strcat[m]> Dylanger: we'll publish it as external apps to install in a specific profile - so it won't be cross-user, won't have any special privileges / permissions - the only special thing is that if an app checks the signing key it looks like it has Google's one for these apps
01:52:04 <strcat[m]> Dylanger: so, not going to be providing geocoding, supplementary location services, etc. this way - I don't want that to have anything to do with Google compatibility layers since it's a neutral API
01:52:17 <TheJollyRoger> strcat[m]: Er, message?
01:52:21 <strcat[m]> we should have our own bundled implementation of those
02:01:55 <anupritaisno1[m]> I regret not talking to strcat about this earlier tbh
02:02:07 <anupritaisno1[m]> His solution is way better than what I came up with
02:21:20 <renlord> probably best to explain how the implementation differs to other rom's microg inclusion
02:26:39 <renlord> strcat[m]: were your main gripes with how microg inclusion in other OSes/ROMs due to how they generalised the signature spoofing permission in the packagemanagerservice?
02:26:53 <renlord> and primarily the reason you didnt want to include microg?
02:26:59 <strcat[m]> there should not be any generic signature spoofing
02:27:02 <strcat[m]> it breaks the OS security model
02:27:34 <strcat[m]> what's actually required is that a specific app (microG with our signature) appears to be signed with the Google Play services key
02:27:45 <strcat[m]> there is no need for any permission, and it doesn't have to be bundled with the OS to do this
02:27:47 <renlord> but hardcoding a whitelist of applications that can signature spoof is ok?
02:28:04 <strcat[m]> there won't be any spoofing permission or whitelist to do spoofing
02:28:12 <strcat[m]> and signature checks will not be bypassed by this app
02:28:29 <strcat[m]> renlord: it's not okay to permit a specific app to spoof arbitrary signatures
02:28:46 <strcat[m]> renlord: it's not okay to permit arbitrary apps to spoof a specific signature (Play services) either
02:29:01 <strcat[m]> renlord: there is no need for any signature spoofing permission to do this
02:29:24 <strcat[m]> renlord: rather, we can make our microG build appear to be signed by the Play services key
02:29:30 <strcat[m]> that is what's actually needed
02:29:44 <strcat[m]> that is what I've always suggested to others
02:30:11 <strcat[m]> renlord: we're not going to be whitelisting it in any special way, won't be giving it any privileged permissions, etc. and won't be bundling it in the OS
02:30:13 <Dylanger[m]> It's okay to spoof the Google Cert if microG has been signed by us specifically
02:30:13 <Dylanger[m]> Is that right?
02:30:21 <renlord> isnt what you said here -- "rather, we can make our microG build appear to be signed by the Play services key" an instance of signature spoofing?
02:31:00 <strcat[m]> renlord: yes, it's us spoofing a specific signature
02:31:13 <strcat[m]> renlord: we aren't giving microG any spoofing capability
02:31:22 <renlord> ok, gotcha
02:31:31 <strcat[m]> renlord: we will check for our app id and signature, and then make it appear to be Play services
02:31:47 <Dylanger[m]> Ah I see
02:31:50 <renlord> i feel like if you communicated this clearer at the start, people would have worked on this earlier
02:31:52 <renlord> @_@
02:31:55 <strcat[m]> renlord: it won't be able to bypass signature checks in general
02:32:07 <strcat[m]> it will only pass checks for Play services specifically
02:32:14 <strcat[m]> and it doesn't have involvement in that itself
02:32:15 <strcat[m]> the OS does it
02:32:26 <strcat[m]> it's not trusted beyond making it look like Play services
02:32:27 <renlord> the impression i got was that you didnt want any signature spoofing shenenigans at all
02:32:30 <strcat[m]> no privileged permissions or anything
02:32:58 <strcat[m]> renlord: I'm fine with pretending that a specific signing key belonging to us is a specific Google signing key
02:33:11 <strcat[m]> renlord: it's a very specific thing that is okay
02:33:34 <strcat[m]> we're the OS developers, we're already trusted, and this is a signing key of ours, and we're just going to pretend it is a specific key belonging to Google
02:34:01 <strcat[m]> no special added permission, no generic spoofing / bypassing of signature checks
02:34:03 <Dylanger[m]> First things first, fixing the Android.mk file for GmsCore, so it'll build in-tree
02:34:14 <strcat[m]> if an app or the OS checks if microG is signed with any other signature, it won't say it is
02:34:23 <strcat[m]> the OS and apps use signature checks as part of the core permission model
02:34:32 <strcat[m]> it's normal, not at all unusual
02:34:46 <strcat[m]> the OS itself uses this with stuff like the media key and platform key
02:35:02 <strcat[m]> it should not be possible for any app to bypass arbitrary signature checks
02:35:46 <strcat[m]> it's different to make an app pass a specific signature check for a specific Google key when that app is signed with a specific signing key controlled by the OS
02:36:08 <strcat[m]> renlord: i.e. it's okay for *our* microG build to look like Play services to other apps
02:36:18 <strcat[m]> it's not okay for even just our own microG build to bypass other signature checks
02:36:47 <strcat[m]> and we don't want arbitrary apks to be able to pretend to be Play services and intercept data from apps such as intercepting FCM messages
02:36:51 <strcat[m]> or getting their Google credentials
02:37:08 <Dylanger[m]> <strcat[m] "renlord: i.e. it's okay for *our"> Perfect
02:37:18 <strcat[m]> renlord: it has to be a specific key, and by an app signed with a specific key, and without trusting that app with any special permissions, etc.
02:37:42 <strcat[m]> renlord: we don't want microG to be able to act as a geocoding or network location provider because those are generic APIs we can implement in the OS without involving Google compatibility
02:37:45 <strcat[m]> they're neutral, open APIs in AOSP
02:38:02 <strcat[m]> Play services implements them for stock, just like Play services implements a backup service while we use Seedvault
02:38:24 <strcat[m]> we don't need microG to implement those AOSP APIs and won't whitelist it as a provider for them
02:39:16 <strcat[m]> it will have no special privileges or whitelisting, the only special thing will be that we make it look like it's signed with the Play services key, that's it
02:39:35 <strcat[m]> renlord: I thought I made it clear before that this is the kind of approach I wanted
02:39:42 <strcat[m]> renlord: the other part of it is that I didn't want to build it into the OS
02:40:28 <renlord> strcat[m]: not that i recall. What i recall is that you want a play services compatibility layer implemented instead that is not microg.
02:40:44 <strcat[m]> I do want that
02:41:19 <strcat[m]> but I'm fine with supporting microG as long as it has 0 special privileges and isn't built into the OS - with the other special thing being that we make our build of it look like Play services to other apps
02:41:36 <renlord> ^ i didnt know.
02:42:03 <renlord> anyways, good to know Dylanger[m] will implement this anyways.
02:46:13 <anupritaisno1[m]> <Dylanger[m] "First things first, fixing the A"> No
02:46:26 <anupritaisno1[m]> We are shipping apps separately
02:46:34 <strcat[m]> Dylanger: we want to have it as an optional app for users to install
02:46:35 <strcat[m]> within a profile
02:46:41 <anupritaisno1[m]> No in tree builds for that
02:46:56 <strcat[m]> Dylanger: so the only thing to do in the OS is checking for an app with the correct id + signature and then making that look like Play services
02:48:35 <anupritaisno1[m]> strcat: btw just one thing
02:49:53 <anupritaisno1[m]> Nvm
02:53:40 <Dylanger[m]> Ah fair enough
02:53:57 <Dylanger[m]> <strcat[m] "Dylanger: so the only thing to d"> This change would be in PackageManager yeah?
02:54:11 <strcat[m]> yes
02:54:20 <strcat[m]> look at their official signature spoofing patch
02:54:55 <strcat[m]> so, get rid of the permission, and instead check for a specific app id and signing key and make that appear to be a specific other signing key (Google Play services key)
02:54:58 <Dylanger[m]> Lol I had a TODO comment that kind of had this exact same approach
02:59:30 <Dylanger[m]> anupritaisno1: You've got this?
03:24:46 <madd_hatter[m]> TheJollyRoger:
03:24:46 <madd_hatter[m]> YaoiFangirl420
03:25:14 <TheJollyRoger> Yes?
03:45:18 <madd_hatter[m]> Stupid fat thumbs.  Was reading the chain and slid finger over the keyboard while scroll ing.  Grrr.  But on the positive side I  understand how Strcat wants microG implemented. LOL
03:50:02 <TheJollyRoger> Haha no worries madd_hatter[m]!
03:50:14 <TheJollyRoger> I do the same thing all the time!
03:59:51 <Dylanger[m]> Hash of the cert used?
03:59:53 <Dylanger[m]> Should be good
04:22:34 <Dylanger[m]> strcat: When you say correct id
04:22:36 <Dylanger[m]> What do you mean?
04:22:40 <madd_hatter[m]> blacklight447:
04:22:55 * Dylanger[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/ayHqZBvKDsIdBEjqSMgNdpht/message.txt >
04:23:12 <Dylanger[m]> That's it matching based on the hash of the cert
04:23:38 <Dylanger[m]> ```
04:23:38 <Dylanger[m]>     private static final String microGHash = "C8A2E9BCCF597C2FB6DC66BEE293FC13F2FC47EC77BC6B2B0D52C11F51192AB8";
04:23:38 <Dylanger[m]> ```
04:24:02 <Dylanger[m]> Obv you'd replace this out
04:25:47 <Dylanger[m]> Currently that matching on the cert hash + package name
04:41:39 <Dylanger[m]> When doing dev builds are you doing `make systemimage && make vendorimage && make bootimage`?
04:41:50 <Dylanger[m]> Docs say `m`
04:41:56 * Lia[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/FLAwWCOsOVtSwOpjjhPmQyJt/message.txt >
05:29:17 <majesticfruit[m]> Is iOS still recommended here? I would switch to GrapheneOS but rely fairly heavily on Apple ecosystem for work.
05:33:24 <Lia[m]> <majesticfruit[m] "Is iOS still recommended here? I"> Compared to other existing OS? Personally, yeah
05:33:37 <Lia[m]> <majesticfruit[m] "Is iOS still recommended here? I"> why not both?
05:34:46 <Lia[m]> lead dev also recommends iOS iirc?
05:50:19 <mistazaki[m]> Hi, i need help. i want flash stock OS. There are so many ways I try. But still unsuccessful.
05:52:18 * mistazaki[m] uploaded an image: 20201125_135032_2872816297438527995.jpg (242KiB) < https://matrix.org/_matrix/media/r0/download/matrix.org/rUSEUwyDhXSDEhlgrAATmEod/20201125_135032_2872816297438527995.jpg >
05:53:33 * mistazaki[m] uploaded an image: 20201125_135314_3210128649879420028.jpg (112KiB) < https://matrix.org/_matrix/media/r0/download/matrix.org/cqBcLWNMtqzLJRayLRWddCZr/20201125_135314_3210128649879420028.jpg >
05:54:45 <mistazaki[m]> it stops at fastbootd
06:11:52 <mistazaki[m]> What need i do?
06:12:10 <Lia[m]> Have you already flashed GrapheneOS before?
06:12:41 <Lia[m]> If you did, follow the same steps, reboot to bootloader after flashing, then remove custom avb key as per grapheneos.org/build
06:12:50 <mistazaki[m]> <Lia[m] "Have you already flashed Graphen"> Yes. now i want flash back
06:14:12 <mistazaki[m]> <Lia[m] "If you did, follow the same step"> remove avb key After flash stock OS or what?
06:14:12 <Lia[m]> <Lia[m] "If you did, follow the same step"> And lock the bootloader
06:14:34 * Lia[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/lIpSBJpEdHoNkaSpKDeGewEK/message.txt >
06:14:49 <Lia[m]> <Lia[m] "If you did, follow the same step"> Oops
06:15:06 <Lia[m]> That was supposed to be grapheneos.org/install
06:15:11 <mistazaki[m]> <Lia[m] "> <@mistazaki:matrix.org> > <@le"> But for flash stock OS still unsuccessful
06:15:39 <Lia[m]> Then something is broke with your usb cable
06:16:03 <Lia[m]> It isn't connected well, assuming you use the grapheneos.org/install instructions
06:16:53 <mistazaki[m]> <Lia[m] "Then something is broke with you"> I have tried changing the usb cable, and tried all the ports.
06:18:53 <Lia[m]> Welp, try in other pc?
06:19:15 <mistazaki[m]> <Lia[m] "Welp, try in other pc?"> Not yet
06:19:24 <mistazaki[m]> I only have i pc
06:27:31 <Lia[m]> <mistazaki[m] "I only have i pc"> That's unfortunate, and are you use webusb flashing software?
08:23:16 <Dylanger[m]> Lol there you have it
08:23:16 * Dylanger[m] uploaded an image: Screenshot_2020-11-25_19-22-34.png (202KiB) < https://matrix.org/_matrix/media/r0/download/diagnostix.io/wZGodsqcUPjshqTpMCyzyZYS/Screenshot_2020-11-25_19-22-34.png >
08:24:08 <Dylanger[m]> microG as a user app, without the FAKE_SIG perm, allowing only via a hash of the cert
08:25:07 <louipcm> nice
08:30:52 <mistazaki[m]> <Lia[m] "That's unfortunate, and are you "> Yes
08:31:11 <Lia[m]> <Dylanger[m] "microG as a user app, without th"> Wow
08:31:43 <CaptainBlackton> Hi everyone! Are all of the features known to work for Pixel 4a, specifically camera and flashlight? Thanks!
08:31:57 <Lia[m]> <CaptainBlackton "Hi everyone! Are all of the feat"> Yes
08:32:46 <CaptainBlackton> Cool!
08:34:42 <CaptainBlackton> And what do people generally do for maps/navigation?
08:39:44 <webb[m]> Google Maps honestly
08:40:15 <webb[m]> OSM is great but the apps for it are a little bit crappy.
08:40:30 <webb[m]> And they don't usually do trip planning which is a must for me.
09:29:19 <Lia[m]> <webb[m] "Google Maps honestly"> On browser btw
09:30:24 <webb[m]> <Lia[m] "On browser btw"> GrapheneOS unloads apps too much for that
09:31:08 * mistazaki[m] uploaded an image: 20201125_173009_608698649383008307.jpg (122KiB) < https://matrix.org/_matrix/media/r0/download/matrix.org/rZtCYxTRXeOHSqpDCTLdXDtV/20201125_173009_608698649383008307.jpg >
09:31:16 <mistazaki[m]> how to enable secure boot?
09:31:31 <mistazaki[m]> <mistazaki[m] "how to enable secure boot?"> Lia
09:32:42 <strcat[m]> mistazaki: it looks like you have a development phone somehow
09:32:48 <strcat[m]> where did you get that? it's not a production phone
09:33:58 <mistazaki[m]> <strcat[m] "where did you get that? it's not"> Im buy secohand phone last month
09:34:18 <strcat[m]> looks like you somehow have a development device not configured for production use
09:34:39 <mistazaki[m]> Mean?
09:34:42 <strcat[m]> you could probably sell it to a developer who actually wants that... it's not a proper production device though
09:34:45 <strcat[m]> mistazaki: it's not secure
09:34:57 <strcat[m]> it's not a retail Pixel phone
09:35:06 <mistazaki[m]> Not secure?
09:35:08 <strcat[m]> it's stolen property probably
09:35:17 <strcat[m]> you have what's likely a stolen development phone
09:35:26 <strcat[m]> shrug
09:37:02 <mistazaki[m]> if I use it. What are the risks?
09:39:12 <anupritaisno1[m]> mistazaki: you are not secure
09:43:37 <strcat[m]> mistazaki: unclear
09:43:56 <strcat[m]> mistazaki: it won't have working verified boot because it's not enabled for the low-level firmware but it's also unclear what else is not configured on it
09:44:01 <strcat[m]> it's very strange that you got a development device
09:44:20 <strcat[m]> it may be an earlier revision of the hardware too - unclear
09:44:25 <strcat[m]> that's not a phone someone bought at retail
09:44:44 <anupritaisno1[m]> Send it to me xD
09:44:52 <anupritaisno1[m]> Custom bootloader time
09:44:57 <anupritaisno1[m]> (Please don't)
09:52:00 <mistazaki[m]> So i can't secure boot?
09:54:47 <Dylanger[m]> mistazaki: I don't believe this dude is legit
09:55:15 <mistazaki[m]> <Dylanger[m] "mistazaki: I don't believe this "> What mean?
09:55:28 <Dylanger[m]> _Creates a picture in mspaint_
09:55:28 <Dylanger[m]> _Displays it on phone_
09:55:28 <Dylanger[m]> _Omg guys I don't have secure boot_
09:55:43 <renlord> Looks like a very good mspaint photo
09:55:58 <Dylanger[m]> You've been around here asking about this before etc
09:56:01 <renlord> Hats off to mspaint user.
09:56:47 <mistazaki[m]> <Dylanger[m] "You've been around here asking a"> But dont have answer
09:57:14 <renlord> Can you take a full picture of the entire phone?
09:58:36 <mistazaki[m]> <renlord "Can you take a full picture of t"> Can
09:59:45 <Dylanger[m]> ABL doesn't look like that on any Pixel I've seen
10:02:39 * mistazaki[m] uploaded an image: 20201125_180217_3678270070082866993.jpg (101KiB) < https://matrix.org/_matrix/media/r0/download/matrix.org/fJfjvEUTuIxxbiQAlASLbHxt/20201125_180217_3678270070082866993.jpg >
10:05:20 <Dylanger[m]> Ah, well that settles it then
10:10:09 <mistazaki[m]> Possibly this phone is fake. Mybe China version.
10:10:30 <anupritaisno1[m]> mistazaki: try Titan M attestation
10:12:23 <mistazaki[m]> <anupritaisno1[m] "mistazaki: try Titan M attestati"> How?
10:13:17 <mistazaki[m]> Download Auditor app?
10:14:59 <CarpeDiem[m]> That's probably a Samsung galaxy 2 or something inside of a bodgy pixel case, being sold for way more than it's worth
10:15:28 <CarpeDiem[m]> Something running android 3.0 or the likes, is it super duper lagy?
10:16:38 <renlord> systemui does not look like android 3.0
10:16:50 <renlord> android 3.0 really looks like shit
10:17:30 <anupritaisno1[m]> mistazaki: yes
10:17:40 <anupritaisno1[m]> Lock bootloader on stock and install auditor
10:18:00 <CarpeDiem[m]> Check the imei that'll tell u what the phone ShOuld be
10:19:13 <mistazaki[m]> <anupritaisno1[m] "Lock bootloader on stock and ins"> Done. Can send info here?
10:19:24 <renlord> sure, we are all curious
10:19:40 <ht60309[m]> uh... anyone here with Pixel 4a 5G?
10:19:40 <ht60309[m]> I bought one and really hope it could be supported, if there's no one working on it, can anyone guide me through the bring up?
10:20:24 <anupritaisno1[m]> ht60309: you want to volunteer?
10:20:31 <renlord> ^ hehe
10:20:56 <ht60309[m]> <anupritaisno1[m] "ht60309: you want to volunteer?"> I'd like to if there's no one else, dunno if I'm capable to though
10:21:11 <anupritaisno1[m]> renlord: https://youtu.be/1exK34r_BaU
10:22:05 <renlord> ^ hehe again
10:23:32 <CarpeDiem[m]> 🥳🥳
10:25:00 * mistazaki[m] uploaded an image: Screenshot_20201125-182056.png (183KiB) < https://matrix.org/_matrix/media/r0/download/matrix.org/MPODKpUrdcEqfcBNwdNlrwOe/Screenshot_20201125-182056.png >
10:25:44 <renlord> the plot thickens
10:26:48 <CarpeDiem[m]> O.o
10:26:53 <CarpeDiem[m]> Well shit
10:27:30 <Dylanger[m]> This doesn't confirm Secure Boot status
10:28:32 <renlord> at least we know its a legit pixel4XL
10:29:45 <mistazaki[m]> <Dylanger[m] "This doesn't confirm Secure Boot"> Dylanger   how to make sure confirm Secure Boot status?
10:32:18 <Dylanger[m]> Put it into fastboot
10:32:26 <Dylanger[m]> `adb reboot bootloader`
10:32:47 <Dylanger[m]> `fastboot getvar all`
10:32:51 <Dylanger[m]> Paste that
10:32:52 <mistazaki[m]> Already show it here.
10:32:52 <mistazaki[m]> Secure boot: none
10:33:46 <Dylanger[m]> I don't believe you my dude, even if you paste it, no one can attest it
10:34:07 <Dylanger[m]> Google should be attesting fastboot vars imo
10:34:30 <renlord> reflash stock, boot and relock
10:34:34 <renlord> see how it goes
10:34:48 <Dylanger[m]> And the picture you've send looks nothing like abl, even untouched versions of abl/edk2
10:34:49 <renlord> or contact google support
10:38:31 * mistazaki[m] uploaded an image: IMG-20201125-WA0000.jpg (89KiB) < https://matrix.org/_matrix/media/r0/download/matrix.org/jssBNzFPlQAyXojRrpmGfePM/IMG-20201125-WA0000.jpg >
10:39:49 <mistazaki[m]> <renlord "reflash stock, boot and relock"> Already yet.
10:40:01 <Dylanger[m]> Now we're talking
10:40:16 <mistazaki[m]> <Dylanger[m] "Now we're talking"> ok
10:41:14 <Dylanger[m]> So you have an EVT Pixel 4 deivce
10:41:17 <Dylanger[m]>  * So you have an EVT Pixel 4 device
10:41:32 <mistazaki[m]> Dylanger what you need i do? what do you not believe?
10:41:39 <Dylanger[m]> Congrats, these are super hard to locate
10:41:53 <renlord> mistazaki[m]: congratulations, you struck gold.
10:42:16 <mistazaki[m]> <renlord "mistazaki: congratulations, you "> What mean?
10:42:29 <Dylanger[m]> You're the OEM
10:42:36 <renlord> lol
10:42:52 <renlord> you should contact google support
10:42:54 <Dylanger[m]> You can sign XBL and be in 'GREEN' state VB
10:43:04 <Dylanger[m]>  * You can patch & sign XBL and be in 'GREEN' state VB
10:43:07 <renlord> Dylanger[m]: what really!?
10:43:21 <mistazaki[m]> Im still not understand
10:43:24 <renlord> dont you need to flash it into the firmware or something
10:43:35 <Dylanger[m]> TL;DR these devices are much more useful in the hands of myself or strcat
10:44:23 <Dylanger[m]> <renlord "dont you need to flash it into t"> No that's what firehose/9008 is for, no secboot means you can sign your own FH image that doesn't care about tokens/cmd digests
10:45:26 <mistazaki[m]> I'm still not understand.. Im buy thia phone last months. Secondhand and for flash grapheneos
10:45:32 <Dylanger[m]> Because it's an EVT, you might even have a dev version of Titan M potentially
10:45:46 <renlord> mistazaki[m]: just sell it to Dylanger[m]
10:47:28 <mistazaki[m]> Looks like you all give me an answer like joking.
10:48:05 <renlord> mistazaki[m]: no, everyone gave you straight answers
10:48:52 <mistazaki[m]> So what need i to do? This phone not secure?
10:48:55 <strcat[m]> mistazaki: you have a development device of some kind not a normal device
10:49:21 <Dylanger[m]> This is why visiting 🇨🇳 would be fun, I hear some guys over there can resolder untouched SoCs and eMMC/UFS ICs, would unprovision the device
10:49:46 <mrxx_0[m]> mistazaki: https://www.reddit.com/r/GooglePixel/comments/89zba3/be_careful_when_buying_pixels_from_ebay_i_ended/
10:49:49 <mistazaki[m]> <strcat[m] "mistazaki: you have a developmen"> This good to use or not?
10:50:01 <renlord> mistazaki[m]: where you buy this?
10:50:20 <renlord> mistazaki[m]: its good if you're a developer, otherwise it is not good
10:50:26 <anupritaisno1[m]> mistazaki: it is okay for you I guess
10:51:01 <mistazaki[m]> <renlord "mistazaki: where you buy this?"> shop near my house
10:51:10 <renlord> idk, its like selling a vehicle to somebody without all the safety features.
10:51:27 <renlord> how'd you feel driving a car with ABS, airbags and seatbelts?
10:51:31 <Dylanger[m]> Lol that's a good analogy
10:51:33 <renlord> s/with/without/
10:52:20 <Dylanger[m]> mistazaki: Where abouts are you?
10:52:22 <renlord> mistazaki[m]: well thats what your shop sold you
10:54:02 <mistazaki[m]> Mmmm
10:58:09 <mistazaki[m]> <anupritaisno1[m] "mistazaki: it is okay for you I "> Thanks
10:59:11 * renlord shakes head
11:01:14 * Dylanger[m] joins renlord and too, shakes thy head
11:02:17 * renlord watches driver driving off with vehicle without any safety features
11:03:29 <strcat> need to choose names for the fallback connectivitycheck domains
11:03:32 <strcat> now that we're shipping it
11:03:42 <strcat[m]> https://grapheneos.org/faq#default-connections
11:03:56 <strcat[m]> the standard ones are:
11:04:07 * strcat[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/TcolCLFGgIJtfawsZZrfWruC/message.txt >
11:04:48 <strcat[m]> I wonder what the method is to choosing that order, etc.
11:05:35 <Dylanger[m]> https://heyjustsoeveryoneknows.redflag.overhere.nothingtoseehere.com/generate_204
11:05:44 <strcat[m]> I think they added /gen_204 because some captive portals started to special case /generate_204
11:05:57 <anupritaisno1[m]> Dylanger: no
11:06:06 <anupritaisno1[m]> We won't add support for random URLs
11:06:06 <renlord> strcat[m]: /meow_204?
11:07:05 <strcat[m]> https://github.com/GrapheneOS/connectivitycheck.grapheneos.org/blob/master/nginx.conf#L51-L91
11:07:47 <strcat[m]> so stupid that captive portals exist
11:11:27 <strcat[m]> the iOS ones are funny
11:11:28 <strcat[m]> http://www.thinkdifferent.us/
11:11:36 <strcat[m]> http://www.ibook.info/
11:11:42 <strcat[m]> www.itools.info
11:11:53 <strcat[m]> www.appleiphonecell.com
11:12:08 <strcat[m]> www.airport.us
11:12:10 <Dylanger[m]> Lol they look suspect
11:12:19 <renlord> pretty good utility for squatted domains
11:12:42 <anupritaisno1[m]> strcat.com when? Unless it already exists
11:12:57 <strcat[m]> > Offers under $500 US are usually not considered
11:13:28 <anupritaisno1[m]> Fuck it
11:14:11 <strcat[m]> I'll just call one `check` for now
11:14:13 <strcat[m]> good enough
11:16:44 <strcat[m]> anupritaisno1: I wonder if china blocks our URLs
11:17:29 <strcat[m]> nope doesn't seem to
11:17:49 <strcat[m]> google has an overlay for chinese SIM cards to use a different URL
11:17:52 <strcat[m]> wonder what to do about that
11:18:07 <anupritaisno1[m]> strcat: not really a concern
11:18:20 <anupritaisno1[m]> China blocks all of the standard URLs too
11:19:02 <strcat[m]> what I mean is our fallback URL will be different for china
11:19:07 <strcat[m]> in the standard mode
11:20:19 <anupritaisno1[m]> Probably a good idea to leave it default
11:22:19 <strcat[m]> anupritaisno1: well we don't though
11:22:25 <strcat[m]> anupritaisno1: the settings take precedence over this
11:22:30 <strcat[m]> that's all I mean
11:23:34 <anupritaisno1[m]> strcat: a China option can easily be added
11:35:16 <strcat> alright appears to work
11:35:22 <strcat> I can test fallback by disabling the URL on the server
11:35:41 <strcat> unsure how it handles that though
11:45:32 <ht60309[m]> [anupritaisno1](https://matrix.to/#/@anupritaisno1:m.apex.to) so is there anything I can follow to port GrepheneOS to Pixel 4a 5G?
11:51:04 <jimbo> Kimba
12:01:59 <besamim5781[m]> How likely is it that a banking app listened through sensors? I forgot to deny it sensor access. Is it more of a theoretical danger only persons with extreme threat models should be wary of?
12:02:06 <ht60309[m]> 👀
12:03:24 <jpds> besamim5781[m]: What exactly do you mean by 'listened' ?
12:05:04 <besamim5781[m]> eavesdropping
12:05:18 <jpds> Sensors doesn't include the microphone
12:05:21 <jpds> https://developer.android.com/guide/topics/sensors/sensors_overview
12:06:45 <besamim5781[m]> Yes I know but:
12:06:59 <besamim5781[m]> https://www.wired.co.uk/article/gyroscope-listening-hack
12:07:21 <besamim5781[m]> https://link.springer.com/chapter/10.1007/978-3-030-22479-0_6
12:07:27 <jpds> I really really doubt your bank is doing that
12:10:13 <besamim5781[m]> Yes that's what I thought too.  I know that it's rather theoretical and I would be interested how feasible it is to implement such a "feature" in standard apps
12:12:08 <Lia[m]> <besamim5781[m] "Yes that's what I thought too.  "> turn off sensor permission, problem solved
12:12:30 <ht60309[m]> [anupritaisno1](https://matrix.to/#/@anupritaisno1:m.apex.to) sar enlighten me plz
12:12:42 <anupritaisno1[m]> ht60309: I can't I'm sleeping
12:12:54 <ht60309[m]> <anupritaisno1[m] "ht60309: I can't I'm sleeping"> maybe tomorrow?
12:13:05 <anupritaisno1[m]> Pm me
12:13:12 <ht60309[m]> k
12:24:46 <Golli[m]> <majesticfruit[m] "Is iOS still recommended here? I"> It depends, what are you after in a OS?
12:28:17 <besamim5781[m]> <Lia[m] "turn off sensor permission, prob"> Yes I did it but with great delay
12:29:28 * Lia[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/VjVzesjoMUaUTkAGNAnmtXZV/message.txt >
12:29:57 * Lia[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/nsBaFIwLVkDkfoLrvkvtetzx/message.txt >
12:32:55 <besamim5781[m]> Is there another reason why Graphene has a sensor permission toggle?
12:33:57 <jpds> besamim5781[m]: Because it implemented it: https://grapheneos.org/usage
12:35:13 <Golli[m]> <besamim5781[m] "https://www.wired.co.uk/article/"> >But iOS limits the reading of the gyroscopes to 100 hertz, which makes audio spying far harder to pull off
12:37:13 <strcat[m]> the rate is already very limited
12:38:57 <besamim5781[m]> <jpds "besamim5781: Because it implemen"> Great answer indeed
13:21:35 <AlfredJPrufrock[> <besamim5781[m] "Is there another reason why Grap"> Is android 10 toggle "sensors off" (which you can enable in developer settings) anyhow equivalent to GrapheneOS' one?
13:22:06 <strcat[m]> no because our toggle is per-app
13:22:15 <strcat[m]> and is not an unsupported developer option for testing
13:23:39 <AlfredJPrufrock[> <strcat[m] "no because our toggle is per-app"> Understood, thank you!
13:57:09 <ephemeralang[m]> Has anyone else running grapheneOS on a pixel 3 had their data connectivity stop working for no apparent reason? Putting the same SIM card into another phone let's me use data
14:39:01 <Lia[m]> <ephemeralang[m] "Has anyone else running graphene"> Also happens on stock OS
14:39:33 <Lia[m]> Some SIMs just decided to stop functioning
14:57:12 <axx> hi everyone, tried to search the room but apparently that's disabled: looking at wifi calling, as it's just been enabled by my current phone service provider, can't find in Graphene
14:57:13 <axx> should i understand it's been disabled for security / privacy reasons ?
15:10:37 <Kurai> axx the channel is logged here https://freenode.logbot.info/grapheneos/20201125. it seems that testers are needed for that feature
15:13:44 <axx> thanks Kurai !
15:13:50 <axx> was finding similar info on the subreddit
15:22:33 <q22[m]> <Lia[m] "Also happens on stock OS"> I had similar issues, mobile data didn't work anymore. Turned out to be a temporary problem, I turned the phone on and off several times, put the sim in and out. After some reboots it started connecting again.
15:23:28 <q22[m]> ephemeralang .
15:48:31 <ElfProofing[m]> Hey, Does anyone use the foobar2000 app? I have problems playing music with it. It's also the only music app I've that supports Multiple Artists per album/track so I prefer to use that over others that work fine.
15:55:13 <Platypus[m]> I use poweramp and it doesnt have problems with multiple artist in one album
15:58:44 <ElfProofing[m]> I've tried poweramp and it's not quite right. in the artist section it will show "PersonA; PersonB" as an artist instead of including the album in both PersonA and PersonB
15:58:44 <ElfProofing[m]> https://www.reddit.com/r/blackplayer/comments/f9rqbm/multiple_artists_still_not_being_separated/fitl90j/
16:25:52 <ruddo[m]> Android has been getting shittier in terms of media scanning lately.  The experience for media scanning in Android 4 was actually superior to any of the subsequent major Android releases.
16:29:46 <ElfProofing[m]> I've been looking for a separate device to play music but all the high end devices just use android anyway. the lower end dosn't support the Multi artist layout I enjoy like foobar9000
16:29:46 <ElfProofing[m]> I did find this about my problem, it seems that it's an android issue, https://hydrogenaud.io/index.php?topic=119385.0
16:39:11 <makingaliasesisa> https://mudita.com/products/pure/ but it doesn't have wifi, isn't released yet, a bit expensive and is a eink phone.
16:40:13 <makingaliasesisa> also not sure if will support music playing with that look of that phone
16:41:45 <makingaliasesisa> and uses bluetooth 4.2 so i wouldn't trust that at all...
16:42:00 <ruddo[m]> <makingaliasesisa "https://mudita.com/products/pure"> Mudita in Spanish means "mute girl".  Heh.  Funny name for a music playing device.
16:42:18 <makingaliasesisa> but it look like you can play music from it.
16:42:38 <makingaliasesisa> and true i didn't know that. that is cool.
16:43:35 <ElfProofing[m]> No WiFi, no mobile data on the phone -
16:43:35 <ElfProofing[m]> I bridge my SMS/MMS into matrix and use VOIP for phone calls. that phone looks really cool but I wouldn't be able to use it
16:43:57 <ruddo[m]> That phone would be basically worthless since it can't do E2E encrypted calls or texts.
16:44:02 <makingaliasesisa> yeah as you said it was for music
16:44:12 <ruddo[m]> It looks like the perfect phone for a person who wants to be eavesdropped on.
16:44:27 <ruddo[m]> And is enamored with globohomo design.
16:44:34 <ruddo[m]> (But I repeat myself.)
16:44:45 <makingaliasesisa> > I've been looking for a separate device to play music
16:44:52 <ElfProofing[m]> Yeah but I wouldn't buy a phone for music. maybe a sony walkman or something
16:45:12 <mmcblk0[m]> Which secure encrypted notes application like as vault you recommend on GrapheneOS?
16:46:27 <makingaliasesisa> bitwarden can store notes
16:47:10 <makingaliasesisa> even though it is a passsword manager
16:47:15 <makingaliasesisa>  * even though it is a password manager
16:47:16 <ruddo[m]> I literally have a Nokia phone that can do all that Mudita Pure can do, and more, but it's made of an actual metal case with a proper display and 1 week battery life, plus it has storage for music that can be played from the phone directly using a headphone jack.
16:47:16 <ruddo[m]> These guys are aiming at the high-end idiot market.
16:47:44 <ruddo[m]> <mmcblk0[m] "Which secure encrypted notes app"> Use Markor and lock your phone when you are not using it.  That's your secure notes application.
16:48:01 <ruddo[m]> If you need to sync, use Syncthing to sync directly to your desktop / laptop PC.
16:48:51 <makingaliasesisa> i think they are aiming the truely scared of mobile radiation exposure.
16:49:48 <makingaliasesisa>  * i think they are aiming the truly scared of mobile radiation exposure.
16:50:02 <ruddo[m]> <makingaliasesisa "i think they are aiming the true"> That's probably a good segment of their target market.  Too bad the phone will not be able to neutralize the six gorillion cellphone towers and femtocells around them everywhere they are in.
16:50:04 <makingaliasesisa>  * i think they are aiming at the truly scared of mobile radiation exposure.
16:50:32 <makingaliasesisa> yeah that was one of my thoughts as well
17:02:53 <dmctrl[m]> Hello, I'm planning to buy a phone in the Pixel 4 range to run GrapheneOS. I was thinking of buying the Pixel 4 XL because of the superior screen resolution, refresh rate and hardware in general. But does GrapheneOS make proper use of this hardware advantage or should I stick to buying the Pixel 4 or 4a instead, which are slightly cheaper?
17:04:05 <Lia[m]> <dmctrl[m] "Hello, I'm planning to buy a pho"> Longer support for 4a, better hardware for 4XL
17:05:14 <dmctrl[m]> Thanks Lia , my question is more around the utilization of that hardware by GrapheneOS rather than which has better hardware
17:06:14 <Lia[m]> <dmctrl[m] "Thanks Lia , my question is more"> Should be the same, if you mean the functionalities
17:06:57 <Lia[m]> Like 100% of the hardware is utilized
17:07:06 <Lia[m]> Related to priv/sec
17:07:52 <dmctrl[m]> Ah ok, for example if the XL had a better camera, refresh rate and resolution, I can expect that advantage to fully translate when using GrapheneOS (rather than the stock Android OS)?
17:08:16 <dmctrl[m]> Discounting the software apps that make the camera better etc
17:08:49 <Lia[m]> <dmctrl[m] "Ah ok, for example if the XL had"> It should be iirc
17:09:20 <makingaliasesisa> yeah i would think so too
17:09:21 <Lia[m]> And I think it is, but I cant vouch as I dont have 4xl
17:09:46 <Lia[m]> <makingaliasesisa "yeah i would think so too"> After all, the bringup process is quite strict before it goes to stable
17:10:33 <makingaliasesisa> yeah they are preety tough what can pass before releasing the first release normally
17:10:41 <ht60309[m]> uhhh... strict?
17:10:57 <ht60309[m]> I'd like to know some detail as I want GrapheneOS on my 4a 5G
17:11:00 <dmctrl[m]> Thanks, that's good to know. I just wanted to justify buying an 4XL over a 4a and to make sure the hardware differences between the 2 would still hold when using GrapheneOS
17:11:37 <dmctrl[m]> (from a software utilization point of view)
17:12:01 <ht60309[m]> 😓
17:12:21 <Lia[m]> <ht60309[m] "I'd like to know some detail as "> Well, I mean...
17:12:35 <Lia[m]> The hardware has to work fully
17:12:58 <Lia[m]> The kernel and the userspace features has to be fully ported
17:13:32 <dmctrl[m]> Actually a better way to phrase this. If my Pixel 4XL has 1440p resolution and 90Hz refresh rate, will it have those features on GrapheneOS?
17:13:35 <Lia[m]> <ht60309[m] "uhhh... strict?"> Compared to some random Android "custom ROM", it is strict
17:13:48 <Lia[m]> <dmctrl[m] "Actually a better way to phrase "> Yes it does
17:14:16 <dmctrl[m]> Great, thanks for confirming Lia
17:16:05 <Lia[m]> <dmctrl[m] "Great, thanks for confirming Lia"> I can only confirm this as I've read in offtopic room about a user trying to build GrapheneOS in forced 90Hz  in all brightness
17:17:35 <dmctrl[m]> <Lia[m] "I can only confirm this as I've "> Fair enough. I'm not going to buy immediately, so if anyone else has an idea on this hardware utilization topic, that would be great too
17:17:53 <ruddo[m]> How do I confirm the refresh rate on my 4XL?
17:18:00 <Lia[m]> <ruddo[m] "How do I confirm the refresh rat"> adb
17:19:23 * Lia[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/GpUUslkRfQDCsWXpmfmMnbls/message.txt >
17:19:25 <Lia[m]> https://freenode.logbot.info/grapheneos/20200929#c5279267
17:30:09 <nfpdex[m]> I am trying to install graphene right now from manjaro.
17:30:23 <nfpdex[m]> Im following the instructions on the site.
17:30:29 <nfpdex[m]> when running curl to download the zip file I get:
17:30:44 <nfpdex[m]> Warning: Binary output can mess up your terminal."
17:31:13 <Golli[m]> wget
17:32:03 <nfpdex[m]> thanks.
17:32:17 <Golli[m]> 👍
17:39:11 <nfpdex[m]> I have everything I need now and the signature was verified.
17:39:16 <nfpdex[m]> now to the flashing.
17:39:41 <nfpdex[m]> So I just need to have the phone connected to the laptop and run these commands?
17:39:50 <nfpdex[m]> or do I need to cd into some directory inside the phone first?
17:40:37 <anoncicada_> I'm gonna be in the same boat in a weeks time when I get my pixel 4a :D Just found out copperheados is a ripoff
17:41:16 <nfpdex[m]> I am a bit afraid that I get trouble because of the usb as was mentioned earlier here.
17:41:28 <nfpdex[m]> I cannot use the original usb cable that came with the phone.
17:41:43 <nfpdex[m]> as it is usb-c to usb-c
17:42:03 <nfpdex[m]> and I have no adapter. So i have a different, older cable.
17:42:32 <TheJollyRoger> Hello nfpdex[m], I can help you out.
17:42:39 <nfpdex[m]> Thanks!
17:42:45 <TheJollyRoger> Where are you in the instructions are you right now?
17:42:58 <TheJollyRoger> Also - the reason Curl is giving you that warning is because a crucial command flag has been ommitted
17:43:17 <nfpdex[m]> I have done everything and now I am at the beginning of "flashing factory images"
17:43:33 <TheJollyRoger> The -O tells it to save to a file locally. Without that -O, it's going to simply spew whatever it gets into stdout, so that's why it gives you that warning.
17:43:44 <nfpdex[m]> Its an O?
17:43:50 <TheJollyRoger> Yep.
17:43:51 <nfpdex[m]> I guess I wrote a zero: 0
17:44:15 <nfpdex[m]> but I think it worked with wget
17:44:23 <nfpdex[m]> but thank you for clarifying this.
17:44:43 <TheJollyRoger> The good news is, you won't have to do much on your phone. You will need to boot it into fastboot, and confirm the instruction to unlock the phone's bootloader on your phone, that's all you'll need to do with the phone.
17:45:06 <nfpdex[m]> I am in fastboot mode
17:45:36 <TheJollyRoger> So, to retrace your steps (again, remember I'm not sitting beside you or looking over your shoulder, so I may ask questions that seem extremely strange, silly, or obvious, but again, that's because I can't see your screen nor what you've done) - you're at unzip sunfish-
17:45:44 <TheJollyRoger> factory, correct?
17:45:50 <nfpdex[m]> but to ask a dumb question: How does the terminal/laptop know where it flashes the stuff unto?
17:46:08 <nfpdex[m]> yes exactly.
17:46:10 <TheJollyRoger> You're on Manjaro, so have you installed the udev rules?
17:46:12 <ruddo[m]> <nfpdex[m] "but to ask a dumb question: How "> USB.
17:46:21 <nfpdex[m]> udev rules?
17:46:24 <TheJollyRoger> The install script will take care of that.
17:46:26 <ruddo[m]> `adb` and `fastboot` speak to the phone via USB.
17:46:43 <TheJollyRoger> Yep. Let's give this a test. Switch your phone on to fastboot and plug it into your computer.
17:46:48 <TheJollyRoger> Can you do for me:
17:46:50 <TheJollyRoger> fastboot devices
17:46:51 <TheJollyRoger> ?
17:46:52 <nfpdex[m]> I have installed android-tools
17:47:13 <ruddo[m]> OK plug your phone in, wait 3 seconds, and type `fastboot devices` then hit ENTER.
17:47:21 <nfpdex[m]> when I do this there is a number and fastboot is behind.
17:47:33 <ruddo[m]> (We really should have a GTK+ app or something that guides the user through the process!)
17:47:35 <nfpdex[m]> its the serial number
17:47:42 <nfpdex[m]> I see it on the phone screen
17:47:42 <TheJollyRoger> Great, looks like you have.
17:47:57 <TheJollyRoger> Ok, does the computer print that there is a device attached to it?
17:48:08 <TheJollyRoger> Or does it hang with <waiting for device>?
17:48:24 <nfpdex[m]> you mean in the terminal? there is just this output.
17:48:25 <TheJollyRoger> (Just trying to check)
17:48:33 <TheJollyRoger> Yes, in terminal, I'd like to know what you see in terminal.
17:49:02 <nfpdex[m]> nothing, just "[serial number] fastboot"
17:49:17 <nfpdex[m]> so I run the next command now.
17:49:37 <nfpdex[m]> havent unzipped yet
17:49:56 <TheJollyRoger> Yep, you should see something like a serial number like: "[serial number] fastboot". That's a GOOD SIGN - it means the computer's talking to the phone.
17:50:12 <TheJollyRoger> Okay, flashing...
17:50:23 <nfpdex[m]> so, I have unzipped it and changed directory into the folder
17:50:30 <TheJollyRoger> I'm going to number these for easy traceability, but I'm going to start at 10 because you've already covered some.
17:50:33 <TheJollyRoger> So Step 10:
17:50:44 <TheJollyRoger> Are you in the directory you downloaded sunfish-factory to?
17:50:56 <TheJollyRoger> And... before you do, let's cover Step 9: this is a 4a, correct? NOT a 4a5G?
17:51:37 <nfpdex[m]> no, its a pixel 3, I have the blueline-factory-2020.11.05.18
17:51:46 <TheJollyRoger> Oh, you're on a Pixel 3, ok.
17:52:21 <TheJollyRoger> OK, step ten:
17:52:22 <nfpdex[m]> and I made sure its a 3, not a 3a or xl or something.^^
17:52:25 <nfpdex[m]> I guess thats the right image.
17:52:38 <TheJollyRoger> unzip blueline-factory-2020.11.05.18.zip
17:52:48 <TheJollyRoger> Yep, if it's a vanilla 3, Blueline is what you need!
17:52:52 <nfpdex[m]> done.
17:53:08 <TheJollyRoger> Alright. Step eleven, we're going to move into that directory.
17:53:18 <TheJollyRoger> cd blueline-factory-2020.11.05.18
17:53:21 <nfpdex[m]> done too
17:53:35 <TheJollyRoger> Alright. Is the phone displaying that its bootloader is unlocked?
17:54:03 <TheJollyRoger> Make sure that cable is plugged in VERY snugly on both ends, place it somewhere it won't fall.
17:54:09 <nfpdex[m]> hmm.. I dont see this.
17:54:19 <nfpdex[m]> there is a bootloader version
17:54:20 <nfpdex[m]> boot slot
17:54:25 <nfpdex[m]> oh wait
17:54:30 <nfpdex[m]> device state: locked
17:54:42 <TheJollyRoger> Look on your phone's screen, can you see something that says "Device State: Locked"?
17:54:42 <nfpdex[m]> I was sure I unlocked it
17:54:56 <TheJollyRoger> Heh, well, the phone is always correct in this case.
17:55:04 <TheJollyRoger> Before we go on, have you stored anything you don't want to lose on this phone?
17:55:17 <nfpdex[m]> so I need to start new?
17:55:18 <TheJollyRoger> Because the next step will cause a factory reset: everything on the phone will be irretrievably lost.
17:55:22 <nfpdex[m]> or should it be locked?
17:55:29 <nfpdex[m]> no nothing on it.
17:55:40 <TheJollyRoger> Ah, please don't get ahead of me yet.
17:55:59 <nfpdex[m]> alright sorry. Its nothing on the phone.
17:55:59 <TheJollyRoger> Have you stored anything on this phone that you don't want to lose? Photos, 2FA seeds, authenticator apps?
17:56:19 <nfpdex[m]> no
17:56:21 <TheJollyRoger> Great. Ok, return to your terminal and type in:
17:56:28 <TheJollyRoger> (Step twelve:)
17:56:31 <TheJollyRoger> fastboot flashing unlock
17:56:34 <TheJollyRoger> Then go look at your phone.
17:57:12 <TheJollyRoger> It's going to present you with a context menu "should I unlock?"
17:57:21 <TheJollyRoger> If you've enabled OEM unlocking.
17:57:24 <TheJollyRoger> If you haven't, this command will fail.
17:57:29 <nfpdex[m]> Now there is warning on the phone.
17:57:41 <nfpdex[m]> and "do not unlock the bootloader" is selected as an option
17:57:51 <nfpdex[m]> so I guess I need to change this with the volume keys
17:57:53 <TheJollyRoger> Ok, great, you've enabled OEM unlocking. Toggle between "Do Not Unlock" and "Unlock" using your volume keys. The touchscreen is disabled.
17:57:55 <TheJollyRoger> Yep.
17:58:13 <TheJollyRoger> Tap the power key once to select it - the phone will freeze for a couple seconds and then it will reboot.
17:58:30 <nfpdex[m]> Ok. Now press the power button when "unlock the bootloader" is selected?
17:58:37 <nfpdex[m]> alright
17:58:54 <TheJollyRoger> If you were to reboot it and start the OS, it will give you this ominous "SOFTWARE INTEGRITY NOT GUARANTEED!!" warning in bright orange letters, but that's what we want.
17:59:11 <TheJollyRoger> Since now we can write changes to the phone's system image at will, install new operating systems, etc.
17:59:30 <nfpdex[m]> device state: unlocked
17:59:31 <TheJollyRoger> this command may take a moment to complete.
17:59:43 <TheJollyRoger> Great. Alright, return to your terminal and double check the phone is plugged in very snugly.
17:59:57 <TheJollyRoger> Place it somewhere it won't fall. Depending on your computer this could take a couple minutes.
18:00:11 <nfpdex[m]> ok
18:00:37 <TheJollyRoger> Just to double-check, your fastboot version is at least 30, right?
18:00:43 <TheJollyRoger> If you need to verify, the command is
18:00:46 <TheJollyRoger> fastboot --version
18:01:05 <nfpdex[m]> 30.0.4
18:01:07 <TheJollyRoger> Great!
18:01:50 <TheJollyRoger> Ok. Before I tell you step thirteen, I'm going to stress that it's imperative that while the phone or terminal may seem at times like it's not responding, you /must not/ disturb the computer or the phone until this command runs to completion.
18:01:54 <nfpdex[m]> now ./flash-all.sh  ?
18:02:05 <nfpdex[m]> okay
18:02:10 <TheJollyRoger> Yep. Now step thirteen:
18:02:13 <TheJollyRoger> ./flash-all.sh
18:02:45 <ruddo[m]> <TheJollyRoger "Ok. Before I tell you step thirt"> ^^^ try to not touch the cable or move the phone.  I botched a flash like this once.
18:02:53 <TheJollyRoger> Yeah.
18:03:13 <nfpdex[m]> ok. did it.
18:03:17 <nfpdex[m]> no reaction for now.
18:03:28 <nfpdex[m]> I dont touch anything.^^
18:03:39 <TheJollyRoger> Ok. Let us know when the command finishes, this could take some time and your phone may display strange menus or items on its screen.
18:03:57 <TheJollyRoger> the terminal will report "Finished" when it's done.
18:04:06 <nfpdex[m]> for now the phone is still in the fastboot mode and did not show a difference.
18:04:36 <TheJollyRoger> Yeah. The terminal may show something as it goes. This command can take several minutes, more if your USB connection is slow.
18:05:03 <nfpdex[m]> okay I wait.
18:05:39 <TheJollyRoger> The lead developer recorded a video of the process... let me get it for you so you know what to expect
18:05:53 <TheJollyRoger> https://asciinema.org/a/qVCcAFPUMheCIPejb6EwjXow4
18:06:48 <TheJollyRoger> This is a video of the entire install process, end to end.
18:08:11 <TheJollyRoger> Step ten is at 1:19
18:08:21 <nfpdex[m]> ok. in his case there was an instant reaction when he did the flashing
18:08:33 <TheJollyRoger> Yeah. It's been sped up.
18:08:37 <nfpdex[m]> But it wont take hours?
18:08:43 <TheJollyRoger> It shouldn't.
18:08:45 <nfpdex[m]> its an old thinkpad.
18:08:48 <TheJollyRoger> Oh.
18:08:52 <TheJollyRoger> Um...
18:08:53 <TheJollyRoger> How old?
18:08:54 <nfpdex[m]> haha
18:09:01 <TheJollyRoger> USB 2.0 or USB 3.0?
18:09:04 <nfpdex[m]> an x220
18:09:13 <nfpdex[m]> I guess 2.0
18:09:27 <TheJollyRoger> Oh. Uh... Wow, yeah this could take a long time or it might error out.
18:09:29 <nfpdex[m]> have no more modern machine.
18:09:33 <nfpdex[m]> shit.
18:09:43 <TheJollyRoger> Leave it be. Go get something to drink.
18:10:34 <nfpdex[m]> how much is this stuff unpacked?
18:11:11 <TheJollyRoger> Not sure. It's sparse ext4 images which are themselves compressed within the archive.
18:11:36 <TheJollyRoger> Since each instance of GrapheneOS is signed, verified and bitwise identical.
18:11:53 <nfpdex[m]> hm.
18:13:15 <nfpdex[m]> Thank you for your kind help until now. Hope it will work, I come back then.
18:13:41 <TheJollyRoger> Good luck. I don't know if it'll work.
18:13:48 <TheJollyRoger> Since we assume USB3.
18:14:45 <TheJollyRoger> I have to get going for a bit, but we should be able to help you out.
18:14:58 <TheJollyRoger> Luck.
18:17:46 <horsthansen3103[> i flashed grapheneOS according to the instructions in this video. it worked great.
18:17:46 <horsthansen3103[> https://www.youtube.com/watch?v=gQkb0OAOXoc
18:18:24 <dmctrl[m]> What are your guys' thoughts on using GrapheneOS as a daily driver? Is it well-developed enough to use like that?
18:19:04 <TheJollyRoger> horsthansen3103[: third party installation tutorials are vehemently discouraged here, one of them encouraged removing the safety check from the flash all script.
18:19:17 <TheJollyRoger> Which resulted in someone's phone getting bricked.
18:19:52 <TheJollyRoger> So I'd recommend against following any third-party guides.
18:20:23 <horsthansen3103[> <dmctrl[m] "What are your guys' thoughts on "> i have been using it for 6 months now and am very happy with it.
18:21:17 <malicoye[m]> <dmctrl[m] "What are your guys' thoughts on "> My only phone for a year
18:21:56 <dmctrl[m]> That's really cool to hear
18:29:00 <nfpdex[m]> still nothing going on.^^
18:29:17 <nfpdex[m]> I hope it will work without usb3. Or I need to do it at some friends home.
18:34:38 <TheJollyRoger> nfpdex[m]: hit CTRL-C in the terminal then and wait for it to return to the prompt.
18:34:48 <TheJollyRoger> If it's hung.
18:35:10 <TheJollyRoger> You may need to do it at a friend's home, and then use Attestation Server and Auditor to verify the authenticity post-install.
18:36:29 <TheJollyRoger> Even if your friend's computer isn't the most trustworthy, Auditor will detect if it tries to change the verified boot keying or flashes a bad image.
18:45:36 <nfpdex[m]> I dont know if its "hung". I can move the mouse etc. It just shows no sign of progress in the terminal or on the phone.
18:45:48 <TheJollyRoger> Yeah. The script might be hung.
18:46:09 <TheJollyRoger> I'm sorry nfpdex[m], looks like you might have to find another computer with USB3 :(.
18:46:35 <nfpdex[m]> Understand.
18:47:04 <TheJollyRoger> Cancel it in the terminal window using CTRL-C and let it return to the prompt.
18:48:49 <nfpdex[m]> hm. ctrl + C doesnt do anything.
18:48:59 <nfpdex[m]> just showing ^C
18:51:33 <nfpdex[m]> can I just close the terminal? dont want to do bad things with the phone.
18:52:04 <TheJollyRoger> nfpdex[m]: wait for it. The signal's been sent for it to close.
18:52:08 <TheJollyRoger> It may need to finish what it's doing.
18:54:25 <nfpdex[m]> I hope so. No reaction.
18:54:32 <nfpdex[m]> I am stupid.
18:54:44 <nfpdex[m]> I think I actually have a usb 3 port at this old x220
18:54:50 <nfpdex[m]> there is a blue one.
18:54:59 <nfpdex[m]> but I used a yellow or black one. ...
18:54:59 <TheJollyRoger> Oh splice the mainbrace.
18:55:04 <TheJollyRoger> Use that one. Use the blue one.
18:55:21 <nfpdex[m]> yeah but first I need to end this without breaking the phone.
18:55:26 <nfpdex[m]> it doesnt return to the prompt
18:56:43 <TheJollyRoger> Let me try and see if I can find where it's hanging.
18:57:03 <TheJollyRoger> Nothing's been displayed on the screen, except for the "^C" ?
18:57:21 <nfpdex[m]> yes
18:57:39 <TheJollyRoger> Ok, kill the terminal window.
18:58:00 <nfpdex[m]> ok
18:58:45 <nfpdex[m]> then, I can remove the usb cable now and replug it?
18:58:50 <TheJollyRoger> Yes.
18:59:09 <TheJollyRoger> I'm trying to see where it could've fouled up.
18:59:33 <TheJollyRoger> Prior to flashing stuff onto your phone, it does a few sanity checks.
18:59:49 <TheJollyRoger> Including if it can't find fastboot, or which version of fastboot you're using.
18:59:55 <TheJollyRoger> It seems to be hanging there.
19:00:15 <nfpdex[m]> I have plugged the phone into the blue usb port now.
19:00:18 <nfpdex[m]> and opened a new terminal
19:00:26 <nfpdex[m]> but when running fastboot devices nothing is displayed now.
19:00:48 <TheJollyRoger> Yep, it's not added to your command path. You'll need to go back and add it to your command path first.
19:01:05 <nfpdex[m]> how?
19:01:20 <TheJollyRoger> You'll need to use cd to change the working directory the correct directory where platform-tools is, and add platform-tools back into your command path.
19:01:27 <TheJollyRoger> Where did you save platform-tools to?
19:02:28 <TheJollyRoger> Note something - we don't support Manjaro Linux as an officially supported operating system, so I'm kind of wondering about that now.
19:05:24 <TheJollyRoger> nfpdex[m]: recall when you downloaded platform-tools and used export-path?
19:05:32 <nfpdex[m]> what you mean with platform-tools?
19:05:55 <TheJollyRoger> Ah wait you installed it from manjaro's repositories, right.
19:06:18 <TheJollyRoger> Hang on a moment.
19:06:36 <nfpdex[m]> I installed fastboot directly and the android-tools package from arch
19:06:46 <TheJollyRoger> Ok, do you have the package "android-udev" installed?
19:07:52 <nfpdex[m]> I have now.
19:08:30 <TheJollyRoger> Ok. And "fastboot --version" returns no output?
19:08:35 <TheJollyRoger> Or a "command not found?"
19:09:24 <nfpdex[m]> no fastboot version is fine. it says 30.0.4
19:09:31 <nfpdex[m]> but fastboot device does not show the device anymore
19:09:55 <TheJollyRoger> Ok. Can you do: "sudo udevadm control --reload-rules" for me?
19:10:11 <TheJollyRoger> Or reboot your computer.
19:10:30 <nfpdex[m]> I did this.
19:10:53 <TheJollyRoger> Ok. Still nothing?
19:11:01 <nfpdex[m]> no. I reboot.
19:11:08 <TheJollyRoger> Ok.
19:12:43 <nfpdex[m]> did a reboot
19:12:48 <nfpdex[m]> fastboot devices does not show anything.
19:12:57 <TheJollyRoger> Ok. On both the old and the new port?
19:13:05 <nfpdex[m]> but it has nothing to do with the bootloader being unlocked right?
19:13:18 <TheJollyRoger> No, it won.t
19:14:06 <TheJollyRoger> If worst comes to worst you can always return your phone to the condition you got it in from the factory using the web flash tool at https://developers.google.com/android/images
19:14:12 <nfpdex[m]> it seems to work only on the other port. :(
19:14:57 <TheJollyRoger> In theory we just mush ahead and run the commands in flash-all ourselves, but I really don't want to do that if you're not familiar with the process.
19:15:46 <TheJollyRoger> There are some people here more knowledgeable than I who have other ways of completing the installation, so I strongly suggest remaining in the channel and waiting.
19:16:26 <nfpdex[m]> but when I am bound to use the usb 2.0 port it might not work either right?
19:16:36 <TheJollyRoger> yes, no guarantees.
19:18:57 <TheJollyRoger> nfpdex[m]: if you need to go back and return your phone back to factory, you can try using the Android Flash tool by Google: https://flash.android.com/back-to-public
19:19:15 <TheJollyRoger> As a last resort.
19:19:22 <TheJollyRoger> Which should bring you back to where you started.
19:20:13 <nfpdex[m]> what happens if I quit from the fastbood mode now and reboot?
19:21:14 <TheJollyRoger> Hey wait, I thought you told me that nothing was happening on the phone.
19:21:29 * TheJollyRoger buries his head in his hands.
19:22:21 <nfpdex[m]> no it happens nothing
19:22:22 <nfpdex[m]> but it still is in this fastboot mode
19:22:39 <nfpdex[m]> like in the beginning
19:22:39 <TheJollyRoger> As Burt Gummer from the movie "Tremors" would say: "I feel like I was denied critical need-to-know information." Well what's done is done. As long as the bootloader hasn't been damaged, it should just reboot.
19:22:43 <TheJollyRoger> OK.
19:22:56 <TheJollyRoger> It will give you a warning about the bootloader being unlocked but the operating system should still boot.
19:23:06 <TheJollyRoger> You can re-lock the bootloader again with `fastboot flashing lock`
19:24:14 <nfpdex[m]> ok
19:24:24 <nfpdex[m]> can it be that the cable does not support usb 3?
19:25:45 <dmctrl[m]> Hi, before I buy, just wanted to confirm that GrapheneOS supports the 90Hz refresh rate on the Pixel 4XL out of the box? There was some mention earlier of having to patch it yourself for it to work properly
19:26:42 <TheJollyRoger> nfpdex[m]: unfortunately, I don't know, sorry. We have had issues with substandard cables causing issues with flashing in the past, so definitely don't cheap out on cabling.
19:27:07 <TheJollyRoger> dmctrl[m]: Hang on a sec, I have a 4 here
19:27:27 <dmctrl[m]> I think the 4 is 60Hz right?
19:27:56 <TheJollyRoger> Sorry, I don't know.
19:28:32 <TheJollyRoger> The 4 seems to work fine for me, but if it's a specific question idle here and hopefully someone will be able to answer your question.
19:28:38 <dmctrl[m]> No worries, just looking for confirmation that the 4XL on Graphene OS will work properly with 90Hz and 1440p. If not, then there's no point buying the XL over the regular 4 for example
19:28:49 <TheJollyRoger> Got it.
19:29:05 <TheJollyRoger> Yeah, that I won't be able to answer for you, sorry. Have to stick around and hopefully someone else will.
19:30:31 <nfpdex[m]> hmm. problem.
19:30:55 <nfpdex[m]> on the usb 2 port "fastboot devices" works and shows the device
19:31:03 <nfpdex[m]> but when using fastboot flashing lock
19:31:10 <nfpdex[m]> there is just "waiting for any device"
19:31:21 <TheJollyRoger> Is it plugged in and on fastboot?
19:31:23 <pallaf[m]> osm maps: postition not known yet
19:31:34 <nfpdex[m]> yes
19:31:42 <pallaf[m]> Been like a few minutes already
19:32:00 <pallaf[m]> Has anyone used this for car driving?
19:32:17 <TheJollyRoger> nfpdex[m]: Ok, I honestly don't know what's going on at this point, sorry.
19:32:52 <TheJollyRoger> Your best bet is to stick around and find someone who does, or use the Google Android Flash Tool to revert your P3 to factory-fresh condition and get a fresh start.
19:33:32 <nfpdex[m]> so should I reboot it, even if its unlocked? or should I try to keep it in this fastboot mode until I can use another computer to flash it?
19:34:33 <TheJollyRoger> Do not use it while it's unlocked, you can switch it off, or use the Google ANdroid Flash tool to revert your P3 to factory-fresh condition, and get a fresh start.
19:35:00 <TheJollyRoger> That's all I can suggest here while waiting for someone more knowledgeable than I to answer your question, sorry.
19:38:39 <nfpdex[m]> ok, still thank you.
19:39:48 <TheJollyRoger> Good luck, nfpdex[m]. Sorry I couldn't be of much more help than this... but the good news is, this channel's got a ton of people who are way more knowledgeable than I am, so hopefully they'll be able to help you out.
19:40:00 <faxing[m]> <pallaf[m] "Has anyone used this for car dri"> Yeah - turn on location services on the phone, make sure it has network, files, and location permissions, force stop the app, clear cache, then relaunch
19:40:06 <faxing[m]> that's what works for me
20:23:14 <COVID-1984> how similar are vanadium & ungoogled-chromium?
20:23:29 <COVID-1984> I would assume, if they both remove all the Google stuff, that one would be a fork of the other....
20:26:09 <faxing[m]> Vanadium adds some extra hardening and plays nicely with grapheneos to add an extra layer of protection
20:26:31 <faxing[m]> to my knowledge UGC is less hardened on top of not effectively being able to work in tandem with the system hardening
20:26:40 <TheJollyRoger> COVID-1984: Vanadium is a patchset for Chromium, which takes advantage of the extra memory safety improvements in GrapheneOS. It's designed to blend in with and mimic the exact fingerprint of Chrome on standard Pixels, so as to blend in with them.
20:26:56 <faxing[m]> but I'm not a security expert and it's just what I've heard, so take what I've just said with a grain of salt
20:27:01 <TheJollyRoger> Same here.
20:27:13 <COVID-1984> I wonder if ungoogled-chromium has anything that vanadium doesn't... They've done a lot of work on that.
20:27:46 <COVID-1984> By "has anything" I mean, "has removed something effectively" from privacy-reducing features of chromium.
20:27:59 <faxing[m]> I mean it's good for non graphene phones
20:28:18 <faxing[m]> like calyx for example ugc and bromite are good
20:28:25 <faxing[m]> so they have their place, just not really with graphene
20:41:34 <Anus[m]> Anyone here have Pixel 4a with Graphene?
20:42:05 <Gui_Do> yes - me
20:42:46 <TheJollyRoger> Hello Anus[m], a large number of people here indeed are using Pixel 4as with Graphene, I think at this moment it's probably the device offering the best value for the money.
20:47:31 <blacklight447[m]> *feels left out with his 3A
20:47:46 <TheJollyRoger> Ahoy blacklight447[m]!
20:48:05 <TheJollyRoger> The 3a was a good phone too!
20:48:27 <TheJollyRoger> Heck, I do actually very much like the Google phones, even though I don't like Google.
20:49:28 <Anus[m]> Will the Google search bar go away after installing Graphene?
20:50:42 <TheJollyRoger> Anus[m]: The Google search bar is absent on GrapheneOS. GrapheneOS does not include Google Play nor Google Software Frameworks.
20:51:33 <TheJollyRoger> This is by design. GrapheneOS considers Google Software Frameworks and Play Services to be invasive and will not include them.
20:52:17 <Anus[m]> I have a lot of questions about Graphene, I apologize if it is annoying
20:52:35 <TheJollyRoger> No problem! What can I do for you?
20:52:46 <TheJollyRoger> Be sure to read the FAQ first, since that's probably going to answer a lot of 'em.
20:53:05 <TheJollyRoger> I'm the channel greeter so this is generally the first place I tend to direct people to.
21:00:43 <TheJollyRoger> I have to head out for a bit but will return shortly and I'll see if I can answer any questions you've got when I get back.
21:38:25 <trevqr[m]> Hey all, I have an old Pixel 2 that I was thinking of making a phone strictly for navigation. I know Graphene doesn't have Google Play Services, but can Google Maps work offline with it? My goal is to download maps ahead of time and use it for navigation. And if not, is there a process of restoring the stock OS from a Graphene phone?
21:43:50 <huncho_hearts[m]> Hello
21:59:06 <towelie420[m]> I need some assistance.  I am getting a "fastboot too old" error when trying to run flash-all.bat
22:00:05 <towelie420[m]> I just downloaded the latest version from Google and verified that it's showing version 30.0.5-6877874
22:02:21 <TheJollyRoger> hi trevqr[m], Google Maps requires connectivity to download. For restoring a phone running GrapheneOS from stock--
22:02:26 <TheJollyRoger> Just a sec,
22:02:35 <TheJollyRoger> Ahoy towelie420[m], are you using Windows, and if so, are you using cmd or Powershell?
22:02:45 <towelie420[m]> Powershell
22:03:05 <TheJollyRoger> Hmm. Very strange.
22:03:44 <TheJollyRoger> Think someone else might have to help you, unfortunately.
22:04:04 <TheJollyRoger> trevqr[m]: the easiest way to do it would be to use the Google Android flash tool.
22:04:28 <TheJollyRoger> If you'd like to do it the old-fashioned way, Google host the old images on their website, give me a minute and I will get you some links.
22:07:43 <TheJollyRoger> trevqr[m]: There are images available for Walleye, available here https://developers.google.com/android/images#walleye The process to install them is identical to installing GrapheneOS, with one added step: while the bootloader is unlocked, you must tell the bootloader to erase the GrapheneOS keying. Google's keys are baked into the chip and cannot be removed, so you're safe to run `fastboot
22:07:45 <TheJollyRoger> erase avb_custom_key` while the bootloader is unlocked.
22:09:10 <trevqr[m]> Thanks, this is super helpful!
22:09:15 <TheJollyRoger> If you've forgotten how to do the steps, you can attempt to use the Android Flash Tool --
22:09:30 <TheJollyRoger> https://flash.android.com/back-to-public
22:09:36 <TheJollyRoger> This will get you back to the way your phone used to be.
22:10:23 <trevqr[m]> Yeah, I'll probably try that option first. Might also see if CalyxOS would support Google Maps since it has MicroG and could try to use that as a good compromise between Graphene and Google for navigation.
22:10:42 <TheJollyRoger> trevqr[m]: I hope this helps! Let me know if you run into any difficulty. I can't guarantee I'll be able to have the answers but I've done the process a few times and gone from Graphene to Google and back to Graphene in the past.
22:11:27 <TheJollyRoger> towelie420[m]: I'm trying here on a Windows box with flame, and I'm not able to reproduce the issue, powershell seems to be working here?
22:17:44 <jayell[m]> hello. i am having trouble getting graphene onto my new pixel 4a. had copperhead on a 2 until james highjacked that project.:( i am running mint 19.1 (i know its not a recommended distro but ubuntu 20.04 fails with inramfs issues). I have latest platform tools, fastboot version is 30.0.5-6877874. the device is visible to lsusb, appears as
22:19:10 <TheJollyRoger> Ahoy jayell[m]!
22:19:43 <TheJollyRoger> Ah crud... mint is definitely not supported, do you have a Windows 10 box?
22:19:58 <TheJollyRoger> Your message got cut off at "the device is visible to lsusb, appears as--" and the rest is missing.
22:20:04 <TheJollyRoger> Could you paste the rest past that point please?
22:21:33 <nfpdex[m]> I will go to a friend tomorrow. Will it work to flash graphene while using a live distro?
22:22:31 <jayell[m]>  * hello. i am having trouble getting graphene onto my new pixel 4a. had copperhead on a 2 until james highjacked that project.:( i am running mint 19.1 (i know its not a recommended distro but ubuntu 20.04 fails with inramfs issues). I have latest platform tools, fastboot version is 30.0.5-6877874. the device is visible to lsusb, appears as Bus 002 Device 062: ID 18d1:4ee2 Google Inc. Nexus 4 (debug). adb also sees it
22:22:31 <jayell[m]> until i am in the bootloader of course. however, fastboot devices shows null output and fastboot flashing unlock hangs with "< waiting for any device >". i have set OEM unlocking so unlock_ability should be set to 1. any ideas
22:22:35 <TheJollyRoger> hi nfpdex[m], I can't make any guarantees about hinky homebrewed setups, honestly, but the good news is you won't have to: you should use attestation.app to verify the integrity of the install after completion.
22:23:28 <TheJollyRoger> Remember, each installation of GrapheneOS is bitwise identical, signed, and keyed on the phone itself, and the Attestation Server has the copy of the genuine verified boot public keys.
22:23:34 <jayell[m]> sorry, didnt mean to hit return. just was gonna create some white space but i guess thats not how things work here
22:24:17 <cicadasolver[m]> hey nfpdex: , i don't think it is a good idea
22:24:18 <TheJollyRoger> So even if you were flashing from a public terminal, as long as you have a computer you trust that can reach attestation.app, make an account there, and log in, OR another device that you can obtain the Auditor app on, you can still verify the integrity of the installation.
22:24:56 <TheJollyRoger> So even if your friend is running Windows 10 and you don't trust Microsoft, you'll be alright because Microsoft is not acting as a trusted third party if you know how to use Auditor.
22:25:35 <cicadasolver[m]> yes, jollyroger is right
22:26:10 <jayell[m]> jollyroger, i edited but can post more info if u need
22:26:22 <TheJollyRoger> Hi jayell[m] sure, give me a moment and let me catch up.
22:26:38 <nfpdex[m]> ok thank you. will find a way.
22:26:42 <TheJollyRoger> jayell[m], have you installed the correct udev rules?
22:26:57 <TheJollyRoger> if you haven't, I can walk you through the process.
22:27:04 <TheJollyRoger> A good way to test if you have or haven't is this metric:
22:27:55 <TheJollyRoger> If you were to run the process as root and it works, then it hangs when you try to run it as an unprivileged user, then there's a pretty good chance that udev hasn't been insturcted to allow you fastboot through.
22:28:10 <TheJollyRoger> nfpdex[m]: good luck, shipmate!
22:28:19 <jayell[m]> please do. i appears to file manager also, read somewhere (lots of bs on the modern web based internet) that i did not need to add anything to rules
22:28:50 <TheJollyRoger> jayell[m]: also, quick sanity check...
22:29:00 <TheJollyRoger> You're using fastboot while the phone is connected and is in fastboot mode, correct?
22:29:02 <jayell[m]> so i could sudo the fastboot?
22:29:09 <jayell[m]> correct
22:29:35 <TheJollyRoger> You can try `sudo fastboot devices` and see if that reaches it. Note that fastboot may need to be in the command path for root for that to work.
22:29:55 <cicadasolver[m]> you can read about setting correct udev rules for fastboot on official android website
22:30:13 <cicadasolver[m]> developer.android.com
22:30:55 <TheJollyRoger> jayell[m]: make sure that you haven't got any other versions of fastboot installed on that computer.
22:31:14 <jayell[m]> ok. can you also tell me how to permantly add platform tools to my user path. add that EXPORT line to my .profile?? been a while
22:31:17 <TheJollyRoger> jayell[m]: I need to really stress this because the version of fastboot that comes with mint/ubuntu/debian is known for bricking devices
22:31:49 <TheJollyRoger> Sure. Can you find out where platform tools has been downloaded to on your computer?
22:32:57 <jayell[m]> where do i look for other versions. "which fastboot" outputs this "/home/jayell/grapheneos/platform-tools/fastboot"
22:33:05 <TheJollyRoger> Great!
22:33:20 <TheJollyRoger> Ok, open up your ~/.bashrc file in a text editor, and add to the very bottom:
22:33:45 <jayell[m]> so i am pretty sure i am running the latest that i recently added
22:33:57 <TheJollyRoger> export PATH="/home/jayell/grapheneos/platform-tools:$PATH"
22:34:01 <TheJollyRoger> You can add:
22:34:23 <TheJollyRoger> #Note to self: This has been added to set the fastboot variable correctly
22:34:29 <TheJollyRoger> If you want so you don't forget.
22:35:11 <TheJollyRoger> Once you've  done that, open a new terminal window and try `fastboot --version` to test that it set your .bashrc correctly.
22:35:30 <TheJollyRoger> Note that this only does this for *your* profile, it won't do it for root.
22:35:46 <TheJollyRoger> For adding the udev rules, I'm going to just get you a quick command, give me a moment:
22:36:57 <TheJollyRoger> wget https://raw.githubusercontent.com/M0Rf30/android-udev-rules/master/51-android.rules && sudo mv 51-android.rules /etc/udev/rules.d/ && udevadm control --reload-rules
22:37:08 <TheJollyRoger> Whoops, sorry, ignore the previous line:
22:37:13 <TheJollyRoger> wget https://raw.githubusercontent.com/M0Rf30/android-udev-rules/master/51-android.rules && sudo mv 51-android.rules /etc/udev/rules.d/ && sudo udevadm control --reload-rules
22:39:07 <jayell[m]> new terminal gives proper output for --version
22:39:27 <TheJollyRoger> Great, it's working!
22:40:11 <TheJollyRoger> That previous command "wget https://raw.githubuser..." will automatically download the latest master commit from the maintainer of the Android udev Rules, then sudo move it to your udev rules directory, then sudo reload the rules.
22:40:29 <TheJollyRoger> You /may/ have to reboot your PC depending on if mint allows you to reload the rules on the fly.
22:41:44 <jayell[m]> how can i test that w/o rebooting?
22:42:02 <jayell[m]> gonna do fastboot devices of course
22:42:22 <TheJollyRoger> plug in your phone running fastboot and yes, fastboot devices it up.
22:42:29 <anupritaisno1[m]> TheJollyRoger: Debian packages udev rules
22:43:03 <TheJollyRoger> anupritaisno1[m]: ah whoops.
22:43:26 <jayell[m]> i min, accidently let it boot into google
22:43:32 <TheJollyRoger> Shoot. I have to scoot. I'll be back shortly >_<.
22:44:39 <anupritaisno1[m]> TheJollyRoger: also idk what you are doing
22:44:51 <jayell[m]> very good. i also need to check on well repair guy. ill be back soon
22:45:00 <anupritaisno1[m]> If the user is on an unsupported distribution you dont make them place files in their system
22:46:02 <TheJollyRoger> anupritaisno1[m]: Sorry. I'll stop and hold here then.
22:49:54 <jayell[m]> now i see output from fastboot devices!! got serial number and 'device'
22:50:41 <cicadasolver[m]> isn't it better to follow https://developer.android.com/studio/run/device.html to set up udev rules?
22:59:07 <anupritaisno1[m]> cicadasolver: unless you know what you are doing you should not place files in your rootfs
22:59:30 <anupritaisno1[m]> Most distributions will refuse support if you do that
23:05:13 <huncho_hearts[m]> If I want to install GrapheneOS on my Huawei p30
23:06:16 <cicadasolver[m]> huncho_hearts:  unfortunately, you would have to you rely on yourself
23:06:33 <cicadasolver[m]> huawei p30 is not an officially supported device
23:06:53 <huncho_hearts[m]> Moto z2
23:07:20 <cicadasolver[m]> moto z2 is also not officially supported, please read the FAQ
23:07:25 <strcat[m]> https://grapheneos.org/faq#device-support
23:10:40 <jayell[m]> jolly roger didnt "make" me place files on my system. i am blowing this mint install away as soon as i can get ubuntu 20.04 to work. :) everything worked fine.
23:12:59 <jayell[m]> so glad to be off iphone, been working out of country and was shocked to return to my copperhead phone to find 'copperhead updater has stopped' .guess that has been happening for years?my son was using it and never informed me.
23:14:13 <jayell[m]> now another question. when should i insert the sim? do i need cell data or wifi to complete graphene install?
23:14:37 <strcat[m]> no don't need internet access just to complete the install
23:14:42 <strcat[m]> you can set it up any time
23:14:44 <anupritaisno1[m]> <jayell[m] "now another question. when shoul"> There is no part of the setup wizard that needs internet
23:15:09 <anupritaisno1[m]> We just ask you to set it up so you don't have to deal with it later
23:16:17 <jayell[m]> great. it asks "do you want to use cellular data during setup?" so i was not sure what it may need
23:19:56 <ephemeralang[m]> Is there any way to get mobile data use working again? Besides just removing the SIM repeatedly and hoping for the best?
23:22:03 <bungeetaco[m]> Hey so, I just re-installed GrapheneOS on my device, and it looks like pressing the Nextcloud restore option crashes the SetupWizard. I had to restart my device to finish the setup, and I'm still trying to figure out how to restore my previous backup. Sounds like it needs the app for that option to work. Thought I'd mention it here.
23:31:19 <bungeetaco[m]> Does anyone know if you can enable MTP file transfer while still in the SetupWizard? There's an option to restore a backup from the device itself, but that would require copying my restore files from my Nextcloud server to my phone, which I can't seem to do while setting up the device. I'm also not sure if there's a way to restore from a backup after the device is already setup.
23:33:21 <jayell[m]> re: flashing - - got all  [okay]s but several 'archive does not contain' messages, i assume this is normal. some were .sig files missing
23:49:50 <anupritaisno1[m]> jayell: it is fine
23:52:23 <TheJollyRoger> Hi jayell[m], don't forget to relock the boot loader. That's the last step, but it's one crucial one to completing the installation.
23:52:27 <TheJollyRoger> The installation is not finished without it.
23:54:14 <Dylanger[m]> https://www.xda-developers.com/google-android-runtime-art-mainline-module-android-12/
23:54:14 <Dylanger[m]> Jesus
23:54:37 <Dylanger[m]> > If Google makes it mandatory for OEMs to preload a Google-signed ART module (likely delivered in the form of an APEX)
23:54:56 <Dylanger[m]> Wouldn't this totally kill AOSP, and Graphene along with it
23:55:03 <Dylanger[m]> Or any user created OS
