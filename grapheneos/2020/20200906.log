00:34:08 <owlthebird[m]> Is there a way to hide "no sim card - emergency calls only" notice at the top left of the screen when phone is locked?
07:32:37 <w1seasf[m]> OK guys. so #*21# showed a number not mine diverting calls and sync. best to assume line was compromised right?
07:50:39 <owlthebird[m]> *#21# is call forwarding. ##002# disables it.
08:00:39 <w1seasf[m]> yeah. I tried disabling it via the 002 but it was still there after.
08:00:59 <w1seasf[m]> sim card is now gonearehaaa ðŸ˜‚
08:50:06 <darkharbingeroft> Would it be possible to have a custom line of devices designed specifically for Graphene OS?
08:50:47 <darkharbingeroft> There are ODM makers online that do custom devices, though presumably they only have access to Mediatek processors
08:51:31 <Ultron[m]> I don't think the project is at a scale where it can focus on hardware manufacturing.
08:51:55 <darkharbingeroft> Examples:
08:51:55 <darkharbingeroft> https://www.cnoems.com/smartphones
08:51:55 <darkharbingeroft> https://www.neway.mobi/smart-phone/
08:53:05 <darkharbingeroft> I'd back one such device on kickstarter or indiegogo
08:54:32 <darkharbingeroft> hell, I'll back 5 or even 10 of them if I could
08:55:50 <Ultron[m]> There is a lot more for GrapheneOS to do on the software side. It may be an area to focus once they finish that. It will give a better idea of hardware requirement. It's difficult to make a device which can match the Pixels.
08:56:02 <Ultron[m]> But then again I am no one to decide.
09:12:50 * elem22[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/crYFyxHYxUdSQbZzmwXdSuAr/message.txt >
09:17:03 <d64qoc8432li8p9o> <elem22[m] "> <@cn3m:privacytools.io> > w/o "> Yes
09:17:12 <d64qoc8432li8p9o> The Network permissions
09:48:23 <d64qoc8432li8p9o> Doesn't prevent it from opening links on browsers through interapp communications
10:21:13 <owlthebird[m]> Is there a way to change icon theme pack
10:21:13 <owlthebird[m]>  for grapheneos
11:24:01 <dazinism> Can use a different launcher which supports icon packs, but theres security/privacy considerations involved with trusting a different launcher
11:30:37 <dazinism> Noticed Shade Launcher on the izzyondroid FDroid repo supports icons
11:31:50 <Ultron[m]> Shade Launcher is a decent launcher to use. It does not have any internet permission.
11:33:36 <dazinism> Not tried it. Looks like it does use or ask for some, somewhat sensitive,  permissions
11:34:53 <dazinism> Also the ability to act as the interface between a user and their apps being launched could be abused.
11:35:19 <dazinism> (Even what app is launched)
11:35:53 <dazinism> Seen some other launchers that look much more scary though
11:36:09 <Ultron[m]> <dazinism "Not tried it. Looks like it does"> You don't need to provide accessibility service unless you plan to use gesture like double tap to turn screen off. 3rd party apps cannot use such gestures without accessibility service.
11:36:37 <Ultron[m]> Also it does not ask for accessibility service by default.
11:36:57 <dazinism> Ah, didnt even notice that it could use accessibility services
11:37:43 * Ultron[m] uploaded an image: image.png (16KiB) < https://matrix.org/_matrix/media/r0/download/matrix.org/CyqGtlRHXKHuflTIrFeVVnOE/image.png >
11:37:52 <Ultron[m]> Which permission from this is sensitive?
11:41:42 <dazinism> Wheres that list from Damaged_Ultron_By_DNSGRAY_Polar_Bear_Beasts
11:41:59 <Ultron[m]> https://android.izzysoft.de/repo/apk/amirz.shade
11:43:26 <dazinism> ...I was looking at the list via fdroid app
11:44:29 <Ultron[m]> It's not on F-Droid main repo. You might have the izzydroid repo added in F-Droid.
11:45:03 <dazinism> Accessibility is real bad (but you can avoid granting it)
11:45:04 <dazinism> Write settings isn't great
11:45:04 <dazinism> I try and always avoid granting storage
11:46:52 <Ultron[m]> It does not use storage permission. I am not sure why it's there. It does not also ask for storage permission.
11:47:02 <dazinism> In fdroid it list 'this app can appear on top of other apps' which also isn't great
11:47:21 <dazinism> Guess thats system alert window
11:47:26 <dazinism> From your list
11:47:41 <Ultron[m]> <dazinism "In fdroid it list 'this app can "> Do you understand this is a launcher which itself is an overlay?
11:48:03 <Ultron[m]> It does not have network permission. So I doubt it can do anything malicious here.
11:50:46 <Ultron[m]> Write settings is okay. Write secure settings is bad.
11:52:03 <dazinism> On its own its not terrible, except  accessibility is real bad (also normalising its acceptance among folks that don't know better).
11:52:03 <dazinism> Guess the other potential issues is how trustworthy is the dev? could they be exploited? could the app be exploited?  The app could work with other apps to exploit devices
11:53:05 <Ultron[m]> Developer have another launcher on Play Store and F-Droid. https://play.google.com/store/apps/details?id=amirz.rootless.nexuslauncher
11:53:11 <dazinism> For lots of folks a lot of that is probably not realistically a big concern
11:53:26 <Ultron[m]> 1 million+ downloads.
11:56:19 <d64qoc8432li8p9o> > <@DzzzzzzR:matrix.org> On its own its not terrible, except  accessibility is real bad (also normalising its acceptance among folks that don't know better).
11:56:20 <d64qoc8432li8p9o> > Guess the other potential issues is how trustworthy is the dev? could they be exploited? could the app be exploited?  The app could work with other apps to exploit devices
11:56:20 <d64qoc8432li8p9o> Yeah, it's concerning.
11:56:21 <dazinism> Theres apps with loads of downloads that have been found to have terrible weaknesses. It being open source possibly makes that a bit less likely - although who's checking?
11:56:41 <d64qoc8432li8p9o> Super permissions in a simple app is not a good sign
11:57:00 <Ultron[m]> But it's not asking for them.
11:57:14 <Ultron[m]> If you need to use some gestures then there is no way in Android 10?
11:57:32 <d64qoc8432li8p9o> <Ultron[m] "If you need to use some gestures"> Use the default launcher.
11:57:46 <Ultron[m]> The app is not asking you for network permission which most apps do.
11:58:02 <d64qoc8432li8p9o> Ipc
11:58:10 <d64qoc8432li8p9o> That needs no network permission
11:58:31 <Ultron[m]> But that goes for any app
11:58:49 <d64qoc8432li8p9o> Not all apps has accessibility services, what do you mean?
11:59:15 <Ultron[m]> But who is asking you to grant accessibility service to it?
11:59:19 <Ultron[m]> It's not asking by default.
11:59:47 <d64qoc8432li8p9o> <Ultron[m] "It's not asking by default."> Well, if a function does ask for it
12:00:30 <Ultron[m]> <d64qoc8432li8p9o "Well, if a function does ask for"> There is no option in the setting or in the first launch app asks for it.
12:00:43 <Ultron[m]> You need to go in accessibility service and enable. Description mention what feature accessibility service enables it.
12:00:44 <d64qoc8432li8p9o> <Ultron[m] "There is no option in the settin"> So does Bitwarden
12:03:39 <d64qoc8432li8p9o> <Ultron[m] "You need to go in accessibility "> Welp, one point better than Bitwarden lowkey encourages it
12:05:20 <d64qoc8432li8p9o> But I still said it is bad
12:05:44 <d64qoc8432li8p9o> It is not meant to be used normally
12:06:38 <d64qoc8432li8p9o> It's for people with disabilities
12:06:41 <dazinism> An app which uses accessibility services has got to be a pretty attractive target for attackers
12:07:24 <d64qoc8432li8p9o> <dazinism "An app which uses accessibility "> This.
12:07:42 <d64qoc8432li8p9o> At least there is mitigations to those tho
12:07:51 <dazinism> Either trying to exploit on device (probably not to easy with this launcher) or via its dev
12:09:39 <dazinism> Having control of an app with accessibility service permission granted is close to full persistent device owning
12:10:02 <d64qoc8432li8p9o> <dazinism "Having control of an app with ac"> Yeah
12:10:09 <d64qoc8432li8p9o> Only way to kill it is to reflash?
12:10:28 <Ultron[m]> It works around the limitation of Android for custom launchers. It's up to you to whether you want to use it or not.
12:10:37 <Ultron[m]> <d64qoc8432li8p9o "Only way to kill it is to reflas"> Can disable accessibility service.
12:10:42 <dazinism> Wrote about accessibility services recently(ish)
12:10:47 <dazinism> https://hub.libranet.de/channel/and-priv-sec
12:11:07 <Ultron[m]> If you feel you have been hijacked then it's always good to do a clean flash.
12:11:51 <dazinism> Auditor is one of the few defences against   it
12:12:23 <shdudbdjdj[m]> Will the update to Android 11 be fast after the offical release?
12:12:44 <erhcetua[m]> will be ready when it will be ready
12:14:48 <dazinism> In the past it's taken significantly longer than how quickly normal monthly updates land
12:14:51 <d64qoc8432li8p9o> <shdudbdjdj[m] "Will the update to Android 11 be"> Can you build an OS?
12:15:14 <d64qoc8432li8p9o> Maybe you can help in trying out the android 11 kernel in android 10
12:15:21 <d64qoc8432li8p9o> For porting R
12:15:38 <d64qoc8432li8p9o> Want to see it faster? Participate on it. Not meant to be rude tho
12:15:51 <d64qoc8432li8p9o> <erhcetua[m] "will be ready when it will be re"> But this is also true
12:17:49 <shdudbdjdj[m]> <d64qoc8432li8p9o "Can you build an OS?"> Sadly no. Not enough power on my computer. I cant participate.
12:18:18 <d64qoc8432li8p9o> > <@shdudbdjdj:matrix.org> Sadly no. Not enough power on my computer. I cant participate.
12:18:18 <d64qoc8432li8p9o> > Just wanted to ask because i did not used Graphene by the last new bigger Android Versions
12:18:18 <d64qoc8432li8p9o> So yeah, better wait and sit patiently then.
12:18:41 <d64qoc8432li8p9o> There is on 10.
12:19:22 <d64qoc8432li8p9o> Seriously, this is an open source project with limited devs imho
12:19:39 <Ultron[m]> <dazinism "Having control of an app with ac"> But again the point is you are not being forced to grant it. Also IPC exploits are mostly targeted. You are looking at a chain exploit. An malicious app / js exploit need to first get out of chromium sandbox to be able to abuse the service.
12:19:40 <d64qoc8432li8p9o> One way to see faster changes and new features is to contribute
12:20:11 <d64qoc8432li8p9o> <Ultron[m] "But again the point is you are n"> Encouraging to use an app that asks for it is an orange flag
12:20:13 <d64qoc8432li8p9o> Sorry for that
12:20:47 <d64qoc8432li8p9o> I advise to wait. The devs are working overtime anyways
12:20:47 <Ultron[m]> I personally use an accessibility service to auto input stuff on my screen.
12:20:47 <d64qoc8432li8p9o> (Not me)
12:20:58 <d64qoc8432li8p9o> (Not a dev myself I mean)
12:21:22 <shdudbdjdj[m]> <d64qoc8432li8p9o "One way to see faster changes an"> Do you have hardware recommondations for Building an OS? I would like to participate if i can afford new Hardware in the next months
12:21:23 <Ultron[m]> <d64qoc8432li8p9o "Encouraging to use an app that a"> Again the app does not ask for it.
12:22:32 <d64qoc8432li8p9o> <shdudbdjdj[m] "Do you have hardware recommondat"> At least 16gb ram + at least 240gb ssd nvme on building cpu
12:22:58 <Ultron[m]> 240GB is sufficient?
12:23:09 <d64qoc8432li8p9o> <Ultron[m] "240GB is sufficient?"> At least
12:23:13 <shdudbdjdj[m]> <d64qoc8432li8p9o "At least 16gb ram + at least 240"> Thanks, i will keep this in mind (:
12:23:23 <d64qoc8432li8p9o> <shdudbdjdj[m] "Thanks, i will keep this in mind"> Those are bare minimum tho
12:23:37 <d64qoc8432li8p9o> More storage is better always
12:23:48 <d64qoc8432li8p9o> 500gb probably would be more recommended
12:24:05 <d64qoc8432li8p9o> <Ultron[m] "240GB is sufficient?"> For AOSP + Vanadium then deleting it yea
12:25:17 <d64qoc8432li8p9o> Vanadium took 50-80GB on my first try
12:25:22 <d64qoc8432li8p9o> But it was on weak pc so
12:25:33 <d64qoc8432li8p9o> Took me a whole day to build Vanadium alone
12:26:01 <shdudbdjdj[m]> <d64qoc8432li8p9o "Those are bare minimum tho"> Are good gameing pcs a orientation for the Hardware that i would need?
12:26:23 <d64qoc8432li8p9o> I can't tell myself, for I don't own yet a good PC
12:26:31 <d64qoc8432li8p9o> I only have like 4gb ram
12:26:40 <d64qoc8432li8p9o> And subpar CPU
12:27:20 <Ultron[m]> <shdudbdjdj[m] "Are good gameing pcs a orientati"> Somewhat yes.
12:27:55 <Ultron[m]> You need a multi core zen2 cpu with ssd and decent ram.
12:28:57 <Kisswhich> Hello anyone here ?I'm using Pixel 4 and I want to know whether the camera issue get fixed
12:29:04 <d64qoc8432li8p9o> <Ultron[m] "You need a multi core zen2 cpu w"> Zen2?
12:29:34 <d64qoc8432li8p9o> <Ultron[m] "Again the app does not ask for i"> Well, correction, that has or requires that permission at some poiny
12:29:54 <Ultron[m]> Cloud Solutions are expensive. That could have been used for building.
12:30:00 <d64qoc8432li8p9o> <d64qoc8432li8p9o "Well, correction, that has or re"> No accessibility services is better, as long as possibke.
12:30:06 <d64qoc8432li8p9o> <Ultron[m] "Cloud Solutions are expensive. T"> Cloud RAM?
12:30:17 <d64qoc8432li8p9o> (Kinda needs way higher bandwidth)
12:30:34 <Ultron[m]> <d64qoc8432li8p9o "Zen2?"> AMD Zen2 architecture.
12:31:11 <Ultron[m]> <Kisswhich "Hello anyone here ?I'm using Pix"> What was the issue?
12:31:21 <Ultron[m]> <d64qoc8432li8p9o "No accessibility services is bet"> Certainly.
12:31:53 <Ultron[m]> <d64qoc8432li8p9o "Cloud RAM?"> I have 300 USD worth of credits from Google's Free Cloud Tier Programme. I am just looking to do something with it.
12:32:29 <d64qoc8432li8p9o> Nonissue I guess if you'll just build their OS
12:32:38 <d64qoc8432li8p9o> assuming it can be done
12:33:04 <Kisswhich> is pixel 4 suitable for graphenOS?
12:33:28 <Ultron[m]> It is suitable.
12:33:36 <d64qoc8432li8p9o> <Kisswhich "is pixel 4 suitable for graphenO"> Besides flickering (according to them), it should be fine, but better ask GrapheneOS Pixel 4 users
12:34:02 <d64qoc8432li8p9o> <Ultron[m] "It is suitable."> Nice
12:34:30 <Kisswhich> And I want to know the camera issue mentioned on the website.. is that fixed?
12:35:49 <d64qoc8432li8p9o> Try searching from here if you can find an answer: freenode.logbot.info/grapheneos
13:14:33 <SECLUDED-M3[m]> I would like Daniel Micay to read this but I don't know if he will but I want a suggestion for GrapheneOS to add Xprivacylua like permission disabling without the need of root. Almost exact like Xprivacylua.
13:15:17 <d64qoc8432li8p9o> Depends on threat model but it seems to be reasonable
13:15:42 <d64qoc8432li8p9o> FOREGROUND_SERVICES
13:15:42 <d64qoc8432li8p9o> RECEIVE_BOOT_COMPLETED
13:16:16 <d64qoc8432li8p9o> Two of seemingly normal permissions that has potential to be exploited by normal API functions (some sort of logic bug
13:16:22 <d64qoc8432li8p9o> architectural)
13:16:25 <SECLUDED-M3[m]> GrapheneOS succeeded full Security level but Privacy, not a lot. Xprivacylua like app is an important permission feature app.
13:16:26 <d64qoc8432li8p9o> rather
13:16:37 <madaidan[m]> The only thing xprivacylua does properly is ruining the security model
13:17:11 <d64qoc8432li8p9o> https://invidious.xyz/watch?v=EuInUW77CPo
13:17:29 <SECLUDED-M3[m]> <madaidan[m] "The only thing xprivacylua does "> I am only saying that almost same permission disabling without risking the security and without root.
13:17:44 <SECLUDED-M3[m]> Is this possible?
13:17:46 <d64qoc8432li8p9o> Yeah, I get it, just these two permissions to be disabled, if possible and has a concrete threat model and reason
13:18:13 <d64qoc8432li8p9o> <SECLUDED-M3[m] "I am only saying that almost sam"> Maybe not as of the moment?
13:18:55 <d64qoc8432li8p9o> Not sure, it's just one video
13:19:09 <SECLUDED-M3[m]> How can I suggest this to Daniel Micay?
13:19:14 <d64qoc8432li8p9o> <d64qoc8432li8p9o "Not sure, it's just one video"> And there is precautionary mitigations anyways
13:19:20 <d64qoc8432li8p9o> <SECLUDED-M3[m] "How can I suggest this to Daniel"> Pull request
13:19:35 <madaidan[m]> <SECLUDED-M3[m] "I am only saying that almost sam"> It's not the same. Xprivacylua is privacy theater that is easily bypassed and the way it's usually implemented (root and xposed) is catastrophic to the security model.
13:19:39 <SECLUDED-M3[m]> From where?
13:19:51 <Ultron[m]> > <@d64qoc8432li8p9ouijtv:matrix.org> FOREGROUND_SERVICES
13:19:51 <Ultron[m]> > RECEIVE_BOOT_COMPLETED
13:19:51 <Ultron[m]> MIUI have an option to disable auto boot for apps. I guess that is same as receive boot completed?
13:20:03 <d64qoc8432li8p9o> <Ultron[m] "> <@d64qoc8432li8p9ouijtv:matrix"> Probably
13:20:10 <d64qoc8432li8p9o> But is the implementation robust?
13:20:17 <Ultron[m]> <d64qoc8432li8p9o "But is the implementation robust"> It is.
13:20:25 <d64qoc8432li8p9o> <SECLUDED-M3[m] "From where?"> Permission model in SELinux?
13:20:27 <Ultron[m]> But we cannot borrow that since it is a closed source app.
13:20:47 <d64qoc8432li8p9o> <Ultron[m] "It is."> We can't tell without seeing the source and fully pentesting it
13:20:51 <Ultron[m]> Right now I just use app opps to disable received boot completed and clipboard permission.
13:20:57 <madaidan[m]> <SECLUDED-M3[m] "How can I suggest this to Daniel"> GrapheneOS will never include features that do nothing other than give a false sense of privacy.
13:21:01 <SECLUDED-M3[m]> > <@madaidan.:matrix.org> It's not the same. Xprivacylua is privacy theater that is easily bypassed and the way it's usually implemented (root and xposed) is catastrophic to the security model.
13:21:01 <SECLUDED-M3[m]> > If you don't want an app to have access to certain information, the only thing you can do is revoke the permission.
13:21:01 <SECLUDED-M3[m]> It doesn't block the tracking app in the permissions completely. I might be wrong here.
13:21:35 <Ultron[m]> <d64qoc8432li8p9o "We can't tell without seeing the"> I have tested it for a long time. Apps didn't start on boot.
13:22:13 <d64qoc8432li8p9o> <madaidan[m] "GrapheneOS will never include fe"> Am I misunderstanding it, or disabling something like RECEIVE_BOOT_COMPLETED or FOREROUND_SERVICES and exposing it as user permission just complicates the privacy and security toggling and issues?
13:22:13 <blueuser[m]> <madaidan[m] "GrapheneOS will never include fe"> how about that network toggle will apps can still use the download manager and webview to access internet ðŸ˜€
13:22:24 <d64qoc8432li8p9o> <blueuser[m] "how about that network toggle wi"> Basically ipc problems
13:22:38 <d64qoc8432li8p9o> Some tried to gate the intent by permissions but...
13:22:53 <d64qoc8432li8p9o> Has to be found out all of the intents that send the link to browser
13:23:08 <d64qoc8432li8p9o> And tie it to network permissions
13:23:24 <Ultron[m]> Just run this command in adb shell to disable auto start permission.
13:23:30 <Ultron[m]> `appops set <package> BOOT_COMPLETED deny`
13:23:30 <d64qoc8432li8p9o> <Ultron[m] "I have tested it for a long time"> Wish we can just reverse engineer it
13:23:30 <erhcetua[m]> i'd like to help with official grapheneOS store for apps
13:23:54 <erhcetua[m]> given i'm done with my course, i'll have some spare time to contribute
13:24:14 <Ultron[m]> I think GOS just need an appops manager.
13:24:26 <cat7life[m]> Meow ppl
13:24:30 <Ultron[m]> All permissions from clipboard to auto boot are there in appops.
13:24:33 <d64qoc8432li8p9o> <Ultron[m] "`appops set <package> BOOT_COMPL"> We want this without adb , like just in permission tab
13:24:52 <madaidan[m]> <blueuser[m] "how about that network toggle wi"> The documentation clearly mentions that the network toggle isn't perfect and should not be used as a reliable means of preventing data exfiltration. There are plans to restrict IPC; the network toggle is just a first step.
13:25:34 <SECLUDED-M3[m]> cat7life https://matrix.to/#/!omAJrepvwSfkXJrqbK:matrix.org/$15993980703820SBgZt:privacytools.io?via=privacytools.io&via=matrix.org&via=tchncs.de
13:25:56 <d64qoc8432li8p9o> <madaidan[m] "The documentation clearly mentio"> But iirc it doesn't at least access the download manager right, since it only access the low network sockets?
13:26:26 <cat7life[m]> SECLUDED-M3: element message window popup after i clicked on link: "Failed to load timeline position
13:26:26 <cat7life[m]> Tried to load a specific point in this room's timeline, but you do not have permission to view the message in question."
13:27:23 <madaidan[m]> <d64qoc8432li8p9o "But iirc it doesn't at least acc"> Yes, the download manager can't be abused since that checks for the INTERNET permission.
13:28:23 <Ultron[m]> <d64qoc8432li8p9o "We want this without adb , like "> Just make a shell script and execute through ADB. I mean you have flashed the rom from the same pc.
13:28:28 <madaidan[m]> Nothing in the base system can be abused other than Vanadium AFAIK. Using a separate work profile for the app and removing the network permission for both Vanadium and the app you wish to deny network access should work.
13:28:41 <Ultron[m]> > <@d64qoc8432li8p9ouijtv:matrix.org> We want this without adb , like just in permission tab
13:28:41 <Ultron[m]>  * Just make a shell script and execute through ADB. I mean you have flashed the rom from the same pc. You trust your pc right?
13:28:45 <SECLUDED-M3[m]> <cat7life[m] "SECLUDED-M3: element message win"> It's not the same. Xprivacylua is privacy theater that is easily bypassed and the way it's usually implemented (root and xposed) is catastrophic to the security model.
13:28:54 <madaidan[m]> There are also plans to add a permission check to Vanadium.
13:33:28 * cat7life[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/ylLPjFQYeWQclUZdJUJVMLlo/message.txt >
13:35:43 <cat7life[m]> As for the OS 'Graphene' - do those devs really think that all privacy conscious people are just suddenly going to 'sell their new Samsung Note10+' which is rooted with XPrivacyLUA and seems to be fine practically speaking - just to go buy a google pixel phone ?
13:35:44 <cat7life[m]> If the graphene devs really believe in their OS project, it's realyl up to them to compile at least a alpha/beta version for Samsung users
13:36:07 <cat7life[m]>  * As for the OS 'Graphene' - do those devs really think that all privacy conscious people are just suddenly going to 'sell their new Samsung Note10+' which is rooted with XPrivacyLUA and seems to be fine practically speaking - just to go buy a google pixel phone ?
13:36:07 <cat7life[m]> If the graphene devs really believe in their OS project, it's really up to them to compile at least a alpha/beta version for Samsung users
13:36:40 <cat7life[m]> or at the very minimum give basic compile instructions, like the way GitHub does
13:37:02 <cat7life[m]> Im all for security - but an OS i cant use is useless to me
13:37:17 <d64qoc8432li8p9o> > <@cat7life:matrix.org>  * As for the OS 'Graphene' - do those devs really think that all privacy conscious people are just suddenly going to 'sell their new Samsung Note10+' which is rooted with XPrivacyLUA and seems to be fine practically speaking - just to go buy a google pixel phone ?
13:37:17 <d64qoc8432li8p9o> > If the graphene devs really believe in their OS project, it's really up to them to compile at least a alpha/beta version for Samsung users
13:37:17 <d64qoc8432li8p9o> Yeah, first find a Samsung phone where you can relock your bootloader with custom/alternative OS
13:37:39 <d64qoc8432li8p9o> Second, does the hardware meet the security standards?
13:38:17 <Ultron[m]> Samsung hardware does not meet the security standards of GrapheneOS. Also you don't need to use xprivacy or graphene os to regain your privacy.
13:38:26 <d64qoc8432li8p9o> Third, please do not argue "you didn't get hacked"
13:38:26 <Ultron[m]> What are you blocking/restricting through XPrivacy Lua?
13:38:26 <d64qoc8432li8p9o> This in no way reduce the inherent flaws of the app itself.
13:39:33 <d64qoc8432li8p9o> It's like saying, hey my ATM is not insecure or not private because it didn't get stolen because I left my ATM outside in a safe place, so I should always do it?
13:39:39 <Ultron[m]> > <@d64qoc8432li8p9ouijtv:matrix.org> Third, please do not argue "you didn't get hacked"
13:39:40 <Ultron[m]> > This in no way reduce the inherent flaws of the app itself.
13:39:40 <Ultron[m]> Same as My cousin rash drive and have never been in an accident. But that does not mean he will never be in accident because of his poor driving habit.
13:40:39 <cat7life[m]> Security issue's crop up in 2 main ways
13:40:40 <cat7life[m]> 1. Devs finnd them, e.g. exploits etc etc
13:40:40 <cat7life[m]> 2. Something awful happens - and it's investigated
13:41:23 * d64qoc8432li8p9o sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/HiYDzpeFkaNzsNAjHyCUZrIJ/message.txt >
13:41:48 <d64qoc8432li8p9o> Architectural flaws are independent on the exploit rates.
13:42:09 <cat7life[m]> If people here really think that XPrivacyLUA is flawed, or highly suscetible, then i really i think the best thing you can do is register on XDA and speak to this man:
13:42:09 <cat7life[m]> https://forum.xda-developers.com/xposed/modules/xprivacylua6-0-android-privacy-manager-t3730663
13:42:45 <cat7life[m]> "By M66B, Recognized Developer"- speak to THIS MAN
13:43:16 <d64qoc8432li8p9o> Take this with a grain of salt
13:43:21 <d64qoc8432li8p9o> But consider reading this
13:43:24 <d64qoc8432li8p9o> https://chefkochblog.wordpress.com/2018/04/09/shhh-dont-say-a-word-against-xprivacylua/
13:43:37 * Ultron[m] uploaded an image: image.png (280KiB) < https://matrix.org/_matrix/media/r0/download/matrix.org/GHJRpoXwWWpKMmsuUQxgvkWk/image.png >
13:43:44 <blueuser[m]> you can't run xprivacylua on grapheneos so problem is solved anyways
13:43:47 <Ultron[m]> I got this photo from your techlore post.
13:44:10 <cat7life[m]> Did you know that the it took a huge collaberative effect of about 2 years for android devs to actually create Xprivacy ?
13:44:10 <cat7life[m]> it was a massive feat - and a big win against Google's 'flawed' OS
13:44:36 <Ultron[m]> Most of the above you don't need root or GrapheneOS.
13:45:25 <d64qoc8432li8p9o> <Ultron[m] "image.png"> Hey did you know you can deny network and sensor permissions without root? It was one reason (root access) Linux is insecure
13:45:28 <d64qoc8432li8p9o> But off topic
13:45:33 <cat7life[m]> blueuser: I cant run Graphene OS anyway - so i guess XPrivacyLUA is still my best bet...
13:45:59 <Ultron[m]> XPrivacy is obsolete.
13:46:07 <cat7life[m]> reading the article now, give me time - i will post back afterwards
13:46:30 <d64qoc8432li8p9o> <cat7life[m] "reading the article now, give me"> Read it with a neutral mind
13:47:04 <cat7life[m]> <Ultron[m] "XPrivacy is obsolete. "> No, its' not 'obsolete' it's sustained over 6 years now....and still going - Pitty Graphene does not exist for Aamsung Ay ?
13:47:18 <cat7life[m]> > <@theultron:matrix.org> XPrivacy is obsolete.
13:47:19 <cat7life[m]>  * No, its' not 'obsolete' it's sustained over 6 years now....and still going - Pitty Graphene does not exist for Samsung Ay ?
13:48:10 <Ultron[m]> <cat7life[m] "No, its' not 'obsolete' it's sus"> I meant to say Android 10 have protection for identifiers for default, you can disable sensor, internet, clipboard and all others from AppOps without root and without GrapheneOS.
13:48:51 <blueuser[m]> so what's the point of all this discussion, grapheneos don't run on samsung and xprivacy don't work on graphene, that's totally off topic. Plus from that screenshot xprivacy is mostly obsolete with android 10
13:49:08 <d64qoc8432li8p9o> <cat7life[m] "No, its' not 'obsolete' it's sus"> Like I said, try just flashing AOSP with locked bootloader
13:49:18 <d64qoc8432li8p9o> if it cant it's a dealbreaker
13:49:39 <d64qoc8432li8p9o> It breaks the security model with unlocked bootloader
13:49:49 <d64qoc8432li8p9o> Lack of verified boot to check the OS' integrity
13:49:58 <d64qoc8432li8p9o> Lack of rollback protection for downgrade attacks.
13:50:15 <d64qoc8432li8p9o> <blueuser[m] "so what's the point of all this "> Yeah, offtopic, please join the offtopic room
13:50:46 <d64qoc8432li8p9o> `/join #grapheneos-offtopic`
13:51:04 <d64qoc8432li8p9o> Also, do yourself a favor and read the documentation in grapheneos.org and AOSP
13:52:21 <d64qoc8432li8p9o> Obsolete or not, any apps that need root is never encouraged in any Android family OS, and that should not even be an argument.
13:52:22 <d64qoc8432li8p9o> Android is built under the concept of the lowest privilege anyways
13:57:28 <Ultron[m]> cat7life: I will advise you to relock the bootloader, debloat the stock spyware via adb, use netguard vpn firewall, use appops to control most permission and use samsung secure folder/multi user for less trusted apps. You have a high end samsung device which already receive day 1 security patches. Don't break the security model by using tools which you really don't / have non roots way for it.
14:07:05 <owlthebird[m]> Sorry to ask offtopic question, kind of new, got element app on graphene os, and just noticed a couple messages up, that one can join #grapheneos-offtopic. How exactly do I do that? I tried search for #freenode_#grapheneos-offtopic:matrix.org but no results. Again sorry for asking an off topic question about offtopic channel..
14:09:23 <d64qoc8432li8p9o> <owlthebird[m] "Sorry to ask offtopic question, "> Type /join, then the room name
14:12:20 <owlthebird[m]> <d64qoc8432li8p9o "Type /join, then the room name"> Thank you
15:09:30 <strcat[m]> Ultron: clipboard access is only available to the focused app (not foreground, just focused) and the configured keyboard and disabling the clipboard from working with an app seems like far too impractical of an approach
15:09:42 <strcat[m]> write access isn't much of an issue anyway
15:09:58 <strcat[m]> particularly since it's just the focused app
15:10:21 <strcat[m]> disabling read access would require keyboard functionality to enter data from the clipboard with a keyboard paste function to be practical
15:10:36 <strcat[m]> in which case why would this be an app specific toggle instead of a global change
15:10:52 <strcat[m]> permission toggles are not a good approach in general
15:13:14 <Ultron[m]> I see. What about in the scenario where I am browsing an app like facebook but I don't have anything to paste in it? It can still read my clipboard and transmit my last copied text.
15:13:37 <Ultron[m]> Facebook is just an example. It could be any app with internet connectivity.
15:14:42 <strcat[m]> read what I just wrote above
15:15:03 <strcat[m]> and it doesn't really matter if the app has direct internet connectivity, your threat model doesn't make sense
15:15:17 <strcat[m]> an app doesn't need direct internet connectivity to leak your data
15:15:24 <anupritaisno1[m]> strcat: afaik any app can write to clipboard any time?
15:15:25 <anupritaisno1[m]> Just not read from it
15:15:28 <strcat[m]> no
15:15:49 <anupritaisno1[m]> Then how do password managers provide a wipe clipboard functionality?
15:16:58 <strcat[m]> well our clipboard changes are not ported forward
15:17:10 <strcat[m]> but I'm talking about how it was set up to work in GrapheneOS
15:17:17 <anupritaisno1[m]> Ah
15:17:24 <strcat[m]> in AOSP it just blocks fetching contents unless app is focused
15:17:40 <anupritaisno1[m]> Which tbh seems okay
15:17:46 <strcat[m]> Ultron: if you want the background restrictions they are already exposed
15:17:55 <strcat[m]> Ultron: select the app in apps and notifications
15:17:57 <anupritaisno1[m]> We'd be breaking apps if we removed write functionality it seems
15:17:59 <strcat[m]> go to battery
15:18:02 <strcat[m]> turn on background restrictions
15:18:11 <strcat[m]> which disables 'run in background' and again really does not do what you think it does
15:18:44 <strcat[m]> those low-level permissions don't offer any meaningful privacy controls and should not be direct toggles for users because it would be misleading
15:19:04 <anupritaisno1[m]> Background is just running without a persistent notification
15:19:17 <strcat[m]> not quite
15:19:19 <anupritaisno1[m]> Show a notification, no more restrictions
15:19:44 <anupritaisno1[m]> <strcat[m] "not quite"> How so
15:20:09 <strcat[m]> anyway you can turn on background restriction via standard AOSP UI
15:20:15 <strcat[m]> it's not intended as a privacy feature
15:20:27 <strcat[m]> you don't need to manually use app ops with adb shell
15:20:38 <strcat[m]> it doesn't do what people seem to think and is more accurately described as a battery saving feature
15:20:42 <anupritaisno1[m]> <strcat[m] "not quite"> Yeah but strcat what about this
15:20:54 <anupritaisno1[m]> What does background mean then
15:21:02 <strcat[m]> the low level name of non-user-facing permissions do not reflect their privacy implications
15:21:07 <strcat[m]> if any
15:21:20 <strcat[m]> those exist for static analysis of apps and opportunistic attack surface reduction
15:21:23 <strcat[m]> and are only for developers
15:21:45 <strcat[m]> they aren't supposed to be listed out like F-Droid does in the end user UI like that
15:22:07 <strcat[m]> in fact permissions are not supposed to be listed at install time except for legacy apps since they are not granted at that point
15:22:19 <strcat[m]> you're confusing under the hood things with the user-facing / user relevant permission model
15:22:28 <strcat[m]> and are misinterpreting them based on assumptions that aren't correct
15:23:19 <strcat[m]> the only permissions intended for users are the standard ones that need to be requested + have toggles
15:23:52 <strcat[m]> the others are only designed for use by developers as explained above and people here often misinterpret what they do and imagine them to be useful as a privacy toggle when they are not
15:24:10 <strcat[m]> if you don't know what it does assume it doesn't have a use case for you instead of the opposite
15:29:51 <strcat[m]> user-facing/user-relevant permissions need to be requested from the user in modern Android, they are not granted at install time
15:30:26 <strcat[m]> from a user perspective those non-"dangerous" permissions listed in the manifest are an implementation detail and none of them is designed to be a privacy/security feature
15:30:29 <strcat[m]> that is not what they are for
15:30:42 <strcat[m]> they do not do what you think you do based on assumptions from their name
15:31:04 <Ultron[m]> I am not sure if I agree with you totally but I won't make more use of your time. I mean even GOS made a toggle for internet permission out of App Ops. I'll try to read the documentation again and understand.
15:31:17 <strcat[m]> that has nothing to do with app ops
15:31:27 <strcat[m]> and the Network permission toggle does not work the way people like yourself interpret it
15:31:59 <strcat[m]> an app not having network access does not mean it's safe to grant it access to sensitive data if you don't trust it with that data
15:32:38 <anupritaisno1[m]> If you don't trust an app why is it on your system?
15:32:46 <anupritaisno1[m]> What's the threat model here?
15:32:49 <strcat[m]> if you don't know how those 'normal' permissions work you aren't in a position to "disagree" with me
15:34:13 <strcat[m]> and you already have features like the background restriction toggle for each app
15:34:23 <strcat[m]> you don't need adb shell for that
15:34:51 <strcat[m]> and it's not intended for that stuff to be used by hand via adb shell other than development
15:35:05 <strcat[m]> developer tools is for developers, not a production device, and anything with that is unsupported
15:37:25 <Ultron[m]> <anupritaisno1[m] "If you don't trust an app why is"> It's not about trusting or not. Aren't we suppose to be working with the principle of least privilege? I have many apps which I find trusted yet I don't see the need for them to access the internet. One app particularly have network permission to fetch the documentation and some minor stuff. I really don't see the need to give this app internet permission even if
15:37:25 <Ultron[m]> it's trusted. Who knows which app may become rogue in the future?
15:38:08 <strcat[m]> what I am saying is that taking away network access doesn't prevent an app from leaking sensitive data
15:38:22 <anupritaisno1[m]> Ultron: I've had enough tbh
15:38:22 <strcat[m]> so taking away network access does not mean it is safe to grant it access to sensitive data
15:38:30 <strcat[m]> or enter sensitive data in it, whatever
15:40:08 <strcat[m]> and the reason GrapheneOS has to assume every app needs access to miscellaneous sensors is the lack of an existing permission (Android just disallows sensor access in the background - that's it)
15:40:10 <Ultron[m]> <strcat[m] "and you already have features li"> Does this work properly? Only proper implementation I have seen in MIUI which just kills the app in background.
15:40:30 <anupritaisno1[m]> "Proper"
15:40:31 <strcat[m]> it is a proper implementation of what it is meant to do
15:40:36 <strcat[m]> which is not what you seem to think
15:40:43 <anupritaisno1[m]> And miui
15:40:46 <anupritaisno1[m]> I'll laugh
15:40:54 <strcat[m]> it toggles the app ops relevant to that - and it is a battery saving feature
15:41:40 <strcat[m]> it is not marked as a privacy feature, and app ops are not a privacy feature but rather an internal implementation detail providing part of the implementation for some higher level access control features
15:42:38 <strcat[m]> some of which are power saving features not privacy
15:43:35 <strcat[m]> restricting how much an app is allowed to run in the background and when it can start may improve privacy as a side effect but it not primarily intended for that or designed for that and you should only be looking at how it's labelled at a high level
15:43:56 <strcat[m]> not trying to interpret what it does based on your assumptions about low-level names for internal machinery
15:44:43 <strcat[m]> the way the Settings UI describes it is accurate
15:47:53 <strcat[m]> F-Droid's design just predates modern Android where permissions are not granted at install-time but rather need to be requested and have toggles
15:48:00 <strcat[m]> it's a bad app
15:48:04 <strcat[m]> in many ways
15:48:12 <anupritaisno1[m]> BTW there's a privacy feature you've never heard of Ultron
15:48:26 <Ultron[m]> <anupritaisno1[m] "I'll laugh "> Sure. You can laugh all you want. For you - everything except your implementation is weak!
15:48:35 <anupritaisno1[m]> Keep your device on your table and start running
15:48:35 <anupritaisno1[m]> Don't stop running
15:48:38 <strcat[m]> for the most part the Settings UI does this properly other than exposing some developer information via the menu
15:49:12 <anupritaisno1[m]> <Ultron[m] "Sure. You can laugh all you want"> Well you did show your true self did ya
15:50:58 <anupritaisno1[m]> I've seen this almost as a pattern in 2 communities now. You come without knowledge and start arguing with developers there who clearly do have it
15:52:00 <Ultron[m]> I have seen your baseless arguement/criticism on the DivestOS Thread and even on the telegram matrix. You call things evil/weak/not as strong as glassrom and what not! I really don't want to enter another arguement with this. So please end the discussion.
15:52:03 <anupritaisno1[m]> This is third community I'm seeing the exact same pattern
15:52:30 <Ultron[m]>  * I have seen your baseless arguement/criticism on the DivestOS Thread and even on the telegram matrix. You call things evil/weak/not as strong as glassrom and what not! I really don't want to enter another arguement with you. So please end the discussion.
15:53:46 <anupritaisno1[m]> Ultron: yes everybody is wrong and you're right okay
15:54:04 <anupritaisno1[m]> There's a leave button up there really advise you to use it
15:54:13 <anupritaisno1[m]> I'm off for now
15:56:09 <anupritaisno1[m]> <strcat[m] "for the most part the Settings U"> Afaik it does let you see all the permissions
15:56:43 <strcat[m]> hidden beyond a developer toggle
15:57:07 <strcat[m]> and really it should separate that more and make it clear it's a different thing
15:57:17 <strcat[m]> it just has to do with it originating from before they distinguished
16:10:35 <Ultron[m]> strcat: Are there 23k - 63k security vulnerabilities in AOSP?
16:11:43 <strcat[m]> don't know what you're talking about
16:11:51 <strcat[m]> where do you get some kind of weird number like that
16:12:51 * Ultron[m] uploaded an image: image.png (65KiB) < https://matrix.org/_matrix/media/r0/download/matrix.org/vtpHKJOjVKsKkEawgTdIBRtI/image.png >
16:13:54 <strcat[m]> not about AOSP and not on-topic
16:23:35 <strcat[m]> blueuser: what you said about the Network permission is completely untrue - it doesn't just deny network access but rather also revokes the permission, and in particular what you said about the WebView doesn't make sense since it is a library used by apps with a sandboxed renderer process with no access beyond the ability to communicate with the broker that runs as part of the app process
16:24:19 <erhcetua[m]> i'm trying to find the issue related to first party store for apps, does it exists ?
16:24:25 <blueuser[m]> thanks strcat
16:24:36 <strcat[m]> erhcetua:  in the logs for this channel
16:25:12 <strcat[m]> blueuser: the issue with it is that there are apps not enforcing INTERNET as a permission check on APIs they provide for accessing the internet
16:25:18 <strcat[m]> it is largely an issue with third party apps
16:25:24 <strcat[m]> the OS itself checks where it is needed
16:25:57 <strcat[m]> it can happen with anything but it's common with this since it's not a standard user-facing permission but rather just an under-the-hood thing app developers don't care to deal with
16:26:30 <strcat[m]> I am sure plenty of apps do stuff like requesting read access to contacts and then exposing it to other apps without checking for that permission, similarly to that, it's just not nearly as common of an issue
16:27:18 <strcat[m]> you can see in the Vanadium tracker there is an issue about addressing this which would finish the feature in terms of everything in the scope of GrapheneOS
16:27:40 <strcat[m]> and opening a URL in the browser is not at all unrestricted internet access
16:28:01 <strcat[m]> should still be gated somewhat based on the permission, should just do something like prompting for apps without it
16:30:03 <anupritaisno1[m]> erhcetua: yes what do you need
16:30:51 <erhcetua[m]> i'd just like to contribute to it, and eventually make it a reality, as i'm planning to buying an iphone SE next week
16:30:59 <erhcetua[m]> i won't use my sargo any longer
16:31:04 <erhcetua[m]> so if it i can help somehow
16:31:06 <anupritaisno1[m]> Hmm got it
16:31:11 <erhcetua[m]>  * so if i can help somehow
16:31:28 <anupritaisno1[m]> erhcetua: you can contact cn3m if you need help
16:32:16 <Ultron[m]> <strcat[m] "blueuser: what you said about th"> Is that revoking android.permission.INTERNET?
16:34:07 <erhcetua[m]> anupritaisno1: thanks
16:34:28 <Ultron[m]> I am just trying to understand why revoking clipboard permission is not right, not user facing permission, intended only for developers but revoking internet permission which is also not user facing is right.
16:34:45 <Ultron[m]> Don't want to drag this discussion but I am not able to understand.
16:34:47 <strcat[m]> I clearly explained above
16:34:52 <strcat[m]> read what I wrote in that conversation
16:35:09 <strcat[m]> if you don't understand, read it until you do, I don't have more to say about it
16:35:33 <strcat[m]> btw there is no clipboard permission
16:35:40 <strcat[m]> user-facing or otherwise
16:36:43 <strcat[m]> this is what I wrote above:
16:36:44 * strcat[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/TTZWrWMmqtSQrtXngvmBbzww/message.txt >
16:37:16 * strcat[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/IIzYKNegyEGJjtiMSfqgLcFy/message.txt >
16:37:43 <anupritaisno1[m]> Even lineage dropped those by now
16:37:43 <strcat[m]> I don't really see why you think we would add a clipboard read permission when it's a bad approach to the issue
16:38:12 <strcat[m]> it is impractical and adding a toggle that has to be disabled for each app is not a good approach
16:38:22 <anupritaisno1[m]> Basically lineage used to have this thing where they stubbed out the actual request APIs
16:38:24 <strcat[m]> compared to just changing it to require pressing paste
16:38:42 <strcat[m]> and not offering automated clipboard read access
16:39:07 <strcat[m]> don't really see why we would add a permission for something like that, not good design
16:39:22 <anupritaisno1[m]> So like send a blank contact list to an app, an invalid location to a location app, silently telling an app a clipboard access succeeded and returning blank data and so on
16:39:29 <anupritaisno1[m]> They eventually dropped it
16:39:48 <anupritaisno1[m]> There were several issues with this implementation
16:40:18 <Ultron[m]> My query is not related to the clipboard access. You told me it's not right to change any app ops permission via adb since they are not user facing permission. But GOS is doing the same by allowing a toggle for internet? Even internet is not user facing and not considered dangerous permission by Google.
16:40:22 <strcat[m]> it's really not relevant beyond what I said
16:40:27 <anupritaisno1[m]> Example the permissions you set would randomly reset and they conflicted with the original permissions model
16:40:30 <strcat[m]> app ops are not permission
16:40:34 <strcat[m]> internet access is not an app op
16:40:45 <anupritaisno1[m]> They dropped it for good on Q
16:40:47 <strcat[m]>  * app ops are not permissions
16:41:21 <anupritaisno1[m]> <Ultron[m] "My query is not related to the c"> It is considered dangerous on grapheneos. Read the code
16:41:24 <Ultron[m]> <strcat[m] "app ops are not permission"> Ah okay!
16:41:27 <d64qoc8432li8p9o> How about stopping and/or revoking FOREGROUND_SERVICES RECEIVE_BOOT_COMPLETED permissions on apps with Accessibility, Device Admin permissions
16:41:27 <d64qoc8432li8p9o> They are normal permissions for a reason, but is there a feasible way to code an app to only start at boot with user permission or warn them by tying their API to some UI?
16:41:32 <strcat[m]> Ultron: as I explained above the Network permission does not really do what people seem to think and gives them a false sense of privacy/security which is actively causing harm
16:41:45 <d64qoc8432li8p9o> not sure if it is right approach, but I'd like to ask
16:41:48 <strcat[m]> so I do not really think that it is a good example of a feature
16:42:01 <strcat[m]> it does what it is supposed to do
16:42:14 * Ultron[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/WbvaOkNjeTklWgWOdcMyudCu/message.txt >
16:42:20 <anupritaisno1[m]> @d64qoc8432li8p9ouijtv:matrix.org: don't
16:42:22 <strcat[m]> it doesn't fit into the model of how permissions are really meant to work, i.e. gating bulk access to sensitive data
16:42:27 <anupritaisno1[m]> You'll break apps
16:42:44 <strcat[m]> @d64qoc8432li8p9ouijtv:matrix.org: please read the conversation above
16:43:00 <d64qoc8432li8p9o> <strcat[m] "@d64qoc8432li8p9ouijtv:matrix.or"> Will do
16:43:02 <anupritaisno1[m]> There is a case where a background application can run almost indefinitely
16:43:27 <d64qoc8432li8p9o> ^ Kinda an architectural/design issue?
16:43:37 <anupritaisno1[m]> That is if some other app relies on it
16:43:38 <strcat[m]> @d64qoc8432li8p9ouijtv:matrix.org: you're making bad assumptions and you don't have an actual threat model
16:43:50 <strcat[m]> you are also misunderstanding what those things do
16:44:09 <strcat[m]> @d64qoc8432li8p9ouijtv:matrix.org: you already have a background restriction toggle per-app from the standard AOSP Settings UI
16:44:13 <anupritaisno1[m]> Example Google camera using microg PR YouTube vanced keeping it always running while it runs
16:44:19 <strcat[m]> not a security/privacy feature
16:44:20 <anupritaisno1[m]> * Example Google camera using microg or YouTube vanced keeping it always running while it runs
16:44:54 <strcat[m]> if you make an app into an accessibility service it can see and change the whole UI and the only way to even detect that it's there is Auditor or safe mode
16:45:04 <strcat[m]> whatever you're talking about is not relevant
16:45:16 <d64qoc8432li8p9o> Sorry for that and thanks for the answer
16:45:34 <strcat[m]> if you grant a device manager app ownership of a profile, it owns the profile, not you
16:45:41 <strcat[m]> if you grant it ownership of the device, it owns the device, not you
16:45:45 <strcat[m]> so you are not in charge, it is
16:46:02 <strcat[m]> so the question becomes about how it can restrict you, who is not the owner of the profile / device
16:46:05 <strcat[m]> not how you can restrict it
16:46:38 <strcat[m]> people should not generally be using any non-built-in accessibility service, or any device manager
16:47:07 <strcat[m]> unless you have a disability that necessitates trusting an accessibility service
16:47:58 <strcat[m]> @d64qoc8432li8p9ouijtv:matrix.org: also the Network permission being disabled does not make it magically safe to grant an app access to sensitive data and if you have that impression you don't have a correct threat model
16:48:16 <anupritaisno1[m]> The password manager api
16:48:21 <strcat[m]> it's a big part of why it's harmful to include it
16:48:41 <anupritaisno1[m]> Is still pretty limited
16:48:41 <strcat[m]> and the same applies to the misguided ideas about background restrictions (which you already have available via the Settings app, you just probably don't realize it)
16:48:57 <anupritaisno1[m]> The only reason I need bitwarden accessibility
16:49:50 <strcat[m]> on Android, apps can't access sensors, microphone or camera in the background despite being granted those permissions by the user and location has to be explicitly granted for background use anyway
16:52:07 <strcat[m]> and if you're using device managers, draw over other apps or accessibility services that's your mistake - those things should not generally be used, and are among the obvious things that would be removed in a locked down version (along with only allowing apps via the first party repo that are signed with first party keys)
16:52:32 <strcat[m]>  * and if you're using device managers, draw over other apps or accessibility services that's your mistake - those things should not generally be used, and are among the obvious things that would be removed in a locked down version - along with the option of going further only allowing apps via the first party repo that are signed with first party keys
16:53:01 <Ultron[m]> Okay. Thanks!
16:54:31 <strcat[m]>  * and if you're using device managers, draw over other apps or accessibility services that's your mistake - those things should not generally be used, and are among the obvious things that would be removed in a locked down version. An even more locked down version could go further by only allowing apps via the first party repo that are signed with first party keys
16:57:15 <d64qoc8432li8p9o> <strcat[m] " * and if you're using device ma"> Cool, and thanks
16:57:25 <d64qoc8432li8p9o> (Sorry for that too)
17:18:48 <owlthebird[m]> Using mullvad VPN service via wireguad app on pixel 4. How am I able to run Orbot Tor service along side of it for conversations.im app?
17:18:48 <owlthebird[m]> I have no issues with this on my pixel 3a gos phone as I have split tunneling on mullvad app and excluded Orbit from mullvad VPN tunnel.
17:18:48 <owlthebird[m]> Unfortunately the pixel 4 mullvad VPN account number got misplaced so only have wireguard app and config files.
17:20:19 <jpds> owlthebird[m]: Conversations has an option to go via Tor under Expert Settings
17:20:53 <jpds> No need to do any split tunnelling at all or exclude apps
17:29:01 <aeonsolution[m]> erhcetua: if you're interested in helping do testing and development for Pixel 3a (sargo), the device I'm maintaining. try to do this as step 0: https://grapheneos.org/build#development-branch
17:29:20 <aeonsolution[m]> to do*
17:29:51 <owlthebird[m]> Right. But Orbort won't connect if wireguard app is enabled and running. Just want to use Orbot for conversations.I'm and a few other things on pixel 4.
17:29:52 <owlthebird[m]> I'll just enable orbot as VPN and disable wireguard for now, will have to buy new mullvad account then for that pixel 4.
17:30:12 <jpds> owlthebird[m]: You don't need to run Orbot as a VPN service
17:31:49 <owlthebird[m]> Oh.. But then won't my IP be exposed for everything but conversations or does Orbot do a system wide gateway sort of speaking
17:31:54 <jpds> It can run just fine at the same time as WireGuard - but anyway, this is offtopic
17:32:26 <jpds> owlthebird[m]: Orbot gives you a SOCKS proxy port
17:32:54 <owlthebird[m]> Okay. Thank you
17:52:16 <kmart> hi
17:52:51 <kmart> anybody with rough idea how much work is there to make it work on MTK-based devices?
18:25:06 <cn3m[m]> <kmart "anybody with rough idea how much"> MTK devices are a security nightmare would be a waste of time
18:25:34 <cn3m[m]> and they don't even support bootloader unlocking most of the time, expecting relocking the bootloader out of them is a pipedream
20:11:02 <dazinism> <erhcetua[m] "i'm trying to find the issue rel"> Its at https://github.com/GrapheneOS/os_issue_tracker/issues/94
20:11:39 <dazinism> I think the idea is to base it on the GrapheneOS updater.
20:12:17 <dazinism> renlord was planning on making a start but not sure they've had time
23:01:50 <kmart> cn3m[m]: i've made a generic bootloader unlock for all mtk chips
23:02:56 <kmart> & i have access to all the source code, from romcode all the way up to the OS
23:03:09 <kmart> but im thinking of swapping AOSP for something better
23:16:02 <sandroteem[m]> Today anybody here who can help me with the Auditor app? Can I prove that GrapheneOS is running on my device with the Auditor app?
23:18:07 <eveningbeetle[m]> <sandroteem[m] "Today anybody here who can help "> You need a secondary device with auditor app installed to verify your phone with GOS
23:20:47 <sandroteem[m]> I know. My question is not how to check it. It is a question of the possibilities of verification as such.
23:22:19 <sandroteem[m]> If I found a GrapheneOS phone on the street (not trusted), can I check if GrapheneOS actually runs on it?
23:22:33 <sandroteem[m]> <eveningbeetle[m] "You need a secondary device with"> GOS?
23:23:47 <YouCanGhostMyKat> <sandroteem[m] "I know. My question is not how t"> You can read how the Auditor app works here: https://attestation.app/about
23:25:35 <sandroteem[m]> I know. I read it.
23:25:51 <sandroteem[m]> But I still have this question.
23:26:21 <YouCanGhostMyKat> <sandroteem[m] "I know. I read it."> So basically from my understanding you are checking if your GOS has been compromised.
23:27:51 <sandroteem[m]> I think it is trusted on first use. So I can not proof in my example, that GrapheneOS is actually on the device. I am not a dev and want certainty in this question.
23:28:04 <sandroteem[m]> <YouCanGhostMyKat "So basically from my understandi"> What GOS stands for?
23:28:23 <YouCanGhostMyKat> <sandroteem[m] "What GOS stands for?"> GrapheneOS.
23:28:28 <sandroteem[m]> Ah okay
23:30:14 <sandroteem[m]> <YouCanGhostMyKat "So basically from my understandi"> Yes.
23:31:15 <sandroteem[m]> However, my question is if I can verify from an untrusted device or if I have to trust the device from the begging.
23:31:28 <sandroteem[m]>  * However, my question is if I can verify from an untrusted device or if I have to trust the device from the beginning.
23:32:04 <sandroteem[m]> Is my question clear?
23:32:15 <sandroteem[m]>  * Is my question clear to understand?
23:33:12 <jpds> Actually, it isn't - 1) why would you verify anything from an untrusted device 2) what do you mean by 'from the beginning'?
23:35:04 <sandroteem[m]> For example a friend flashing GOS and give me the phone (untrusted in the sense that I don't flashed it). Can I verify GOS on it?
23:35:30 <jpds> Yes, easiest way would be to register the device with an account on attestation.app
23:36:22 <sandroteem[m]> So there is no chain of trust necessary?
23:36:45 <jpds> Registering the device will upload the chain of trust
23:36:51 <sandroteem[m]> I can get a GOS phone from an untrusted source and I can verify by myself if GOS is on it?
23:39:02 <jpds> Not sure how you plan to do that by yourself without another reference point
23:39:23 <jpds> Hence why registering the device is probably the easiest option
23:40:21 <sandroteem[m]> Is the attestation from verified from the first registration or actually before it?
23:40:54 <sandroteem[m]>  * Is the attestation verified from the first registration or actually before it?
23:41:38 <jpds> The first registration uploads the verified boot hash
23:43:33 <sandroteem[m]> Can you give me more info about it please?
23:44:42 <jpds> It's all described in https://github.com/GrapheneOS/Auditor/blob/17/app/src/main/java/app/attestation/auditor/AttestationProtocol.java#L119-L192
23:46:06 <sandroteem[m]> <jpds "The first registration uploads t"> I will check it out thanks
23:47:04 <sandroteem[m]> To understand your point: Verification security is not depended on the first check?
23:54:02 <sandroteem[m]> To sum up my question: I can proof, that GOS is on the device even if I don't flashed it by myself, right?
