00:02:29 <qyo3462572445[m]> My gripe with iOS is lack of easy and longterm side loading. I don't like having to be reliant on an app store controlled by anyone, let alone a big company.
00:08:47 <qyo3462572445[m]> Because all it takes is apple not "approving of" an app or the company behind it, and bam...bye bye app.
00:16:43 <nickcalyx[m]> Apple also wont allow GPL licensed apps,in its store
00:19:04 <qyo3462572445[m]> They also are very hostile to anything that isn't in their walled garden. I get its a company and a company's job is to make money but I'm personally not a huge fan.
00:20:32 <concat[m]> > They also are very hostile to anything that isn't in their walled garden
00:20:32 <concat[m]> Examples?
00:25:57 <nickcalyx[m]> Their explanation about GPL apps is that the GPL license is fundamentally incompatible with the appstore license
00:26:18 <qyo3462572445[m]> concat only icloud photos run in the background to automatically upload pictures while things like nextcloud need location access to or you need to manually refresh the upload. No changing of default applications. The whole no easy side loading is in with that too because they want you to download it from their app store
00:27:37 <concat[m]> qyo3462572445 It was just unclear what you meant by "walled garden", anything inside the appstore or just the default applications.
00:29:38 <qyo3462572445[m]> concat more broadly in the apple ecosystem. You can't just put your own music on the iPhone music app either unless you go through their process is another example.
00:30:19 <qyo3462572445[m]> I'm just not a fan of all the rules and regulations they slap onto iOS.
00:30:50 <concat[m]> qyo3462572445 Sure, I've admittetly liked the Android ecosystem much more.
00:30:54 <qyo3462572445[m]> I rather be able to make my own decisions, good or bad, over not even being allowed to make any decisions.
00:32:14 <concat[m]> I'm not like that, personally I'd like to get my hands on as much freedom as possible rather than none. Preferably having the most user freedom is optimal but sometimes that could jeopardize security models though probably not for this particular case exactly.
00:35:36 <concat[m]> Ideally letting your users create their own decisions is proper design, I'm on board with that.
00:36:47 <concat[m]> If I were an OS designer the most I'd attempt to slightly would be anything that'll harm privacy or security where they'd know it's not a good thing to do but they can proceed after knowing such.
00:37:43 <madaidan[m]> <concat[m] "I'm not like that, personally I'"> You can have both security and freedom.
00:38:53 <concat[m]> <madaidan[m] "You can have both security and f"> Did I ever contradict this or are you just adding an additional comment to my statement?
00:39:59 <concat[m]> <concat[m] "If I were an OS designer the mos"> Obviously Apple is quite different in that regard, they kind of want to suck you into their own world and regulate things their way. Which, for most people who just want privacy/security and do particular tasks isn't always a real world problem but fundamentally speaking it's a flawed philosophy.
00:40:48 <madaidan[m]> <concat[m] "Did I ever contradict this or ar"> 2nd one
00:41:14 <concat[m]> Ok, got it. Might've gotten the wrong impression at first then.
00:43:28 <concat[m]>  * If I were an OS designer the most I'd attempt to slightly "restrict" would be anything that'll harm privacy or security where they'd know it's not a good thing to do but they can proceed after knowing such. (basically a disclaimer before proceeding)
01:03:57 <renlord> is there like a bsd-tools package to replace all gnu utils
01:04:09 <renlord> i am consistently fucked by gnu utils
01:04:20 <renlord> just recently by gnu `wc`
01:04:42 <renlord> wc -l in bsd actually counts lines; while wc -l in gnu counts '\n'
01:04:48 <renlord> zzz
01:08:34 <anupritaisno1[m]> aeonsolution
01:08:35 <anupritaisno1[m]> Unable yo decrypt your messages
01:08:49 <anupritaisno1[m]> * Unable to decrypt your messages
01:09:03 <aeonsolution[m]> i noticed, let me see what i can do to fix that
01:09:17 <renlord> why dont people just use OTR over IRC?
01:09:20 <renlord> lol
01:09:34 <renlord> it works more consistently than on matrix
01:14:53 <TheJollyRoger> renlord, heh, I was trying to get OTR to work with weechat but unfortunately the OTR.py is written in Python2...
01:14:56 <TheJollyRoger> X(
01:15:08 <cn3m[m]> Apple makes money off store royalties. They limit outside use cause that no big ad money to bankroll them
01:16:58 <cn3m[m]> Apple is high investment high reward to develop for it's an interesting experience. Their resources for devs smooth it out
01:25:21 <qyo3462572445[m]> You can use OTR on IRC?
01:27:43 <TheJollyRoger> qyo3462572445[m]: yes, you can use OTR over IRC provided your client supports it. OTR is protocol-agnostic but assumes your means of textual communication is synchronous.
01:28:34 <TheJollyRoger> Unfortunately, at this moment the version of OTR in most common use (from Pidgin) is crumbling due to short DH key lengths, and SHA1.
01:33:12 <nickcalyx[m]> Also there is no multiparty otr
01:33:40 <nickcalyx[m]> But you can use it in a private chat
01:35:06 <TheJollyRoger> Yeah.
01:36:52 <anupritaisno1[m]> Imagine not using x25519
01:38:44 <TheJollyRoger> Yeah... the current version of OTR just uses ~1536 bit Diffie-Hellman exchange and a short Digital Signature Algorithm authentication key, and I think HMAC-SHA1 but don't quote me on that.
01:39:00 <nickcalyx[m]> otr is from 2004.. x25519 didn't come out until 2005 but nobody paid any attention to it until around 2013
01:39:08 <TheJollyRoger> But to be fair to OTR, it was invented in ~2003 or so.
01:39:24 <nickcalyx[m]> yeah its old by now
01:39:30 <qyo3462572445[m]> Hmm interesting.  I never knew that.
01:40:05 <TheJollyRoger> Hah, beat me to it nick XP.
01:40:07 <TheJollyRoger> *Nick!
01:40:14 <qyo3462572445[m]> I don't use IRC much. Mostly xmpp with OMEMO. That's cool to know though.
01:40:35 <TheJollyRoger> Yeah. OMEMO is much more modern than OTR, so definitely prefer OMEMO to OTR.
01:41:55 <qyo3462572445[m]> There's another issue going back to iOS. I haven't found a good, reliable xmpp app due to the way iOS handles background processes. (From what I'm told, this and notification handling are the issue )
01:42:08 <TheJollyRoger> Eesh.
01:43:45 <renlord> many people still using dangerous curves nist p256
01:44:02 <TheJollyRoger> NIST, "NSA-Influenced Standards & Technology?"
01:44:20 <anupritaisno1[m]> https://git.gnupg.org/cgi-bin/gitweb.cgi?p=gnupg.git;a=commit;h=e9760eb9e70b9804c988dafe01851f6600869d9e
01:44:31 <anupritaisno1[m]> x448 is coming to gpg
01:44:46 <renlord> not hidden behind advanced?
01:44:49 <renlord> lol
01:45:09 <anupritaisno1[m]> Well I don't see much option
01:45:21 <anupritaisno1[m]> TLS still doesn't do curve25519 keya
01:45:32 <anupritaisno1[m]> * TLS still doesn't do curve25519 keys
01:45:56 <anupritaisno1[m]> The max you can get is P-384
01:46:09 <anupritaisno1[m]> P-521 is only supported by Firefox
01:47:58 <TheJollyRoger> renlord: heh, yeah at this moment I've been unsure whether or not to recommend people enable "expert" and I'm thinking... aaaaaaa I'm finding out firsthand the reason why everyone before me who's attempted to document GPG has run off screaming X(
01:48:34 * TheJollyRoger starts drowning his sorrows.
01:48:40 <renlord> i'd like to use x25519 also, but not sure if openkeychain supports it on android yet
01:48:45 <TheJollyRoger> It does.
01:48:47 <renlord> and portability is an issue
01:49:00 <renlord> so i just use rsa-4096 for now
01:49:02 <renlord> for max portability
01:49:07 <TheJollyRoger> But except for some versions of Yubikey 5s, the tokens don't. :(
01:49:18 <TheJollyRoger> And only of a certain firmware version.
01:49:27 <renlord> i dont see issues with rsa-4096 anyways besides more storage
01:49:30 <TheJollyRoger> The smartcards I get as well also don't have 25519 support.
01:49:37 <renlord> its effectively the same security bits
01:49:37 <TheJollyRoger> Yeah... currently I'm in the same boat.
01:49:54 <renlord> and simpler cryptography
01:52:02 <TheJollyRoger> I sort of get the impression that if they invent some computer that can do successful cryptanalysis of RSA 2048, the same attack would likely work against longer key lengths so stretching keys to 16384 wouldn't help much...
01:57:40 <TheJollyRoger> I like to use longer keys where I can but right now it's tough going finding JavaCards that support 4096-bit strength, let alone higher.
01:57:42 <renlord> only works against broken key generators
01:58:11 <TheJollyRoger> Makes sense. The RNGs on those smartcards is kind of dubious.
01:58:19 <renlord> i dont even know how to key stretch
01:58:21 <renlord> lol
01:58:28 <TheJollyRoger> Heh heh well...
01:59:03 <renlord> maybe really low-powered embedded devices have to do it
01:59:47 <TheJollyRoger> It's possible to make 32kB GPG keys and I've actually tried it, but using them turns messy in a hurry.
02:00:08 <renlord> but fast binary expo is orders of magnitude cheaper to execute compared to EC group operations
02:00:23 <TheJollyRoger> Woah.
02:03:46 <TheJollyRoger> I really hope sometime I can figure out how to get subkey operations to work on the Trezor Model T.
02:04:04 <TheJollyRoger> Since that's the future, until we can get Signify and AGE to work on the Model T.
04:13:08 <jiibus[m]> Anyone use Linphone? Wondering if I'm missing something. I'm trying to login to a SIP account and the login button just doesn't react to my tap.
04:13:19 <jiibus[m]>  * Anyone use Linphone? Wondering if I'm missing something specific to Graphene. I'm trying to login to a SIP account and the login button just doesn't react to my tap.
09:34:04 <yekip[m]> Can someone recommend a busy/popular android forum online? I have some generic android OS questions which I dont want to clog this room up with! thanks
09:55:18 <dlm-johannes[m]> XDA?
10:02:22 <joshman[m]> Can Someone link me to a source on Apple's T2 cheap and what's good and not so good about. In general it does what verified boot does to Android/iOS. I'd love to clear things out on macbbooks approach to that
10:20:50 <joshman[m]> * Can Someone link me to a source on Apple's T2 chip and what's good and not so good about. In general it does what verified boot does to Android/iOS. I'd love to clear things out on macbbooks approach to that
10:25:35 <furofuro_01[m]> As much as I hate to use Zoom, I'll give some thought experiment about this.
10:25:35 <furofuro_01[m]> How isolated, private and secure is a web client  in desktop mode of Zoom vs Zoom app  in a separate profile of GrapheneOS
10:26:08 <furofuro_01[m]> Should I wipe my phone afterwards? Or should I just delete that profile afterwards.
10:28:40 <furofuro_01[m]> Of course, if it's possible not to show face nor speak, I'll do so.
10:28:40 <furofuro_01[m]> What security disasters should I look for? I cannot not use Zoom in this case sadly.
10:29:11 <furofuro_01[m]> Privacy is definitely shredded to pieces here as well, sent to China servers of course. Recordes and logged as well.
10:29:11 <cn3m[m]> <joshman[m] "Can Someone link me to a source "> I mean on iOS it's great since it's arm. x86 isn't really good for verified boot, but they work hard on it
10:30:29 * cn3m[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/wTOuYOJBVcRBKTvpRYVIPzqC >
10:32:24 <furofuro_01[m]> <cn3m[m] "> <@furofuro_01:matrix.org> As m"> Mostly I'll use it on there in the future thanks to its security features. Should I immediately delete the profile afterwards?
10:32:47 <yekip[m]> <dlm-johannes[m] "XDA?"> ah yes forgot about that. thanks
10:34:16 <cn3m[m]> Everyone knows I'm a fanboy of iOS permissions after working in mobile ad tech. However GrapheneOS is doing quite well especially with another profile where it pulls ahead
10:34:45 <cn3m[m]> Deleting the profile wouldn't hurt
10:36:27 <strcat[m]> things will get a lot better with Android 11
10:36:48 <strcat[m]> since we didn't have the resources to implement a lot of our ideas ourselves but a lot of similar stuff ended up being done upstream
10:37:03 <furofuro_01[m]> * Mostly I'll use it on there in the future thanks to its security features. Should I immediately delete the profile afterwards?
10:37:03 <furofuro_01[m]> Edit: Virtualization isnt an option for my PC due to low specs, live OS breaks Zoom audio for some reason.
10:37:03 <yekip[m]> I found an app called Droid Commander. It's not in Fdroid so I won't be installing it but does anyone know of a privacy friendly similar app for organising files and folders
10:37:27 <yekip[m]>  * I found an app called Droid Commander. It's not in Fdroid so I won't be installing it but does anyone know of a privacy friendly similar app for organising files and folders?
10:38:02 <jalb66> WIth android 11 you'll be able to make videos more than 4 GB 🙂
10:38:31 <jalb66> Bye to that limit.
10:39:00 <cn3m[m]> <strcat[m] "things will get a lot better wit"> Yes I'm super stoked for that. Then the only area iOS will be ahead notably is the store security. Hopefully we'll see something there at some point
10:39:27 <cn3m[m]> GrapheneOS is notably ahead
10:39:58 <cn3m[m]> There's just some areas that need a little love
10:41:47 <strcat[m]> now possible to build the development branch for the Pixel 4 and 4 XL
10:41:49 <strcat[m]> it's broken but at least it can be built if people want to start working on it
10:43:02 <cn3m[m]> <strcat[m] "now possible to build the develo"> That's great news
11:28:55 <jalb66> Great!
11:31:35 <strcat[m]> need people with a Pixel 4 that are able to build the OS to test the development branch - Wi-Fi is known to be broken, and Auditor doesn't support it yet
11:31:38 <strcat[m]> need to identify what else is broken
11:31:49 <strcat[m]> I could publish experimental builds
11:31:55 <strcat[m]> as is don't even know if it builds with what's in-tree
11:32:07 <strcat[m]>  * as is don't even know if it boots with what's in-tree
11:32:29 <strcat[m]> need to find more people to work on Pixel 4 support
11:53:38 <cdesai> strcat[m]: are you building wifi in kernel already?
11:54:52 <cdesai> Ah, yes
12:18:21 <dallemon[m]> strcat: trying to get build process running right now.
12:18:42 <strcat[m]> dallemon: note you don't need to build the kernel
12:18:43 <dallemon[m]> following instructions on site worked fine last time i tested for my pixel 2 last year
12:18:52 <strcat[m]> there are kernel prebuilts for Pixel 4 and 4 XL
12:18:53 <strcat[m]> so building kernel is optional;
12:19:10 <strcat[m]> I'd like to do it for all the devices but it's a pain
12:19:12 <strcat[m]> so for now just the latest
12:19:12 <dallemon[m]> which would you prefer?
12:19:29 <strcat[m]> dallemon: just use my kernel build, might as well
12:19:48 <strcat[m]> it doesn't take quite as long as it used to since LLD is used now instead of ld.gold
12:19:56 <strcat[m]> to link the kernel
12:19:58 <strcat[m]> but still takes a while
12:20:24 <dallemon[m]> only got 16gb of ram, is that sufficient?
12:22:33 <strcat[m]> dallemon: yeah
12:41:44 <renlord> even when ld.gold was used it was not that long
12:43:07 <cdesai> LTO still takes long relative to the rest of the build.
12:43:20 <cdesai> looks single threaded but I did read something about multi threading support, not sure where that's at
12:53:47 <strcat[m]> cdesai: dunno if that would be deterministic
14:27:02 <sivuda[m]> > Everyone knows I'm a fanboy of iOS permissions after working in mobile ad tech. However GrapheneOS is doing quite well especially with another profile where it pulls ahead
14:27:02 <sivuda[m]> While im in profile A, would profile B continue doing internet queries like a standalone app would talk back home?
14:28:26 <jalb66> sivuda[m], if you mean if both profiles are connected to internet and sending information then the answer is yes
14:30:54 <sivuda[m]> jalb66: so the apps from profile in background will continue to make queries, huh
14:31:23 <jalb66> Yes, as Daniel answered me: it would be good to avoid this in the future
14:32:52 <jalb66> I asked because I saw this happening when I'm using Internet only in a different profile, then before changing to the main profile I disconnect internet, but when I go to the main profile I see messages from xmpp, etc
14:33:24 <jalb66> So, the smartphone is using internet in all users or profiles
14:41:27 <strcat[m]> I didn't say that it would be good to avoid it in the future but rather that we can expose features to offer control over it
14:41:51 <strcat[m]> sivuda: if you don't want an app running in the background, force stop it
14:42:14 <strcat[m]> we could expose the option to force stop profiles - it exists, just not exposed in the normal UI
14:42:28 <strcat[m]>  * we could expose the option to explicitly logout from profiles - it exists, just not exposed in the normal UI
14:42:39 <strcat[m]> switching profiles is not logging out
14:44:23 <jalb66> yes, that's it
14:45:41 <Manouchehri> so for coral, do you guys plan on reusing vendor.img?
14:48:09 <dallemon[m]> strcat: i might be getting out of memory error on LTO step of building kernel for coral. it was using all 16gb of ram and 6gb of swap when it suddenly was killed :/
14:48:09 <dallemon[m]> so for now i will skip that optional step and continue with the build guide
14:50:47 <strcat[m]> dallemon: yeah that's part of why I recommended skipping it
14:50:51 <strcat[m]> linking the kernel or Chromium with LTO
14:50:54 <strcat[m]> uses a lot of memory
14:50:58 <strcat[m]> it probably needs 30GB of memory or something
14:51:17 <strcat[m]> because not only is it LTO, but we don't use dynamic kernel modules, we build everything in to get full program CFI
14:51:25 <strcat[m]>  * because not only is it LTO, but we don't use dynamic kernel modules, we build everything in to get full program analysis for CFI
14:51:34 <strcat[m]> and to reduce attack surface
14:51:57 <strcat[m]> dallemon: you could make a huge swapfile
14:52:40 <strcat[m]> dallemon: oh also, by default linux uses 'heuristic overcommit' which is pretty terrible since it will arbitrarily fail when trying to fork from a huge process even tho it's otherwise full overcommit
14:53:00 <strcat[m]> dallemon: so you can't use all your available memory due to the heuristic unless you make a ton of swap
14:53:34 <strcat[m]> dallemon: like if the process is using 16GB of memory and it wants to fork + exec some tiny executable
14:53:43 <strcat[m]> dallemon: might use an extra 30k or something
14:53:45 <strcat[m]> dallemon: the heuristic will make it fail unless there is 16GB+ free
14:53:59 <strcat[m]> even though it's not doing actual memory accounting
14:54:02 <strcat[m]> so you get the worst of both worlds
14:54:16 <strcat[m]> and of course, worst of both worlds is the default, since this is Linux
14:54:29 <dallemon[m]> strcat: sounds great 🤣
14:54:34 <strcat[m]> dallemon: make /etc/sysctl.d/50-overcommit.conf
14:54:44 <strcat[m]> with
14:54:45 <strcat[m]> `vm.overcommit_memory = 1`
14:54:47 <strcat[m]> and do
14:54:56 <blacklight447[m]> <strcat[m] "dallemon: like if the process is"> How many proceses use 16gb of memory though?
14:55:14 <strcat[m]> dallemon: `sysctl -w vm.overcommit_memory=1`
14:55:25 <strcat[m]> `1` is full overcommit so it just doesn't care
14:55:25 <dallemon[m]> strcat: thanks, will do :)
14:55:47 <strcat[m]> `0` is heuristic overcommit so for the most part it doesn't care except when a SINGLE allocation is enormous
14:56:12 <strcat[m]>  * `0` is heuristic overcommit so for the most part it doesn't care except when a SINGLE accountable memory reservation is enormous
14:56:29 <dallemon[m]> yeah a quick online search reveals that is has 3 settings
14:56:29 <strcat[m]> dallemon: `2` is memory accounting i.e. actually tracking accountable memory and not giving out more than is available
14:57:08 <strcat[m]> dallemon: the default of `0` is the worst of both worlds: it gives out more accountable (i.e. can be turned into dirty pages by writing to it) memory than is available
14:57:34 <strcat[m]> dallemon: but it ALSO still fails prematurely if a SINGLE operation does it - the problem is that fork exists and is widely used
14:57:41 <strcat[m]> fork is terrible, badly designed API because Unix is shit
14:57:53 <strcat[m]> but it exists and that option makes no sense and shouldn't be the default with how actual linux software is written
14:58:13 <strcat[m]> the default should either be `1` (full overcommit) or `2` (memory accounting)
14:58:18 <strcat[m]> there is no reason the default option should even exist, it's dumb as hell
14:59:04 <strcat[m]> memory accounting: you get OOM errors when the OS has given out accountable memory for all the memory that's available (result: need to add a ton of extra swap to fully use memory and some swap)
14:59:12 <strcat[m]> (but you don't ever get OOM killer killing anything)
14:59:33 <strcat[m]> full overcommit: fully use all the available memory / swap but OOM killer has to step in when memory runs out
14:59:51 <strcat[m]> default, heuristic overcommit: BOTH problems
15:00:01 <strcat[m]> shrug
15:00:10 <strcat[m]> dallemon: linux is shit, that's all that can be said
15:00:26 <strcat[m]> lemme look at what man 3 mmap says about MAP_NORESERVE to see if it's still incorrect documentation
15:00:35 <strcat[m]> er, man 2 mmap
15:00:49 <dallemon[m]> the OOM killer was working when i tried building under WSL
15:01:41 <strcat[m]> dallemon: what I'm saying is with heuristic overcommit you have the problem of the OOM killer having to kill stuff when you run out of memory AND you have the problem of getting premature OOM errors stopping you from using all the memory without adding a ton of extra swap
15:01:47 <strcat[m]> dallemon: because of fork
15:02:10 <dallemon[m]> ah ok :)
15:02:25 <strcat[m]> dallemon: heuristic overcommit is someone's stupid idea to have overcommit but ALSO make 'obviously' too large allocations fail
15:02:35 <strcat[m]> dallemon: so, you still have all the problems of overcommit
15:03:22 <strcat[m]> dallemon: but a single accountable mmap (like making a big writable MAP_ANONYMOUS mapping) that's enormous will still fail if it's too large just by itself
15:03:33 <strcat[m]> dallemon: i.e. no memory accounting, just a single operation heuristic of failure
15:03:38 <strcat[m]> dallemon: the problem with this
15:03:40 <strcat[m]> is fork exists
15:03:41 <dallemon[m]> sounds like a workaround someone implemented long ago and never actually fixed
15:03:51 <strcat[m]> and fork does copy-on-write of the whole process
15:03:57 <strcat[m]> so it DOUBLES the accountable memory for that process
15:04:18 <strcat[m]> so lets say the process has like 14GB of dirty pages and 10GB of writable pages it could make dirty
15:04:24 <strcat[m]> so 24GB of accountable memory
15:04:25 <strcat[m]> and you fork
15:04:30 <strcat[m]> now it's 48GB
15:04:52 <strcat[m]> dallemon: but in reality is uses just a couple pages after fork and it will usually just exec another binary ASAP
15:04:55 <strcat[m]> wiping out all that memory usage
15:05:05 <strcat[m]> dallemon: fork is stupid
15:05:25 <strcat[m]> dallemon: it's not cheap doing copy-on-write and it leads to super buggy stuff, it doesn't work sanely with threads among other problems
15:05:46 <strcat[m]> dallemon: it's a stupid as hell lazy design for process spawning where they avoided properly designing APIs to spawn processes
15:05:56 <strcat[m]> cause then you need to consider all the things that you need to support when spawning processes
15:06:00 <strcat[m]> which files do you want to keep, which to close
15:06:14 <strcat[m]> cd to another directory? etc
15:06:54 <strcat[m]> dallemon: so instead the Unix design is you fork, you do that setup for the new binary in a clone of the current address space + thread
15:07:02 <strcat[m]> dallemon: and then exec it
15:07:08 <strcat[m]> dallemon: there are so many things wrong with it
15:07:21 <strcat[m]> you carry over your WHOLE previous address space including stacks for other threads and everything else
15:07:24 <strcat[m]> and all the file handles etc
15:07:35 <strcat[m]> dallemon: one obvious example of a problem:
15:08:07 <strcat[m]> dallemon: lets say thread A is holding a lock and going to release it in a few cycles - but thread B forked
15:08:18 <strcat[m]> ok so new process has 1 thread based on thread B
15:08:23 <strcat[m]> that lock is permanently deadlocked it will never be released
15:08:26 <strcat[m]> cause there is no thread A
15:08:44 <strcat[m]> dallemon: so, even calling malloc after fork is broken when using threads
15:08:51 <strcat[m]> dallemon:  of course, everything does it, even though it's not allowed
15:09:00 <strcat[m]> so malloc has to work around this or stuff breaks in practice
15:09:10 <strcat[m]> but not EVERY SINGLE THING that uses a lock works around it more like 0.1%
15:09:19 <strcat[m]> a few things like malloc, arc4random, etc. work around it
15:09:19 <strcat[m]> everything else is broken
15:09:28 <strcat[m]> dallemon: just one example of why fork is broken as hell, tip of the iceberg
15:09:59 <strcat[m]> dallemon: https://github.com/GrapheneOS/hardened_malloc/blob/master/h_malloc.c#L1140-L1143
15:10:10 <strcat[m]> dallemon: https://github.com/GrapheneOS/hardened_malloc/blob/master/h_malloc.c#L1001-L1036
15:10:31 <strcat[m]> dallemon: so malloc has to register a hook to lock every lock before fork, and then unlock them after fork
15:10:50 <strcat[m]> dallemon: also fork ruins ASLR since the process has the same address space, and stack canaries
15:11:06 <strcat[m]> dallemon: CSPRNGs need to reseed themselves via hook after fork like this
15:11:16 <strcat[m]> dallemon: anyway it has to grab EVERY SINGLE LOCK before fork and release in both after
15:11:21 <strcat[m]> except btw
15:11:27 <strcat[m]> there is no well-defined way to do this in POSIX
15:11:42 <strcat[m]> it's not well defined to do anything with POSIX thread locks after fork
15:11:43 <strcat[m]> so it's platform specific
15:12:30 <strcat[m]> dallemon: also got to love how child processes inherit EVERY SINGLE FILE by default so you leak files to them
15:12:46 <strcat[m]> dallemon: so there is CLOEXEC, you have to always remember to put CLOEXEC on every single fd
15:12:58 <strcat[m]> and linux has to have a version of it for each file API
15:13:22 <strcat[m]> so signalfd (which is a totally broken API btw) has SFD_CLOEXEC
15:13:59 <strcat[m]> epoll (a terrible, badly designed / performing API btw) has EPOLL_CLOEXEC
15:14:11 <strcat[m]> timerfd is TFD_CLOEXEC
15:15:34 <strcat[m]> shm_open (oh yay a GLOBAL namespace without directories of shared memory files that leaks by design) actually does it for you, how amazing
15:15:37 <strcat[m]> there are 30 versions of that tho
15:16:20 <strcat[m]> dallemon: so when it forks it has to not only deal with copy-on-write for all the memory but also any files that leaked are still open etc.
15:16:29 <strcat[m]> it's just all around terrible/inefficient
15:16:39 <strcat[m]> I always run into that problem so on my workstation I have full overcommit set
15:16:57 <strcat[m]> alternative is
15:17:06 <strcat[m]> lets say you have 64GB of memory and want 32GB of swap
15:17:38 <strcat[m]> instead you have to make 128GB of swap (32GB + 32GB + 64GB) to be able to use all that
15:17:59 <strcat[m]> so either turn on full overcommit or make a ridic amount of swap
15:17:59 <strcat[m]> shrug
15:18:26 <strcat[m]> it just makes no sense because at that point why wouldn't you just use memory accounting? you have enough swap for it
15:18:31 <strcat[m]> heuristic overcommit so bad
15:18:39 <strcat[m]> dallemon: oh the original thing before I got distracted:
15:18:57 * strcat[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/oZvxolgxcKbnamgIszoSTmCV >
15:19:07 <strcat[m]> dallemon: I am quoting the man page here (linux-man-pages project mmap(2))
15:19:16 <blacklight447[m]> Now tell me
15:19:17 <blacklight447[m]> Are there things linux does actually well security wise?
15:19:20 <strcat[m]> dallemon: this is not true btw, it is a totally false made up description of MAP_NORESERVE
15:19:21 <blacklight447[m]> Anything at all?
15:19:26 <strcat[m]> is has no basis in truth or reality
15:19:27 <dallemon[m]> haha, sorry about that :) but it's clear is something you are passionate about
15:19:33 <strcat[m]> that is fundamentally not what MAP_NORESERVE does
15:19:44 <strcat[m]> so, first of all
15:20:00 <strcat[m]> MAP_NORESERVE is a no-op with full overcommit - that makes sense
15:20:31 <Manouchehri> related question, does kernel same-page merging work in practice? I don't know how common it is to use MADV_MERGEABLE.
15:20:34 <strcat[m]> MAP_NORESERVE is a no-op with memory accounting enabled because memory accounting actually works properly at a high level (not so much at a low level but w/e)
15:20:50 <strcat[m]> so MAP_NORESERVE in a no-op in either of the sane modes that anyone would use
15:21:01 <strcat[m]> MAP_NORESERVE ONLY does anything with heuristic overcommit
15:21:22 <dallemon[m]> that also explains why i learned/was informed many years ago that you want twice the amount of swap than ram, thanks :)
15:21:27 <strcat[m]> this is all it does: it disables the dumbass heuristic for that memory
15:21:44 <Manouchehri> dallemon[m]: IMO swapfiles are always the way to go compared to swap partitions
15:21:45 <strcat[m]> dallemon: well you want 2x the amount of swap than memory+swap you want to use, if you use memory accounting
15:21:57 <strcat[m]> dallemon: on Windows, proper memory accounting is the ONLY option
15:22:26 <strcat[m]> dallemon: i.e. if you do mmap (well, VirtualAlloc) of some writable mapping, it adds that to the amount of accountable memory it has handed out
15:22:50 <strcat[m]> dallemon: and when it doesn't have enough memory + swap to back it all, it gives OOM error
15:22:55 <strcat[m]> that is also what linux does with vm.overcommit=2
15:23:01 <Manouchehri> dallemon[m]: https://gist.github.com/Manouchehri/5834c03fdf994f324770504260f02912
15:23:38 <strcat[m]> that is the robust approach where you need to give yourself a ton of extra swap and all programs need to handle OOM errors sanely... and you need to set proper quotas on memory usage which was not really possible pre-cgroups since it's unrealistic otherwise
15:23:58 <strcat[m]> because there isn't a working memory usage limit feature
15:24:01 <Arhu> strcat[m]: I'm getting a Pixel 4 XL delivered tomorrow. Can help with testing
15:24:15 <strcat[m]> linux doesn't implement an rlimit for memory usage (accountable memory) only virtual address space
15:24:29 <strcat[m]> so stuff that wants to set a limit is pretty broken
15:25:09 <strcat[m]> dallemon: anyway look at what I quoted
15:25:11 * strcat[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/dIiErBQfYDmkimGhcQsHeLuL >
15:25:15 <strcat[m]> this is the linux-man-pages project
15:25:25 <strcat[m]> making up a total falsehood
15:25:26 <strcat[m]> like
15:25:31 <strcat[m]> 'Do not reserve swap space for this mapping.' is not how stuff works
15:25:56 <strcat[m]> and wtf are they talking about getting a SIGSEGV if no memory is available
15:25:58 <strcat[m]> that never happens, there is no code and has never been any code to do that
15:26:10 <strcat[m]> or any serious proposal to do it
15:26:22 <strcat[m]> all it does is disable the dumb heuristic, no-op in both sane modes
15:26:28 <strcat[m]> shrug
15:26:47 <strcat[m]> dallemon: basically in a robust system you add up your memory + swap and add another amount of swap equal to that
15:27:13 <dallemon[m]> makes sense :)
15:27:19 <strcat[m]> to work around the stupidity of fork and also deal with the fact that programs have a lot more accountable memory than used memory
15:27:20 <dallemon[m]> android prepare vender, done :)
15:27:31 <strcat[m]> dallemon: and then you can use vm.overcommit=2
15:27:36 <strcat[m]> and have memory accounting
15:27:40 <strcat[m]> in practice it doesn't work out so well
15:27:51 <strcat[m]> because 99% of programs are just going to abort or worse on OOM error
15:28:23 <strcat[m]> so what happens is some stupid broken program uses all the memory, everything you care about gets OOM error and shuts down (maybe some stuff saves most data and shuts down cleanly, or just drops new requests)
15:28:28 <strcat[m]> probably not what you actually want
15:28:37 <strcat[m]> dallemon: and that is the 'robust' option
15:28:59 <strcat[m]> dallemon: the non-robust option is it doesn't care, and when actual memory runs out the OS has to pick some shit to start killing until there's memory
15:29:14 <strcat[m]> except it's out of memory so everything is really bogged down and churning super slowly
15:30:26 <strcat[m]> dallemon: so android implements a userspace OOM killer, used to be one of their kernel patches, so it can actually appropriately choose stuff (an app, and based on sane priorities i.e. prefer killing background apps not foreground services and esp not foreground app)
15:30:54 <strcat[m]> and the app dev model requires that your app can be told to save state and can then restore it after being killed
15:31:03 <strcat[m]> many apps don't do a very good job but it's better than nothing
15:31:15 <strcat[m]> dallemon:  anyways it's all pretty fucked
15:31:26 <strcat[m]> and that's why you can waste a ton of time waiting for something to build
15:31:33 <strcat[m]> and then right at the very end it forks some process to finish up what it's doing
15:31:35 <strcat[m]> and dies
15:31:42 <strcat[m]> because of some arbitrary heuristic someone made
15:31:45 <strcat[m]> because they're an asshole I guess
15:32:03 <yekip[m]> Could someone please tell me where to go to create a second user profile to install an app i would like to keep separate from other apps and main profile. I read the Graphene page but can't see a mention of it there. thanks
15:32:18 <strcat[m]> yekip: 'users'
15:32:37 <strcat[m]> in settings
15:32:49 <strcat[m]> once you have a second user it puts an icon in the notification tray to switch quickly
15:36:54 <yekip[m]> thanks strcat
15:41:05 <yekip[m]> multiple users.... think i found it. didn't realise it needs all security, fingerprint and stuff setting up again. no problem, but just checking i am in the righgt place?
15:41:14 <Arhu> yekip: if that doesn't turn out to be what you are looking for usability wise, instead of a separate user you might want to use an app stat starts the desired app in a work profile, like Island or Shelter (both are FOSS, but only the latter is on F-Droid)
15:42:48 <yekip[m]> hmm, that sounds interesting yes, thanks. Basically I just have one or two apps I need to run but really rather wouldn't! A Chinese CCTV monitoring app being one, which I obviously don't trust too much!
15:42:53 <yekip[m]> Not sure what a work profile is, but if it ringfences the app, that would do very nicely i think
15:44:34 <Arhu> In a separate user gives better isolation, but comes at a cost of usability (and probably RAM)
15:46:15 <Arhu> If you want to instances of a messenger for example, and you switch between them constantly, you probably want to put it in a managed profile and not a different user
15:47:38 <yekip[m]> right yes, what i want is the app running and can switch to it when needed, maybe only a few times a day. But yes a second instance of Signal is something I am looking into and would quite like to set up.
15:47:39 <yekip[m]> Where do i find these managed profiles?
15:49:24 <Arhu> strcat: The "Add new user?" dialog says "Any user can update apps for all other users". Is this really the case for GrapheneOS, or is this text rudimentary and about how it works with the Google Play store?
15:50:06 <Arhu> yekip: Install Island or Shelter
15:50:14 <yekip[m]> I was wondering that too, just saw it
15:50:34 <Arhu> One of the two, they don't work together
15:50:42 <yekip[m]> ok, just grabbing shelter from fdroid
15:51:12 <yekip[m]> thanks
15:52:11 <Arhu> I haven't figured out which one is better, but Shelter is on F-Droid, and Island you would have to rip off the Play Store or compile yourself if you don't want the trackers
15:52:12 <yekip[m]> is shelter still supported? it has a readme which i clicked to read and it said no longer being maintained
15:57:08 <yekip[m]> Looks like you can only set up ONE profile, which I think means you can install multiple apps in there, but not multiple profiles. thats ok if so, I will just put the few apps together so they can spy on each other :D
15:57:49 <Arhu> yekip: Island seems to work better
15:58:22 <Arhu> Yes, you can have one extra profile
15:59:37 <Arhu> Keep in mind that if you want better isolation, use a different user instead
15:59:49 <strcat[m]> Arhu: yes any user can update apps
15:59:57 <strcat[m]> Arhu: of course, the new version has to be signed with the same key since that's how app updates work
16:00:07 <strcat[m]> and the new version has to have a higher versionCode
16:01:03 <strcat[m]> Arhu: each user has their own data for each app
16:01:13 <strcat[m]> but the app install (the apk) is global
16:01:17 <Arhu> ah, I was hoping secondary users would install apps in their own namespace
16:01:43 <strcat[m]> Arhu: they do in the sense of data
16:01:55 <strcat[m]> Arhu: when you install an app on a user it doesn't install it for all users
16:02:11 <strcat[m]> I don't think you're understanding it right
16:02:37 <Arhu> I think I do no
16:02:38 <Arhu> w
16:03:29 <strcat[m]> Arhu: there is a set of apps installed globally
16:03:32 <strcat[m]> and then within each profile, an app is installed or not
16:03:39 <strcat[m]> and each profile has their own data for each app
16:03:42 <Arhu> So if you install an app as one user, and then as another, the app install APK doesn't get duplicated
16:03:44 <strcat[m]> but the actual apk install is shared
16:03:51 <strcat[m]> yes
16:04:04 <strcat[m]> so if 1 user installs say F-Droid, and so does another
16:04:09 <strcat[m]> it uses the same apk for both
16:04:10 <strcat[m]> but each has their own data
16:04:15 <strcat[m]> and a third user that hasn't installed it doesn't have it installed
16:04:39 <strcat[m]> Arhu: and if one user updates it, that updates it for both
16:04:40 <yekip[m]> <Arhu "I haven't figured out which one "> yep that makes Shelter the only option for this dumber :D
16:04:53 <strcat[m]> Arhu: updates are seen as something that has to happen - if you want to avoid an update you need to fork the app basically
16:05:03 <Arhu> yekip: no Island is better maintained
16:05:20 <Arhu> You can install it with the Aurora Store
16:05:26 <strcat[m]> Arhu: apps can't be downgraded
16:05:39 <strcat[m]> you can only install version >= old version
16:05:41 <strcat[m]> and the signing key is pinned once it's installed
16:05:43 <yekip[m]> yep, its nothing too worrying, just want to avoid the trackers
16:06:08 <strcat[m]> Arhu: also the model is designed around getting most things from the same source (like Google Play for the stock OS)
16:06:15 <strcat[m]> Arhu: and forks / alternate builds of apps are really supposed to use their own app ids
16:06:24 <strcat[m]> and a store will enforce that (can't have 2 apps with same id on store)
16:06:25 <yekip[m]> I guess I could use Shelter as well as a second user, if i needed an extra area. Not sure I fully understand the users thing. Once created is it always logged in? I can't seem to find how to log it out. I could just log in when I need the app. For instance, i have a DDpai dash cam in my car. It requries the app to set up and download footage in case of an accident or incident i want to export footage of. So that's very
16:06:25 <yekip[m]> very rare, but when I need it, i need it. That could go in a profile
16:06:49 <Arhu> It's on GitHub Apace licensed, so you could compile it yourself without the Google Analytics
16:06:52 <strcat[m]> Arhu: it's not really supposed to be the case that you can install an app either from the developer OR from say F-Droid and that both versions will have a different signature
16:07:00 <yekip[m]> ^ i mean user, not profile. But definitely dont want two users running full time, need to extend battery life as much as poss
16:07:01 <strcat[m]> Arhu: the way app ids work is like
16:07:15 <strcat[m]> org.grapheneos.pdfviewer
16:07:24 <Arhu> Actually you can just toggle off the internet access for Island, that's one of the nice things GrapheneOS lets you do
16:07:36 <strcat[m]> the last part is app name, the first part is a domain-based namespace
16:07:42 <strcat[m]> if someone makes their own build signed with their own key that they publish
16:07:53 <strcat[m]> they're really supposed to set a new package id
16:08:01 <strcat[m]>  * they're really supposed to set a new app id
16:08:13 <cdesai> and it's really easy to do that, you don't even have to rename everything
16:08:24 <cdesai> aapt has a --rename-manifest-package so this can be used in Android.mk/bp too
16:08:28 <strcat[m]> so for example the way this system is seen as working is that F-Droid would put org.fdroid in front of all their builds or w/e
16:08:33 <strcat[m]> that's how the OS sees it as being done
16:08:40 <strcat[m]> yeah you can rename an existing apk and resign it easily too
16:08:59 <yekip[m]> good clarification thanks str
16:09:30 <strcat[m]> Arhu: so for example 1 user might install an app from F-Droid, another tries to install from Play - won't work, same app id, diff sigs
16:09:41 <strcat[m]> Arhu: bad UX, but that's because things aren't being done as intended basically
16:09:42 <strcat[m]> and also
16:10:04 <strcat[m]> Arhu: the normal Settings UI is really barebones, doesn't expose all the features of multiple users
16:10:14 <strcat[m]> there are toggles for disabling sideloading and so on
16:10:15 <strcat[m]> and the owner account has a lot of control
16:10:22 <strcat[m]> it's just not surfaced in the normal Settings app for simplicity
16:10:26 <yekip[m]> i haven't used aurora, was hoping to avoid another learning curve right now. just trying out shelter
16:10:50 <yekip[m]> <Arhu "It's on GitHub Apace licensed, s"> I dont even know what compile means. seirously, i am a noob :)
16:10:54 <strcat[m]> Arhu: the main account is actually a sysadmin, they can control other users to a large extent
16:11:07 <strcat[m]> they can't spy on them without them knowing or anything
16:11:13 <strcat[m]> but I mean can set restrictions etcv
16:11:19 <strcat[m]>  * but I mean can set restrictions etc
16:11:45 <strcat[m]> Arhu: https://developer.android.com/reference/android/os/UserManager
16:11:59 <strcat[m]> you can see they expose the toggle for allowing phone calls / SMS or w/e
16:12:16 <strcat[m]> but there are a LOT of toggles that could be exposed in the UI
16:12:21 <strcat[m]> it's just not, for simplicity
16:12:43 <strcat[m]> but a device owner app can do this stuff (i.e. an app granted ownership of the device as part of enterprise provisioning)
16:12:59 <strcat[m]> really trivial to expose more of these settings as toggles though
16:13:01 <strcat[m]> in Settings
16:13:10 <Arhu> strcat: I'm really interested in exposing these features, I'll go to work on that when I figure it all out :)
16:13:19 <strcat[m]> copy-paste existing one and just change it to another one of these
16:14:15 <Arhu> But just recently got back into Android so it will take some time to learn how to develop for it
16:14:20 <strcat[m]> Arhu: and also there could be logout
16:14:21 <strcat[m]> and the owner could have 'stop user' or w/e
16:14:51 <strcat[m]> https://developer.android.com/reference/android/os/UserManager#DISALLOW_FUN
16:14:57 <Arhu> yes! especially the stop user command that now I have to connect to usb for would be nice :)
16:15:15 <strcat[m]> DISALLOW_FUN is an actual thing for enterprise use cases btqw
16:15:28 <strcat[m]>  * DISALLOW_FUN is an actual thing for enterprise use cases btw
16:15:29 <strcat[m]> it disables easter eggs
16:15:32 <strcat[m]> because some places forbid easter eggs
16:15:42 <strcat[m]> the name is a joke
16:15:58 <strcat[m]> the use case is real
16:16:04 <strcat[m]> big companies are dumb
16:16:39 <cdesai> my favorite is isUserAGoat()
16:16:52 <Arhu> I gave up on Android in favor of iOS around version 4.4, but the last two major versions Android really came to an acceptable level when it comes to 3rd party provacy
16:17:18 <jalb66> Logout and stop users would be a great add
16:17:58 <Arhu> And with a little work with exposing these features Android already has built in but doesn't give to its users by default, Android could be great
16:18:41 <jalb66> Today, I read from Netguard developer, that Android 11 beta is not managing the VPN service very well and he reported that to Google
16:19:06 <jalb66> But it's beta yet
16:19:27 <jalb66> I'm not using Netguard now btw
16:21:21 <jalb66> I have it installed but without network access. I only use it to check my connections from time to time and then I stop it and deny Network access. I wish GOS could have something like that: see the connections in the smartphone
16:21:28 <yekip[m]> I used to use an app called TapeACall Pro. Brilliant for recording phone calls which I need to do quite often. I am assuming that couldn't run in Shelter, as it needs access to call data/mic to do the recording
16:23:43 <yekip[m]> PS i have not yet heard of a decent FOSS call recorder for Android. But I notice there is a folder on my device called "Recorded Calls", not sure why
16:25:12 <Arhu> I thought they killed call recording a few Android versions ago and now you need root or a custom ROM that supports it
16:30:04 <yekip[m]> afaik TapeACall is available on Android. Its just that it's not too hot on privacy (i am assuming that anyway) so i would like to run in Shelter if i could. but am I right in thinking you can't run an app in shelter which needs to interact with other things outside the profile, such as calls?
16:33:23 <Arhu> yekip: almost all these apps are 3 way call services, they don't actually record anything on your phone
16:34:06 <Arhu> for that you would need access unrooted/jailbroken Androids and iPhones don't currently support
16:37:36 <yekip[m]> ah, yes of coruse you're right. it records to a server
16:37:54 <yekip[m]> my awful backup o[ption is a pocket dictaphone type tghing and use that with phone on loudspeaker, but its no match for tape a call, that thing is brilliant when you really need good evidence
16:39:22 <yekip[m]> is graphene based on android 9 or 10?
16:39:27 <Arhu> 10
16:42:34 <Arhu> you can call with a headset, and there are little devices that plug into usb-c/lightning/headphone jack and record the audio when it passes through
16:42:42 <yekip[m]> thx
16:46:31 <yekip[m]> yea i am considerng that too. tape a call was so good though, i may have to read their privacy stuff word for word and make sure its not usable
16:46:33 <strcat[m]> cdesai: isUserAGoat actually does something now btw
16:47:29 <cdesai> hahaha I see what it does, amazing :D
16:47:30 <strcat[m]> https://android.googlesource.com/platform/frameworks/base/+/master/core/java/android/os/UserManager.java#1404
16:47:31 <strcat[m]> it checks if the user has goat simulator installed
16:50:03 <hapssmak[m]> I'm trying to install GrapheneOS from Windows. When I run ./flash-all.bat it says "." Is not recognized as an internal or external command. Tried without the dot too.
16:50:03 <hapssmak[m]> I CD'ed into the advice folder and I can find my device via fastboot devices command. I have also unzipped GrapheneOS into the folder
16:50:04 <hapssmak[m]> Can anyone help?
16:54:55 <Arhu> without "./"
16:55:14 <Arhu> just flash-all.bat if you're in the directory that contains flash-all.bat
16:56:05 <Arhu> frist check if commands like adb work from there
16:58:50 <hapssmak[m]> Just tried, didn't work. Fastboot works and adb works when turned on. Trying a clean installation of adb now
16:59:23 <jalb66> hapssmak[m], are you using the powershell?: "On Windows, use PowerShell rather than the legacy Command Prompt."
17:01:30 <hapssmak[m]> Isn't that for checking sig and not the flashing process?
17:02:43 <jalb66> For all instructions
17:02:51 <jalb66> It's in the beginning of the guide
17:03:58 <jalb66> For example, tar maybe won't work in the legacy command prompt
17:06:19 <jalb66> Try it
17:20:06 <Hapssmak2> Hi, I will try with powershell after. But out of pure curiosity, what is suddenly wrong? I just updated ADB and fastboot to latest release
17:20:12 <Hapssmak2> fastboot : The term 'fastboot' is not recognized as the name of a cmdlet, function, script file, or operable program. C
17:20:12 <Hapssmak2> CategoryInfo          : ObjectNotFound: (fastboot:String) [], CommandNotFoundException
17:20:24 <Hapssmak2> I get that when I try to run flash-all
17:23:31 <dallemon[m]> strcat (@strcat:matrix.org): so kernel did build with lots of swap (too much, but better be safe). Going to try a new os build when I get home. Should I do "choosecombo debug aosp_coral userdebug"?
17:25:40 <strcat[m]> choosecombo release aosp_coral userdebug
17:25:41 <strcat[m]> or user
17:25:44 <strcat[m]> don't use debug, waste of time
17:25:56 <strcat[m]> as in don't use debug instead of release
17:26:06 <strcat[m]> it just makes it generate 50GB of debug symbols
17:26:28 <strcat[m]> userdebug makes sense - I don't mean that
17:29:19 <jalb66> Hapssmak2, did you downloaded it with curl?
17:29:34 <jalb66> curl.exe -O https://dl.google.com/android/repository/platform-tools_r30.0.2-windows.zip
17:30:15 <jalb66> (Get-FileHash platform-tools_r30.0.2-windows.zip).hash -eq "265dd7b55f58dff1a5ad5073a92f4a5308bd070b72bd8b0d604674add6db8a41"
17:30:29 <jalb66> tar xvf platform-tools_r30.0.2-windows.zip
17:30:45 <jalb66> $env:Path = "$pwd\platform-tools;$env:Path"
17:30:55 <jalb66> fastboot --version
17:31:54 <jalb66> Please follow the guide
17:32:12 <Hapssmak2> No, I just downloaded it directly  from GrapheneOS site. I have version 30.0.2-6538114, so latest
17:33:26 <jalb66> Do you mean the release for your Pixel or fastboot?
17:33:48 <Hapssmak2> I downloaded the release for Pixel from GrapheneOS
17:34:08 <Hapssmak2> I just reinstalled Android Studio to make sure I was on latest version
17:34:27 <jalb66> And did you make the next steps I posted¿
17:34:54 <jalb66> So, you must make cd to the directory
17:35:12 <Hapssmak2> I did cd to the fastboot directory
17:35:24 <Hapssmak2> I can see my device by using fastboot  devices
17:35:37 <jalb66> And it was flash-all.bat there?
17:36:12 <Hapssmak2> Yes, the flash-all.bat is in there. Getting the error when I write flash-all.bat into the CMD
17:36:47 <jalb66> Powershell?
17:37:04 <Hapssmak2> Will try in a moment. Do it work the same way? Same commands etc
17:37:13 <Hapssmak2> I'm not too technical, but trying to learn :)
17:37:18 <jalb66> Yes
17:37:56 <jalb66> Maybe ./ doesn't work in legacy command prompt, only in powershell
17:38:09 <jalb66> I used GNU/Linux but I read the guide about Windows
17:38:24 <jalb66> So that could be your problem
17:38:25 <Hapssmak2> Thanks, I will try and report back in 5-10 minutes
17:38:28 <jalb66> ok
17:44:23 <mxnorvak[m]> I guess Wire made it easier for users to not even consider it as a secure messenger
17:44:59 <dallemon[m]> strcat (@strcat:matrix.org): cool, I understand, but thanks for being specific. :)
17:48:34 <blacklight447[m]> https://wire.com/en/blog/new-partnership-to-bring-secure-android-communications/
17:49:05 <blacklight447[m]> Okay wtf
17:49:37 <jalb66> blacklight447[m], looool
17:49:49 <mxnorvak[m]> <blacklight447[m] "https://wire.com/en/blog/new-par"> Yeah that's what i mean
17:50:40 <jalb66> Bad step from Wire
17:51:09 <jcpicard32[m]> "Essentially, CopperheadOS presents such invincible obstacles that attackers lack the resources to gain entry; and if they do, they are unable to do damage or extract information."
17:51:17 <jcpicard32[m]> Citation needed
17:51:30 <jalb66> I don't want even to use that name...
17:51:44 <jcpicard32[m]> Yeah honestly same
17:52:07 <jcpicard32[m]> This is awful. Well there's one more piece of software to recommend people not use
17:52:13 <jalb66> Yeah
17:55:41 <yekip[m]> Damn I wish i could find a good replacement for Wire!
17:55:53 <yekip[m]> I think someone told me before in here that Graphene does a certain amount of protection around each app to stop them spying on other apps and data on the device. is that right?
17:57:48 <cn3m[m]> <yekip[m] "I think someone told me before i"> Yes and no. It will be better after Android 11. Though it's much better than regular Android right now
18:01:23 <yekip[m]> cool thanks.
18:01:57 <yekip[m]> i can't find an alternative to Tape A Call so just gonna have to use it unfortunately. hoping graphene at least gives me a bit better protection than otherwise
18:02:05 <cn3m[m]> GrapheneOS has very small issues with the sandbox so I'm very happy with it
18:03:04 <cn3m[m]> I run a lot of proprietary apps, but I also check the hidden permissions
18:05:09 <cn3m[m]> <notmyname723[m] "what's a good way of doing so?"> Stanley
18:05:14 <yekip[m]> <cn3m[m] "I run a lot of proprietary apps,"> How do you "check hidden permissions"? Reading the code or something I could do myself?!
18:05:51 <cn3m[m]> <yekip[m] "How do you "check hidden permiss"> Stanley
18:06:55 <cn3m[m]> The main one I look for is reading all packages. I'm not comfortable with that. There should be some improvements with Android 11, but they aren't full
18:08:15 <Hapssmak2> jalb66, I can't even use fastboot in PowerShell
18:08:18 <cn3m[m]> <notmyname723[m] "link to read more about it?"> It's an app it's easy
18:08:27 <Hapssmak2> fastboot : The term 'fastboot' is not recognized as the name of a cmdlet, function, script file, or operable program. C
18:08:28 <Hapssmak2> CommandNotFoundException
18:09:12 <cn3m[m]> It can also show trackers manually, but it's not as easy or effective as Exodus Privacy
18:10:15 <Hapssmak2> It's telling me fastboot is too old, but I run latest version
18:10:19 <cn3m[m]> <notmyname723[m] "so reading code?"> It's an app that checks this stuff in a big list just try it
18:14:31 <cn3m[m]> Yes proof_jr
18:16:22 <Hapssmak2> Nevermind, just ran each command one at a time manually and it worked
18:17:49 <Hapssmak2> Thanks anyway
18:25:30 <dazinism> proof_jr: think not
18:27:35 <jalb66> Hapssmak2, sorry I was having dinner
18:29:22 <jalb66> Did you manage to make it work with powershell and follow all the steps in the guide?
18:29:37 <jalb66> You only need to follow it and be careful
18:29:57 <jalb66> IF something doesn't work repeat it all with powershell
18:33:47 <nickcalyx[m]> Profiles were never considered when building seedvault
18:38:21 <radixed9[m]> https://wire.com/en/blog/new-partnership-to-bring-secure-android-communications/ what is this about? Bad as it sounds?
18:40:20 <strcat[m]> radixed9: James successfully duping more people
18:40:30 <strcat[m]> nothing new really
18:41:04 <strcat[m]> doesn't sound like anything more than a sham partnership aimed at giving both sides positive press
18:41:06 <strcat[m]> except for Wire it's going to be very negative
18:41:34 <strcat[m]> all they're doing is lending their name to a fraudster so he can piggyback off it and dupe more people
18:42:09 <yekip[m]> haha
18:42:11 <yekip[m]> damn, what is it with apkpure pushing this xapk stuff, which of course needs their app?! smells fishy to me
18:42:54 <cn3m[m]> <radixed9[m] "https://wire.com/en/blog/new-par"> Copperhead is taking advantage of another good open source project with their malicious ways
18:43:09 <radixed9[m]> Anything I can do? strcat: cn3m ?
18:45:42 <jcpicard32[m]> radixed9: I'm working on writing something to them right now. If you want to join me in starting backlash on twitter and other platforms that would be great
18:46:31 <Kurai> is wire actually good? I remember reading that it was sold or something
18:47:20 <radixed9[m]> Wire is reasonably good. They are good guys getting duped
18:52:06 <yekip[m]> <strcat[m] "except for Wire it's going to be"> Yep, I had high hopes of Wire coming back from recent issues and maybe heading back towards the top (Signal area!) for trust among their users. Fat chance of that now :(
18:52:07 <F[m]> Commenting on that on twitter got me on the elusive list of people blocked by "the J". I'm not really surprised that the way things get handled :D
18:52:07 <F[m]> I like(d) wire for a few reasons (mainly because it's not phone-bound in the way signal is), so it's somewhat sad to witness.
18:53:09 <cn3m[m]> Don't attack Wire this is all on Copperhead
18:53:48 <dallemon[m]> strcat (@strcat:matrix.org): build seems to be progressing nicely. :)
18:54:11 <yekip[m]> <Kurai "is wire actually good? I remembe"> superb imo
18:54:31 <yekip[m]> unbeatable in fact, for features and ease of use (for dummies, who i need to convince to install and use!)
18:54:33 <yekip[m]> damn this android stuff boils my brain. I have installed 5 differnt APKs now, every one of them fail to open when i try
18:54:57 <cn3m[m]> We want Wire to be able to distance and recover
18:54:58 <yekip[m]> hear hear
18:57:46 <F[m]> @cn3m hm, fair point I guess, as long as it's really just a "PR partnership" only.
18:57:48 <joshman[m]> <radixed9[m] "https://wire.com/en/blog/new-par"> Friends will be friends
19:01:21 <yekip[m]> hehe yeah
19:01:25 <madaidan[m]> <cn3m[m] "Don't attack Wire this is all on"> Their fault for not doing their due diligence
19:01:47 <yekip[m]> *yekip sings "i'll be there for yoooooo"....
19:02:30 <cn3m[m]> <madaidan[m] "Their fault for not doing their "> I'd like them to reverse course on this
19:07:07 <altoslos[m]> Oh woah copperhead sounds awesome
19:07:08 <EssentialChaos[m> @altoslos:tchncs.de: You forgot '/s'?
19:07:09 <yekip[m]> <madaidan[m] "Their fault for not doing their "> yes thats what bothers me, as a fairly heavy and enthusiastic Wire user in the past, and still now until i find a replacememt. That's two strikes for me now - first they made those changes in ownership without telling users, now they can't even check out (or did, which is worse) prospective PR partners. going downhill fast, like a zip wire ;(
19:08:42 <altoslos[m]> Don't let politics affect your software decision. Code and end product is what matters at the end of the day
19:08:45 <altoslos[m]> Kind of like how you shouldn't not like certain music just because you don't like the artist imo
19:08:47 <yekip[m]> assume that wasn't for me?
19:10:09 <yekip[m]> <altoslos[m] "Kind of like how you shouldn't n"> HItler played a mean Banjo. You gonna buy the records? hahahah
19:10:10 <cn3m[m]> Copperhead has no limits on what they will do
19:11:19 <joshman[m]> Wire, WhatsApp, Session, Criptext. What binds them? Question
19:12:05 <cn3m[m]> <yekip[m] "HItler played a mean Banjo. You "> That's a great comeback
19:12:06 <yekip[m]> There wasn't a shred of politics in what I said. It was a judgement of their integrity, and how I (subjectively) guage it. that's just normal behaviour. i have no idea what their politics is. But their ethics has niggled me once, I over looked it, now I am being asked to again. One more strike and they are out for me. I can't read code, so perhaps I have to place more importance on trust than code, which is a handicap
19:12:06 <yekip[m]> for me no doubt
19:14:00 <altoslos[m]> <yekip[m] "HItler played a mean Banjo. You "> Don't be silly... I bought his art instead!
19:14:03 <EssentialChaos[m> <joshman[m] "Wire, WhatsApp, Session, Criptex"> Proprietary server-side? Although Session is decentralized
19:14:05 <yekip[m]> <altoslos[m] "Don't be silly... I bought his a"> haha, good for you. I hated his art, but as a man, he was such a gent. oops, the ban shadows are looming large again. :D
19:15:08 <joshman[m]> <EssentialChaos[m "Proprietary server-side? Althoug"> Freaking SIGNAL protocol. Why on Earth would I ever use a downstream app?
19:16:15 <altoslos[m]> That's essentially their politics
19:16:16 <altoslos[m]> Also what does niggled mean lol
19:16:24 <yekip[m]> hahah. "bothered". more like "needled" really
19:16:43 <EssentialChaos[m> <joshman[m] "Freaking SIGNAL protocol. Why on"> Ah, yes
19:16:43 <yekip[m]> <altoslos[m] "That's essentially their politic"> don't be silly!
19:16:54 <yekip[m]> thats their behaviour. and my interpretation of it (my very unqualified and unskilled one too, but its the only one i have :D )
19:16:56 <yekip[m]> i just had an idea
19:17:19 <yekip[m]> is it possible to block one particular app from having any internet access?
19:17:21 <cn3m[m]> <joshman[m] "Freaking SIGNAL protocol. Why on"> Enjoy chrome. I'll stick with Vanadium thanks
19:17:32 <joshman[m]> Signal for Wire is as GrapheneOS is to Copperhead. I'll never use neither
19:17:32 <Manouchehri> TheJollyRoger: did you order the 4 or 4 XL?
19:17:43 <joshman[m]> * Signal for Wire is as GrapheneOS is to Copperhead. I'll never use eitherer
19:18:44 <joshman[m]> <cn3m[m] "Enjoy chrome. I'll stick with Va"> No Sir. I'll enjoy Chromium instead
19:20:41 <altoslos[m]> As long as wire is FOSS, I don't see the issue. They're merely the authors of something that is public domain
19:20:41 <EssentialChaos[m> <cn3m[m] "Enjoy chrome. I'll stick with Va"> Chromium*
19:20:43 <altoslos[m]> <yekip[m] "is it possible to block one part"> Yeah graphene has network permissions you can deny an app
19:20:55 <yekip[m]> If so I will just take the plunge and install something like this - https://apkpure.com/call-recorder-cube-acr/com.catalinagroup.callrecorder, and block it from the net
19:21:00 <altoslos[m]> I'm patiently waiting for calyx to add network permission blocking instead, it's the only thing I really miss from graphene
19:21:19 <yekip[m]> settings/network - ?
19:21:20 <yekip[m]> cant see apps in there
19:21:33 <Manouchehri> yekip[m]: I haven't used it on Android, but I like Groudwire on iOS.
19:21:47 <altoslos[m]> If you're on graphene it's in the permission manager
19:21:49 <altoslos[m]> You deny network permission like you would something like camera permission, etc
19:21:54 <yekip[m]> ah, great thanks.
19:22:40 <altoslos[m]> it's the same menu
19:22:40 <yekip[m]> crikey, 55 apps with network permission
19:22:45 <cn3m[m]> It's not entirely leak proof, but it's decent
19:22:46 <yekip[m]> calendar, calendar storage...... i can probably turn many of these off
19:22:51 <cn3m[m]> It's by far the strongest firewall
19:22:52 <yekip[m]> i am feeling cleaner by the second!
19:22:57 <yekip[m]> and I didn't even buy Hitler's art - HA HA HA
19:23:32 <altoslos[m]> I always turn off internet access for stuff like my keyboard
19:23:38 <altoslos[m]> Not yet anyways-
19:23:58 <yekip[m]> never heard of groundwire
19:24:24 <yekip[m]> <altoslos[m] "I always turn off internet acces"> yes, why does the bloody camera want access to the internet!
19:24:52 <Manouchehri> does SIP in Android support TLS?
19:26:01 <yekip[m]> and contacts?
19:26:07 <yekip[m]> i need to be careful before i turn too many off and get a problem
19:27:19 <yekip[m]> I think I might need some of this Groundwire stuff. I finally found it - https://groundwire.echoglobal.org/chat/Groundwire
19:27:21 <yekip[m]> 🤪
19:28:04 <Manouchehri> https://www.acrobits.net/sip-client-ios-android/
19:33:42 <yekip[m]> oh man, you sound like me on a very upbeat day. hahahaha
19:34:17 <yekip[m]> Well i turned a shit load of permissions off for network access, but didn't if i wasnt sure. feel better already. time for a coffee, smoke and a smile at my even more private phone. :o)
19:35:01 <yekip[m]> and I still haven't chosen between profiles and users yet!!
19:36:40 <joshman[m]> Dude, you're flooding the room
19:44:02 <yekip[m]> my apologies
19:55:10 <yekip[m]> I was told a while back that alerts can come through to main user account from secondary accounts. is that true? for example if I had a second Signal installation in second user, would it ping in main user account?
19:58:17 <jcpicard32[m]> I finished drafting my letter. Is anyone interested in taking a look?
20:04:03 <cn3m[m]> <jcpicard32[m] "I finished drafting my letter. I"> Sure
20:06:18 <jcpicard32[m]> cn3m: I just DM'd you. I don't want to clog the main chat just yet, but I'll post it here as well if there's enough interest
20:19:58 <yekip[m]> if this is re the Wire thing dm me too pleae
20:33:33 <jiibus[m]> I definitely like the whole UX of Wire more than Signal, but had to put it to the side with Graphene since it needs GSF to work
20:33:44 <jiibus[m]> Looks like it was a timely change lol
20:35:13 <blacklight447[m]> Btw
20:35:42 <blacklight447[m]> I just reached out to tutanota
20:35:44 <blacklight447[m]> See if they can cancel their partnership
20:36:17 <blacklight447[m]> Im considering doing the same with wire
20:36:24 <dallemon[m]> <jiibus[m] "I definitely like the whole UX o"> It works fine without GSF. Personally I finally switched my last contact over Signal as Wire was getting damn slow. This is just the final nail in the coffin not to go back.
20:36:44 <jiibus[m]> <dallemon[m] "It works fine without GSF. Perso"> I tried installing it through the aurora store, couldn't even log in.
20:38:01 <dallemon[m]> Been using it for at least 14+ months without any real issues on GrapheneOS
20:38:18 <jiibus[m]> Hm. Interesting. Oh well, doesn't matter now.
20:39:42 <dallemon[m]> <jiibus[m] "Hm. Interesting. Oh well, doesn'"> Haha I agree :)
20:41:43 <dallemon[m]> 40% of build done. I assume it won't finish before I go to bed.
20:41:52 <jiibus[m]> I know a bit about the schism which led to Graphene via some reddit threads, but I don't fully understand why Copperhead carries such a negative connotation. Is it focused around the James dude as a person?
20:43:28 <strcat[m]> jiibus: he totally betrayed the project and went back on our agreements
20:43:36 <strcat[m]> and blew up the OS as it existed then with his takeover attempt
20:43:48 <jiibus[m]> Yea, that's the bit I read about
20:43:59 <strcat[m]> I archived everything and kept maintaining pieces of it
20:44:12 <strcat[m]> and then made hardened_malloc, made Auditor much better
20:44:15 <strcat[m]> and put back together the OS slowly
20:44:29 <strcat[m]> it's still far from being fully revived
20:44:29 <jiibus[m]> Well kudos to you dude.
20:44:32 <strcat[m]> there are major missing pieces
20:44:36 <jiibus[m]> I'm enjoying it as whole
20:44:50 <strcat[m]> I used to do a lot more work on it than I am able to do now
20:44:57 <jiibus[m]> Such is life
20:45:16 <strcat[m]> could support new devices in a month not half a year
20:45:22 <strcat[m]> developed features much faster
20:45:35 <strcat[m]> just so much time and energy wasted dealing with other things now
20:45:38 <strcat[m]> it's much harder now
20:45:48 <jcpicard32[m]> jiibus: https://github.com/Peter-Easton/GrapheneOS-Knowledge/tree/master/Twitter%20and%20Reddit
20:45:58 <jcpicard32[m]> Is a pretty good resource that documents a lot of what happened
20:46:10 <jiibus[m]> Thanks!
20:47:19 <jiibus[m]> strcat: is the lack of time due to you needing to work a normal job to bring that cheddar in?
20:47:41 <strcat[m]> needing to deal with the endless attacks on the projects mostly
20:47:53 <jiibus[m]> Shitty
20:49:02 <madaidan[m]> <jiibus[m] "strcat: is the lack of time due "> James launches constant attacks on the project
20:49:16 <madaidan[m]> You can be sure he's reading these messages too
20:49:24 <madaidan[m]> (hi james)
20:50:44 <jiibus[m]> When you say attack, what does that mean, exactly?
20:51:06 <jcpicard32[m]> jiibus: James spreads a lot of misinformation about GrapheneOS
20:51:20 <jcpicard32[m]> In order to promote people into buying his scam phones
20:51:29 <jiibus[m]> Damn. Well petty people are gonna be petty.
20:51:53 <jcpicard32[m]> Other people see this, and take other events from Daniel's past out of context
20:51:59 <jcpicard32[m]> They use these to launch character attacks
20:52:15 <jiibus[m]> The good ole adhom, tool of the moron
20:52:17 <jcpicard32[m]> There's a lot of misinformation about the project and Daniel on places like /r/privacy and /r/ptio
20:52:18 <madaidan[m]> <jiibus[m] "When you say attack, what does t"> Legal battles, misinformation campaigns, etc.
20:52:33 <madaidan[m]> A recent example would be him brainwashing Wire
20:52:37 <jcpicard32[m]> He's also threatened legal action against people like Renlord, who help with development
20:52:52 <jiibus[m]> jesus
20:54:16 <jiibus[m]> Well regardless, you're still kickin ass with this strcat
20:54:56 <jiibus[m]> And the rest of you who contribute
20:56:51 <blacklight447[m]> <jcpicard32[m] "There's a lot of misinformation "> Generally, we are very pro graphene os
20:57:21 <jcpicard32[m]> Ah. Sorry for saying that then. I haven't visited in some time, but last I was there I remember there being several attacks on him
20:57:22 <jcpicard32[m]> My appologies
20:57:51 <blacklight447[m]> James is even banned from our sub
20:57:56 <madaidan[m]> Reddit in general is a cesspool
20:58:03 <blacklight447[m]> Outside of /r/grapheneos, i think our sub is one of the most graphene friendly ones, lol
20:58:05 <jcpicard32[m]> That's a new development to me too
20:58:08 <jcpicard32[m]> Thanks so much for the updated information
20:58:11 <jiibus[m]> That's an understatement madaidan.
21:00:22 <blacklight447[m]> <jcpicard32[m] "Ah. Sorry for saying that then. "> That was made by the guy named theanonymousejoker
21:01:17 <jiibus[m]> Didn't that guy make some weird subreddit because he got banned from all the big privacy ones?
21:02:11 <blacklight447[m]> Whom is now banned
21:02:12 <blacklight447[m]> Luckly our community member cn3m  has done a lot of work spreading the truth
21:02:19 <madaidan[m]> <jiibus[m] "Didn't that guy make some weird "> yes
21:02:24 <madaidan[m]> He's crazy
21:02:44 <jcpicard32[m]> blacklight447: Good to know. Glad to see that actions are being taken to stop that. Sorry again for speaking ill of the sub.
21:02:46 <jiibus[m]> Ah yea, i saw his wacked out post trying to call out the mods of r/privacy and r/privacytoolsio
21:03:01 <madaidan[m]> He always goes on tantrums, firing around random insults and spreading FUD while pretending he is the one being attacked
21:03:41 <madaidan[m]> 99% of what he says is complete nonsense
21:04:13 <jiibus[m]> Yea, his post would definitely point to some brain imbalance
21:05:02 <blacklight447[m]> <jcpicard32[m] "blacklight447: Good to know. Gla"> Thats okay
21:05:58 <blacklight447[m]> Im not a big fan of our sub mostly because i dislike reddit as a whole
21:06:25 <cn3m[m]> <blacklight447[m] "Generally, we are very pro graph"> I can second that. I'm a PTIO guy. Been there longer. Very pro GrapheneOS.
21:06:31 <blacklight447[m]> But we have it out there as a means of exposure
21:06:37 <blacklight447[m]> And we moderate accordingly
21:06:56 <blacklight447[m]> <madaidan[m] "He always goes on tantrums, firi"> He thinks you and cn3m are the same guy
21:07:29 <madaidan[m]> <blacklight447[m] "He thinks you and cn3m are the s"> Everyone who disagrees with him is _obviously_ the exact same shill
21:07:44 <madaidan[m]> Meanwhile he has a whole bunch of alts
21:09:01 <EssentialChaos[m> > He thinks
21:09:01 <EssentialChaos[m> Press X to doubt
21:09:08 <cn3m[m]> <blacklight447[m] "He thinks you and cn3m are the s"> Apparently me idea of fun is arguing with myself and coding and using Reddit at the same time
21:09:31 <cn3m[m]> <madaidan[m] "Meanwhile he has a whole bunch o"> That's the ironic part
21:10:50 <EssentialChaos[m> > fun is arguing with myself
21:10:51 <EssentialChaos[m> There's nothing wrong with that
21:10:51 <blacklight447[m]> Its quite annoying, hes activly spreading misinformation, meanwhile hes shitting on our work were we actually try and give good recommendations
21:11:04 <BalooRJ> Is anyone else using KDE Connect with GrapheneOS
21:11:14 <BalooRJ> Trying to figure out how to get SMS notifications pushed to my Debian desktop
21:11:28 <BalooRJ> I've got KDE Connect set up and it recognizes Signal notifications, but not SMS from Silence for some reason
21:11:38 <blacklight447[m]> Vetted ones, with clear criteria and transparency
21:11:40 <BalooRJ> not sure if this is a problem with the Silence app, or a problem with the KDE Connect package on Debain
21:11:41 <blacklight447[m]> ( i know were not perfect but we are constantly improving)
21:11:47 <cn3m[m]> strcat can we get an official statement on Omerta Phones?
21:12:10 <cn3m[m]> If anyone is interested in weighing in I just saw this post https://www.reddit.com/r/privacytoolsIO/comments/h9onyx/need_a_secure_phone_for_wickr/
21:12:27 <madaidan[m]> I'm immediately skeptical of any fancy "secure" hardware
21:12:43 <madaidan[m]> Lmao their website
21:12:54 <madaidan[m]> "military grade encryption"
21:13:09 <cn3m[m]> <blacklight447[m] "( i know were not perfect but we"> The more I learn about your process the more I respect the work even though I'm a pretty vocal critic of many choices
21:13:11 <yekip[m]> <madaidan[m] "I'm immediately skeptical of any"> Security begins with scepticism
21:13:43 <cn3m[m]> <madaidan[m] "I'm immediately skeptical of any"> Omerta Phones are extremely secure if you can trust the people loading them
21:14:21 <madaidan[m]> Looks like a scam piggybacking off GrapheneOS
21:14:30 <cn3m[m]> They are just a Pixel 3a with GrapheneOS for $2700
21:14:32 <cn3m[m]> Damn I'm in the wrong business
21:14:59 <cn3m[m]> You absolutely should avoid them, but they have solid tech backing them up
21:15:11 <jcpicard32[m]> I've never heard of Omerta. Looking at their website I should drop out of my MS program
21:15:20 <jcpicard32[m]> I'd have a goldmine selling GOS handsets
21:17:06 <strcat[m]> cn3m: well it isn't our partner
21:17:18 <strcat[m]> I have too many problems already  to deal with this kind of thing, essentially
21:17:55 <cn3m[m]> I always am as critical as I can be of them on the subreddit as I can be without an official position
21:18:11 <strcat[m]> cn3m: I dunno what to do about this stuff atm
21:18:47 <strcat[m]> the code is open source, that doesn't really apply to trademark usage
21:18:51 <cn3m[m]> <strcat[m] "I have too many problems already"> Okay I'll just say I don't recommend them and that they aren't associated with the project. What I normally do
21:18:57 <blacklight447[m]> Im wearing this as a badge of honour now
21:19:31 * blacklight447[m] uploaded an image: Screenshot_20200615-231816.png (224KB) < https://matrix.org/_matrix/media/r0/download/privacytools.io/ileoUbdxDLDDKWMHCwTpjHSW >
21:19:56 <madaidan[m]> <notmyname723[m] "hopefully those that do their re"> I have seen time and time again that people don't do research
21:21:19 <EssentialChaos[m> <notmyname723[m] "strcat: maybe add a warning on y"> Add a partners page, which people could use as a reference
21:21:20 <cn3m[m]> <blacklight447[m] "Screenshot_20200615-231816.png"> You're a hero
21:21:34 <madaidan[m]> I got banned too :(
21:21:47 <cn3m[m]> <madaidan[m] "I have seen time and time again "> Before spending $3k on a phone? I hope not. Via the love the side effect of the anti Apple crusade
21:22:43 <cn3m[m]> * Before spending $3k on a phone? I hope not. Gotta love the side effect of the anti Apple crusade
21:23:27 <dallemon[m]> I'm sure their main target is enterprise
21:24:19 <dallemon[m]> Companies often overpay for stuff because it seems more legit if it is expensive
21:24:34 <blacklight447[m]> <cn3m[m] "You're a hero"> Nah, just a honest dude
21:26:58 <jcpicard32[m]> I replied to that guy's comment. I hope I can stop someone from spending $3000+ on a phone. Unless they're paying me to design it for them :)
21:29:32 <madaidan[m]> <cn3m[m] "Before spending $3k on a phone? "> Just look at the people buying the Librem phones/laptops
21:29:39 <madaidan[m]> Massively overpriced garbage
21:33:24 <cn3m[m]> <jcpicard32[m] "I replied to that guy's comment."> Yeah I'll sell him my current phone for $3k
21:34:08 <jcpicard32[m]> Yeah honestly
21:34:22 <jcpicard32[m]> That's like 4 months rent + groceries
21:36:38 <cn3m[m]> I would throw in a fake skin too
21:36:38 <cn3m[m]> I'd even throw in a case
21:40:51 <greenmoon[m]> I remember the omerta guy wanted to make a boot animation for grapheme but it was kinda ugly 😅
21:42:52 <greenmoon[m]> * I remember the omerta guy wanted to make a boot animation for graphene but it was kinda ugly 😅
22:17:56 <anne232> does graphene os have disk encryption? thats a pretty important feature to me
22:23:03 <greenmoon[m]> Any android phone have it since several years and it's File Based Encryption to be exact, android don't use Full Disk Encryption anymore. https://source.android.com/security/encryption/file-based
22:24:22 <anne232> ok greenmoon[m] , but how secure is the encryption actually? what are the specifics of it.
22:24:27 <anne232> Like if it's something google makes, should it really be trusted?
22:25:20 <madaidan[m]> <anne232 "ok greenmoon , but how secure is"> You were given a link about the specifics.
22:25:39 <madaidan[m]> <anne232 "Like if it's something google ma"> There's no evidence for it being faulty and Google has a great security track record.
22:25:44 <greenmoon[m]> It's very secure
22:29:25 <anne232> I think I had seen that link before. I already know what file based encryption is. But I guess it does give more info.
22:29:35 <anne232> And I'm talking more so along the lines of backdoors.
22:30:07 <anne232> I don't think if someone stole my phone they'd be able to access it no matter how hard they tried probably. I'm more concerned about whether or not an adversary could access it if they wanted to.
22:30:47 <madaidan[m]> <anne232 "And I'm talking more so along th"> Feel free to prove it because so far, the world's greatest security experts haven't been able to.
22:31:20 <madaidan[m]> There's 0 evidence of a backdoor in AOSP.
22:31:30 <anne232> Okay, that's good enough for me.
22:31:46 <anne232> I just wasn't sure about something google made protecting me lol
22:31:50 <anne232> thank you
22:34:54 <TheJollyRoger> anne232: hang on a second, I'll get you a bit of reading...
22:35:56 <TheJollyRoger> anne232: https://github.com/Peter-Easton/GrapheneOS-Knowledge/blob/master/GrapheneOS-Security-Q%26A.md#does-graphene-allow-me-to-nuke-my-data-if-say-the-phone-gets-ten-incorrect-guesses-at-the-pincode
22:36:39 <TheJollyRoger> The phone uses AES-256-XTS for the data, and AES-256-HEH (Hash-Encrypt-Hash) for the metadata.
22:40:27 <TheJollyRoger> It can be used with confidence.
22:44:51 <anne232> thanks TheJollyRoger, interesting read
22:45:20 <TheJollyRoger> Anytime!
22:53:43 <anne232> What device should i go with? looking for something that has sd card support, will be supported for a long time and is like less than 300$, prefer like 250ish. does anyone have suggestions?
22:54:09 <TheJollyRoger> Pixel 3a and wait until they go on sale or shop around and look for a bargain.
22:54:20 <anne232> alright thanks
22:54:29 <anne232> they go on sale often? it a popular phone?
22:55:55 <TheJollyRoger> They're very popular, probably one of Google's most popular devices. The one thing you do have to watch for though is if you intend to run GrapheneOS on it, you /must/ contact the seller and make sure they can confirm to you straight-faced that the "OEM Unlocking" setting found under Developer Options (accessible by tapping Build ID in the System Settings ten times very quickly) is not grayed
22:55:57 <TheJollyRoger> out.
22:56:17 <TheJollyRoger> (if you get it from a third-party retailer. Devices purchased through the Google Store are always unlocked)
22:57:32 <TheJollyRoger> Most retailers will (sometimes deliberately try to) confuse *carrier* unlocking, where the phone's modem is not locked to a particular carrier, with *bootloader* unlocking, where the phone's bootloader security features can be toggled on or off by the user to allow installation of non-vendor operating systems or debugging.
22:57:46 <TheJollyRoger> So be sure to ask first.
22:58:13 <TheJollyRoger> *ask, and confirm first and ensure the seller will accept a return/refund if the phone turns out to be bootloader locked.
22:59:12 <greenmoon[m]> Wow that omerta site is full of third party trackers and fingerprinting
22:59:25 <TheJollyRoger> I would *not* attempt to source a Pixel 2, because those phones are going to become poptarts in very short order because Qualcomm's agreed-upon support period is ending.
23:24:38 <nickcalyx[m]> I don't think I've ever encountered a phone seller who knew what bootloader unlocking was
23:28:52 <TheJollyRoger> I found that if I spelled out how to access the developer options and whether OEM unlocking was grayed out or not, if they got back to me, they'd usually answer that question...
